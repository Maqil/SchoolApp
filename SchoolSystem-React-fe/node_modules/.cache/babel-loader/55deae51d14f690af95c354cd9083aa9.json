{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/pages/ContactForm/ContactForm.tsx\",\n    _s = $RefreshSig$();\n\n// we have to install @mui/style to get this to work, when the dropzone is available please remove this.\n// @mui/style is not compatible with react 18 and it was depracated on mui 5.\nimport { DropzoneArea } from \"react-mui-dropzone\";\nimport { MenuItem, Grid, Typography, Alert } from \"@mui/material\";\nimport { makeValidate, showErrorOnBlur, makeRequired } from \"mui-rff\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"i18next\";\nimport { Form } from \"react-final-form\";\nimport { ContactFormBox, ContactTextField, SubmitButton, FileUpload, ContactFormHeader } from \"./ContactForm.style\";\nimport { ContactFormSchma } from \"../../schema/ContactFormSchema\";\nimport { TabTitle } from \"../../utils/GeneralFunctions\";\nimport { useContactForm } from \"../../providers/ContactFormProvider\";\nimport Confirmation from \"../../components/Confirmation/Confirmation\";\nimport { ReactComponent as CloudUpload } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/cloud-upload.svg\";\nimport { useParams } from \"react-router-dom\";\nimport Compressor from 'compressorjs';\n/*\n * Uses the optional helper makeValidate function to format the error messages\n * into something usable by final form.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validate = makeValidate(ContactFormSchma, error => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"error\",\n    children: i18n.t(error.message)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n});\nconst required = makeRequired(ContactFormSchma);\n\nconst ContactForm = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  TabTitle(t(\"form-contact.meta.header.browser-tab-title\"));\n  const {\n    submitFormValues\n  } = useContactForm();\n  const contactFormContext = useContactForm();\n  const [alertState, setAlertState] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [selectedCase, setSelectedCase] = useState(\"\");\n  const [submittedValues, setSubmittedValues] = useState(undefined);\n  const [file, setFile] = useState([]);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [trackingValue, setTrackingValue] = useState(\"\");\n  const params = useParams();\n  useEffect(() => {\n    if (params && params.trackingId) {\n      if (selectedCase !== \"Portal - e-Tailer: Follow-up on an existing case\") {\n        setTrackingValue(params.trackingId);\n      } else {\n        setTrackingValue(\"\");\n      }\n    }\n  }, [params, trackingValue, selectedCase, contactFormContext.loading]);\n\n  const handleTrackingChange = event => {\n    setTrackingValue(event.target.value);\n  };\n\n  const handleIssueTypeChange = event => {\n    setSelectedCase(event.target.value);\n  };\n\n  const initialValues = {\n    issueType: \"\",\n    trackingNumber: \"\",\n    description: \"\"\n  };\n\n  const onSubmit = async values => {\n    values.issueType = selectedCase;\n    values.trackingNumber = trackingValue;\n    setAlertState(false);\n    setAlertMessage(\"\");\n    setSubmittedValues(values);\n    const res = await submitFormValues(values, file);\n\n    if ((res === null || res === void 0 ? void 0 : res.success) === undefined && res !== null && res !== void 0 && res.status.includes(\"ERROR\")) {\n      console.log(\"undefined\");\n      setShowConfirmation(false);\n      setAlertState(true);\n\n      if (res !== null && res !== void 0 && res.message.errors) {\n        setAlertMessage(res === null || res === void 0 ? void 0 : res.message.errors[0].description);\n      } else if (res !== null && res !== void 0 && res.message.isArray) {\n        console.log(\"res?.message.isArray\");\n      } else {\n        setAlertMessage(res === null || res === void 0 ? void 0 : res.message);\n      }\n    } else if (res === undefined) {\n      setShowConfirmation(false);\n    } else if ((res === null || res === void 0 ? void 0 : res.success) === true && (res === null || res === void 0 ? void 0 : res.errors.length) === 0) {\n      setShowConfirmation(true);\n    } else {\n      setShowConfirmation(false);\n    }\n  };\n\n  const handleFileChange = files => {\n    if (files[0]) {\n      if (files[0].type.includes(\"image/\")) {\n        new Compressor(files[0], {\n          quality: 0.6,\n          success: res => {\n            setFile(res);\n          },\n          error: err => {\n            console.debug(\"ERROR: file compression failed \", err.message);\n          }\n        });\n      } else {\n        setFile(files[0]);\n      }\n    } else {\n      setFile([]);\n    }\n  };\n\n  const acceptedFileFormat = [\"image/*\", \".pdf\", \".doc\", \".xls\", \".rtf\", \".docx\", \".xls\", \".xlsx\", \".xlsm\", \".ppt\", \".pptx\", \".pptm\", \".xml\", \".csv\"];\n\n  const handleFileDrop = (files, rejectedFiles) => {};\n\n  const issuesType = [{\n    key: \"Portal - e-Tailer: Label issues\",\n    value: t(\"form-contact.block-form.input.list.label-issue\")\n  }, {\n    key: \"Portal - e-Tailer: Booking Issues\",\n    value: t(\"form-contact.block-form.input.list.booking-issues\")\n  }, {\n    key: \"Portal - e-Tailer: Follow-up on an existing case\",\n    value: t(\"form-contact.block-form.input.list.follow-up\")\n  }, {\n    key: \"Portal - e-Tailer: Tracking\",\n    value: t(\"form-contact.block-form.input.list.tracking\")\n  }, {\n    key: \"Portal - e-Tailer: Technical Issue\",\n    value: t(\"form-contact.block-form.input.list.technical\")\n  }, {\n    key: \"Portal - e-Tailer: General Feedback\",\n    value: t(\"form-contact.block-form.input.list.general-feedback\")\n  }, {\n    key: \"Portal - e-Tailer: Address change/correction\",\n    value: t(\"form-contact.block-form.input.list.address-change\")\n  }, {\n    key: \"Portal - e-Tailer: New claim\",\n    value: t(\"form-contact.block-form.input.list.open-claim\")\n  }];\n\n  const renderTrackingElement = () => {\n    if (selectedCase === \"Portal - e-Tailer: Label issues\" || selectedCase === \"Portal - e-Tailer: General Feedback\" || selectedCase === \"Portal - e-Tailer: Tracking\" || selectedCase === \"Portal - e-Tailer: Technical Issue\" || selectedCase === \"Portal - e-Tailer: Follow-up on an existing case\" || selectedCase === \"Portal - e-Tailer: Address change/correction\" || selectedCase === \"Portal - e-Tailer: New claim\") {\n      return /*#__PURE__*/_jsxDEV(ContactTextField, {\n        label: selectedCase === \"Portal - e-Tailer: Follow-up on an existing case\" ? t(\"form-contact.block-form.input.list.case-number\") : selectedCase === \"Portal - e-Tailer: Label issues\" || selectedCase === \"Portal - e-Tailer: Technical Issue\" || selectedCase === \"Portal - e-Tailer: General Feedback\" ? t(\"form-contact.block-form.input.list.tracking-number-optional\") : t(\"form-contact.block-form.input.list.tracking-number\"),\n        id: \"trackingNumber\",\n        name: \"trackingNumber\",\n        variant: \"filled\",\n        autoComplete: \"name\",\n        value: trackingValue,\n        onChange: handleTrackingChange,\n        InputProps: {\n          disableUnderline: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  };\n\n  const renderDescriptionLabel = () => {\n    switch (selectedCase) {\n      case \"Portal - e-Tailer: Label issues\":\n        return \"form-contact.block-form.input.list.label-issue-description\";\n\n      case \"Portal - e-Tailer: Booking Issues\":\n        return \"form-contact.block-form.input.list.booking-issue-description\";\n\n      case \"Portal - e-Tailer: Follow-up on an existing case\":\n        return \"form-contact.block-form.input.list.follow-up-issue-description\";\n\n      case \"Portal - e-Tailer: Tracking\":\n        return \"form-contact.block-form.input.list.tracking-issue-description\";\n\n      case \"Portal - e-Tailer: Technical Issue\":\n        return \"form-contact.block-form.input.list.technical-issue-description\";\n\n      case \"Portal - e-Tailer: General Feedback\":\n        return \"form-contact.block-form.input.list.feedback-issue-description\";\n\n      case \"Portal - e-Tailer: Address change/correction\":\n        return \"form-contact.block-form.input.list.address-issue-description\";\n\n      case \"Portal - e-Tailer: New claim\":\n        return \"form-contact.block-form.input.list.open-claim-description\";\n\n      default:\n        return \"\";\n    }\n  };\n\n  const renderClassName = () => {\n    if (selectedCase === \"Portal - e-Tailer: Address change/correction\") {\n      return \"textarea-address\";\n    } else if (selectedCase === \"Portal - e-Tailer: Booking Issues\" || selectedCase === \"Portal - e-Tailer: Label issues\" || selectedCase === \"Portal - e-Tailer: Tracking\" || selectedCase === \"Portal - e-Tailer: Technical Issue\") {\n      return \"textarea-medium\";\n    } else return \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!showConfirmation && /*#__PURE__*/_jsxDEV(ContactFormBox, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 10,\n        sx: {\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 5,\n          children: [/*#__PURE__*/_jsxDEV(ContactFormHeader, {\n            component: \"h1\",\n            variant: \"display3\",\n            color: \"fuchsiaAccessible.main\",\n            children: t(\"form-contact.block1.header.page-title\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"p\",\n            variant: \"body1\",\n            children: t(\"form-contact.block1.text.page-description\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: [alertState && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: t(alertMessage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: onSubmit,\n            initialValues: submittedValues ? submittedValues : initialValues,\n            validate: validate,\n            render: _ref => {\n              let {\n                handleSubmit,\n                invalid,\n                submitting,\n                pristine\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                noValidate: true,\n                children: [/*#__PURE__*/_jsxDEV(ContactTextField, {\n                  name: \"issueType\",\n                  id: \"issueType\",\n                  label: t(\"form-contact.block-form.input.placeholder-reason\"),\n                  select: true,\n                  required: required.issueType,\n                  value: selectedCase,\n                  onChange: handleIssueTypeChange,\n                  variant: \"filled\",\n                  InputProps: {\n                    disableUnderline: true\n                  },\n                  children: issuesType.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item.key,\n                    children: item.value\n                  }, item.key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  children: [renderTrackingElement(), (selectedCase === \"Portal - e-Tailer: Label issues\" || selectedCase === \"Portal - e-Tailer: Booking Issues\" || selectedCase === \"Portal - e-Tailer: General Feedback\" || selectedCase === \"Portal - e-Tailer: Tracking\" || selectedCase === \"Portal - e-Tailer: Technical Issue\" || selectedCase === \"Portal - e-Tailer: Follow-up on an existing case\" || selectedCase === \"Portal - e-Tailer: Address change/correction\" || selectedCase === \"Portal - e-Tailer: New claim\") && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(ContactTextField, {\n                      label: t(renderDescriptionLabel()),\n                      id: \"description\",\n                      name: \"description\",\n                      variant: \"filled\",\n                      required: required.description,\n                      multiline: true,\n                      rows: 5,\n                      autoComplete: \"name\",\n                      InputProps: {\n                        disableUnderline: true\n                      },\n                      className: renderClassName(),\n                      showError: showErrorOnBlur\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n                      item: true,\n                      xs: 12,\n                      sm: 12,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        children: selectedCase === \"Portal - e-Tailer: Label issues\" ? t(\"form-contact.block-form.input.list.upload-photo\") : selectedCase === \"Portal - e-Tailer: Follow-up on an existing case\" ? t(\"form-contact.block-form.input.list.follow-up-file\") : selectedCase === \"Portal - e-Tailer: New claim\" ? t(\"form-contact.block-form.input.list.upload-signed-file\") : t(\"form-contact.block-form.input.list.upload-screenshot\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 309,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"p\",\n                        variant: \"caption\",\n                        children: [t(\"form-contact.block-form.input.text.upload-subheading\"), /*#__PURE__*/_jsxDEV(\"a\", {\n                          href: \"mailto:service@rivolution.com\",\n                          children: \"service@rivolution.com.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 333,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(DropzoneArea, {\n                        acceptedFiles: acceptedFileFormat,\n                        onChange: handleFileChange,\n                        onDrop: handleFileDrop,\n                        filesLimit: 1,\n                        Icon: CloudUpload,\n                        maxFileSize: 11000000,\n                        showFileNames: true,\n                        alertSnackbarProps: {\n                          anchorOrigin: {\n                            vertical: \"top\",\n                            horizontal: \"center\"\n                          }\n                        },\n                        dropzoneText: t(\"form-contact.block-form.input.list.drag-file\"),\n                        getFileAddedMessage: fileName => `${t('form-contact.block-form.snackbar.text.file-added', {\n                          fileName: fileName\n                        })}`,\n                        getFileRemovedMessage: fileName => `${t('form-contact.block-form.snackbar.text.file-removed', {\n                          fileName: fileName\n                        })}`,\n                        getDropRejectMessage: () => `${t('form-contact.block-form.snackbar.text.file-rejected')}`,\n                        getFileLimitExceedMessage: () => `${t('form-contact.block-form.snackbar.text.limit-exceed')}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n                  variant: \"contained\",\n                  size: \"large\",\n                  loading: contactFormContext.loading,\n                  loadingPosition: \"end\",\n                  endIcon: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 32\n                  }, this),\n                  type: \"submit\",\n                  disabled: invalid,\n                  children: t(\"form-contact.block-form.button.submit\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(Confirmation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ContactForm, \"+rjAqE+O+DsMrX/NkkdfoZwfQB8=\", false, function () {\n  return [useTranslation, useContactForm, useContactForm, useParams];\n});\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/pages/ContactForm/ContactForm.tsx"],"names":["DropzoneArea","MenuItem","Grid","Typography","Alert","makeValidate","showErrorOnBlur","makeRequired","React","useEffect","useState","useTranslation","i18n","Form","ContactFormBox","ContactTextField","SubmitButton","FileUpload","ContactFormHeader","ContactFormSchma","TabTitle","useContactForm","Confirmation","useParams","Compressor","validate","error","t","message","required","ContactForm","submitFormValues","contactFormContext","alertState","setAlertState","alertMessage","setAlertMessage","selectedCase","setSelectedCase","submittedValues","setSubmittedValues","undefined","file","setFile","showConfirmation","setShowConfirmation","trackingValue","setTrackingValue","params","trackingId","loading","handleTrackingChange","event","target","value","handleIssueTypeChange","initialValues","issueType","trackingNumber","description","onSubmit","values","res","success","status","includes","console","log","errors","isArray","length","handleFileChange","files","type","quality","err","debug","acceptedFileFormat","handleFileDrop","rejectedFiles","issuesType","key","renderTrackingElement","disableUnderline","renderDescriptionLabel","renderClassName","pt","handleSubmit","invalid","submitting","pristine","map","item","CloudUpload","anchorOrigin","vertical","horizontal","fileName"],"mappings":"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","sourcesContent":["// we have to install @mui/style to get this to work, when the dropzone is available please remove this.\n// @mui/style is not compatible with react 18 and it was depracated on mui 5.\nimport { DropzoneArea } from \"react-mui-dropzone\";\nimport { MenuItem, Grid, Typography, Alert } from \"@mui/material\";\nimport { makeValidate, showErrorOnBlur, makeRequired } from \"mui-rff\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"i18next\";\nimport { Form } from \"react-final-form\";\nimport { ContactFormInterface } from \"../../interfaces/ContactFormInterface\";\nimport {\n  ContactFormBox,\n  ContactTextField,\n  SubmitButton,\n  FileUpload,\n  ContactFormHeader\n} from \"./ContactForm.style\";\nimport { ContactFormSchma } from \"../../schema/ContactFormSchema\";\nimport { TabTitle } from \"../../utils/GeneralFunctions\";\nimport { useContactForm } from \"../../providers/ContactFormProvider\";\nimport Confirmation from \"../../components/Confirmation/Confirmation\";\nimport { ReactComponent as CloudUpload } from \"../../assets/images/cloud-upload.svg\";\nimport { useParams } from \"react-router-dom\";\nimport Compressor from 'compressorjs';\n\n/*\n * Uses the optional helper makeValidate function to format the error messages\n * into something usable by final form.\n */\nconst validate = makeValidate(ContactFormSchma, error => {\n  return <span className=\"error\">{i18n.t(error.message)}</span>;\n});\n\nconst required = makeRequired(ContactFormSchma);\n\nconst ContactForm = () => {\n  const { t } = useTranslation();\n  TabTitle(t(\"form-contact.meta.header.browser-tab-title\"));\n  const  { submitFormValues } = useContactForm();\n  const contactFormContext = useContactForm();\n  const [alertState, setAlertState] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [selectedCase, setSelectedCase] = useState(\"\");\n  const [submittedValues, setSubmittedValues] = useState<\n    ContactFormInterface | undefined\n  >(undefined);\n  const [file, setFile] = useState([]);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [trackingValue, setTrackingValue] = useState(\"\");\n  const params = useParams();\n\n  useEffect(() => {\n    if (params && params.trackingId) {\n      if (selectedCase !== \"Portal - e-Tailer: Follow-up on an existing case\") {\n        setTrackingValue(params.trackingId);\n      } else {\n        setTrackingValue(\"\");\n      }\n    }\n  }, [params, trackingValue, selectedCase, contactFormContext.loading]);\n\n  const handleTrackingChange = event => {\n    setTrackingValue(event.target.value)\n  }\n\n  const handleIssueTypeChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setSelectedCase(event.target.value);\n  };\n\n  const initialValues: ContactFormInterface = {\n    issueType: \"\",\n    trackingNumber: \"\",\n    description: \"\"\n  };\n\n  const onSubmit = async (values: ContactFormInterface) => {\n    values.issueType = selectedCase;\n    values.trackingNumber = trackingValue;\n    setAlertState(false);\n    setAlertMessage(\"\");\n    setSubmittedValues(values);\n    const res: any = await submitFormValues(values, file);\n\n    if (res?.success === undefined && res?.status.includes(\"ERROR\")) {\n      console.log(\"undefined\")\n      setShowConfirmation(false);\n      setAlertState(true);\n      if (res?.message.errors) {\n        setAlertMessage(res?.message.errors[0].description);\n      } else if (res?.message.isArray) {\n        console.log(\"res?.message.isArray\")\n      }\n      else {\n        setAlertMessage(res?.message);\n      }\n    } \n    else if (res === undefined) {\n      setShowConfirmation(false);\n    }\n    else if (res?.success === true && res?.errors.length === 0){\n      setShowConfirmation(true);\n    } \n    else {\n      setShowConfirmation(false);\n    }\n  };\n\n  const handleFileChange = (files: any) => {\n    if (files[0]) {\n      if (files[0].type.includes(\"image/\")) {\n        new Compressor(files[0], {\n          quality: 0.6,\n          success: (res: any) => {\n            setFile(res);\n          },\n          error: (err: any) => {\n            console.debug(\"ERROR: file compression failed \", err.message)\n          } \n        });\n      } else {\n        setFile(files[0]);\n      }\n    } else {\n      setFile([]);\n    }\n  };\n\n  const acceptedFileFormat = [\"image/*\",\".pdf\",\".doc\",\".xls\",\".rtf\",\".docx\",\".xls\",\".xlsx\",\".xlsm\",\".ppt\",\".pptx\",\".pptm\",\".xml\", \".csv\"];\n\n  const handleFileDrop = (files, rejectedFiles) => {};\n\n  const issuesType = [\n    {\n      key: \"Portal - e-Tailer: Label issues\",\n      value: t(\"form-contact.block-form.input.list.label-issue\")\n    },\n    {\n      key: \"Portal - e-Tailer: Booking Issues\",\n      value: t(\"form-contact.block-form.input.list.booking-issues\")\n    },\n    {\n      key: \"Portal - e-Tailer: Follow-up on an existing case\",\n      value: t(\"form-contact.block-form.input.list.follow-up\")\n    },\n    {\n      key: \"Portal - e-Tailer: Tracking\",\n      value: t(\"form-contact.block-form.input.list.tracking\")\n    },\n    {\n      key: \"Portal - e-Tailer: Technical Issue\",\n      value: t(\"form-contact.block-form.input.list.technical\")\n    },\n    {\n      key: \"Portal - e-Tailer: General Feedback\",\n      value: t(\"form-contact.block-form.input.list.general-feedback\")\n    },\n    {\n      key: \"Portal - e-Tailer: Address change/correction\",\n      value: t(\"form-contact.block-form.input.list.address-change\")\n    },\n    {\n      key: \"Portal - e-Tailer: New claim\",\n      value: t(\"form-contact.block-form.input.list.open-claim\")\n    }\n  ];\n\n  const renderTrackingElement = () => {\n    if (\n      selectedCase === \"Portal - e-Tailer: Label issues\" ||\n      selectedCase === \"Portal - e-Tailer: General Feedback\" ||\n      selectedCase === \"Portal - e-Tailer: Tracking\" ||\n      selectedCase === \"Portal - e-Tailer: Technical Issue\" ||\n      selectedCase === \"Portal - e-Tailer: Follow-up on an existing case\" ||\n      selectedCase === \"Portal - e-Tailer: Address change/correction\" ||\n      selectedCase === \"Portal - e-Tailer: New claim\"\n    ) {\n      return (\n        <ContactTextField\n          label={\n            selectedCase === \"Portal - e-Tailer: Follow-up on an existing case\"\n              ? t(\"form-contact.block-form.input.list.case-number\")\n              : selectedCase === \"Portal - e-Tailer: Label issues\" ||\n                selectedCase === \"Portal - e-Tailer: Technical Issue\" ||\n                selectedCase === \"Portal - e-Tailer: General Feedback\"\n              ? t(\"form-contact.block-form.input.list.tracking-number-optional\")\n              : t(\"form-contact.block-form.input.list.tracking-number\")\n          }\n          id=\"trackingNumber\"\n          name=\"trackingNumber\"\n          variant=\"filled\"\n          autoComplete=\"name\"\n          value={trackingValue}\n          onChange={handleTrackingChange}\n          InputProps={{ disableUnderline: true }}\n        />\n      );\n    }\n    return null;\n  };\n  const renderDescriptionLabel = () => {\n    switch (selectedCase) {\n      case \"Portal - e-Tailer: Label issues\":\n        return \"form-contact.block-form.input.list.label-issue-description\";\n      case \"Portal - e-Tailer: Booking Issues\":\n        return \"form-contact.block-form.input.list.booking-issue-description\";\n      case \"Portal - e-Tailer: Follow-up on an existing case\":\n        return \"form-contact.block-form.input.list.follow-up-issue-description\";\n      case \"Portal - e-Tailer: Tracking\":\n        return \"form-contact.block-form.input.list.tracking-issue-description\";\n      case \"Portal - e-Tailer: Technical Issue\":\n        return \"form-contact.block-form.input.list.technical-issue-description\";\n      case \"Portal - e-Tailer: General Feedback\":\n        return \"form-contact.block-form.input.list.feedback-issue-description\";\n      case \"Portal - e-Tailer: Address change/correction\":\n        return \"form-contact.block-form.input.list.address-issue-description\";\n      case \"Portal - e-Tailer: New claim\":\n        return \"form-contact.block-form.input.list.open-claim-description\";\n      default:\n        return \"\";\n    }\n  };\n\n  const renderClassName = () => {\n    if (selectedCase === \"Portal - e-Tailer: Address change/correction\") {\n      return \"textarea-address\";\n    } else if (\n      selectedCase === \"Portal - e-Tailer: Booking Issues\" ||\n      selectedCase === \"Portal - e-Tailer: Label issues\" ||\n      selectedCase === \"Portal - e-Tailer: Tracking\" ||\n      selectedCase === \"Portal - e-Tailer: Technical Issue\"\n    ) {\n      return \"textarea-medium\";\n    } else return \"\";\n  };\n\n  return (\n    <>\n      {!showConfirmation && (\n        <ContactFormBox>\n          <Grid container spacing={10} sx={{ pt: 0 }}>\n            <Grid item xs={12} sm={5}>\n              <ContactFormHeader\n                component=\"h1\"\n                variant=\"display3\"\n                color=\"fuchsiaAccessible.main\"\n              >\n                {t(\"form-contact.block1.header.page-title\")}\n              </ContactFormHeader>\n              <Typography component=\"p\" variant=\"body1\">\n                {t(\"form-contact.block1.text.page-description\")}\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              {alertState && <Alert severity=\"error\">{t(alertMessage)}</Alert>}\n                <Form\n                onSubmit={onSubmit}\n                initialValues={\n                  submittedValues ? submittedValues : initialValues\n                }\n                validate={validate}\n                render={({ handleSubmit, invalid, submitting, pristine }) => (\n                  <form onSubmit={handleSubmit} noValidate={true}>\n                    <ContactTextField\n                      name=\"issueType\"\n                      id=\"issueType\"\n                      label={t(\n                        \"form-contact.block-form.input.placeholder-reason\"\n                      )}\n                      select\n                      required={required.issueType}\n                      value={selectedCase}\n                      onChange={handleIssueTypeChange}\n                      variant=\"filled\"\n                      InputProps={{ disableUnderline: true }}\n                    >\n                      {issuesType.map((item) => (\n                        <MenuItem key={item.key} value={item.key}>\n                          {item.value}\n                        </MenuItem>\n                      ))}\n                    </ContactTextField>\n                    <Grid>\n                      {renderTrackingElement()}\n                      {(selectedCase === \"Portal - e-Tailer: Label issues\" ||\n                        selectedCase === \"Portal - e-Tailer: Booking Issues\" ||\n                        selectedCase === \"Portal - e-Tailer: General Feedback\" ||\n                        selectedCase === \"Portal - e-Tailer: Tracking\" ||\n                        selectedCase === \"Portal - e-Tailer: Technical Issue\" ||\n                        selectedCase === \"Portal - e-Tailer: Follow-up on an existing case\" ||\n                        selectedCase === \"Portal - e-Tailer: Address change/correction\" ||\n                        selectedCase === \"Portal - e-Tailer: New claim\") && (\n                        <div>\n                          <ContactTextField\n                            label={t(renderDescriptionLabel())}\n                            id=\"description\"\n                            name=\"description\"\n                            variant=\"filled\"\n                            required={required.description}\n                            multiline\n                            rows={5}\n                            autoComplete=\"name\"\n                            InputProps={{ disableUnderline: true }}\n                            className={renderClassName()}\n                            showError={showErrorOnBlur}\n                          />\n                          <FileUpload item xs={12} sm={12}>\n                            <Typography>\n                              {selectedCase ===\n                              \"Portal - e-Tailer: Label issues\"\n                                ? t(\n                                    \"form-contact.block-form.input.list.upload-photo\"\n                                  )\n                                : selectedCase ===\n                                  \"Portal - e-Tailer: Follow-up on an existing case\"\n                                ? t(\n                                    \"form-contact.block-form.input.list.follow-up-file\"\n                                  )\n                                : selectedCase ===\n                                  \"Portal - e-Tailer: New claim\"\n                                ? t(\n                                    \"form-contact.block-form.input.list.upload-signed-file\"\n                                  )\n                                : t(\n                                    \"form-contact.block-form.input.list.upload-screenshot\"\n                                  )}\n                            </Typography>\n                            <Typography component=\"p\" variant=\"caption\">\n                              {t(\n                                \"form-contact.block-form.input.text.upload-subheading\"\n                              )}\n                              <a href=\"mailto:service@rivolution.com\">\n                                service@rivolution.com.\n                              </a>\n                            </Typography>\n                            <DropzoneArea\n                              acceptedFiles={acceptedFileFormat}\n                              onChange={handleFileChange}\n                              onDrop={handleFileDrop}\n                              filesLimit={1}\n                              Icon={CloudUpload}\n                              maxFileSize={11000000}\n                              showFileNames\n                              alertSnackbarProps={{ anchorOrigin:{ vertical: \"top\", horizontal: \"center\" }}}\n                              dropzoneText={t(\n                                \"form-contact.block-form.input.list.drag-file\"\n                              )}\n                              getFileAddedMessage={(fileName) =>\n                                `${t('form-contact.block-form.snackbar.text.file-added', { fileName: fileName })}`\n                              }\n                              getFileRemovedMessage={(fileName) =>\n                                `${t('form-contact.block-form.snackbar.text.file-removed', { fileName: fileName })}`\n                              }\n                              getDropRejectMessage={() => `${t('form-contact.block-form.snackbar.text.file-rejected')}`}\n                              getFileLimitExceedMessage={() => `${t('form-contact.block-form.snackbar.text.limit-exceed')}`}\n                            />\n                          </FileUpload>\n                        </div>\n                      )}\n                    </Grid>\n                    <SubmitButton\n                      variant=\"contained\"\n                      size=\"large\"\n                      loading={contactFormContext.loading}\n                      loadingPosition=\"end\"\n                      endIcon={<div/>}\n                      type=\"submit\"\n                      disabled={invalid}\n                    >\n                      {t(\"form-contact.block-form.button.submit\")}\n                    </SubmitButton>\n                  </form>\n                )}\n                />\n            </Grid>\n          </Grid>\n        </ContactFormBox>\n      )}\n      {showConfirmation && <Confirmation />}\n    </>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}