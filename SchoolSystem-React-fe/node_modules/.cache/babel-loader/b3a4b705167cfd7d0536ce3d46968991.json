{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/pages/ShipmentsDashboard/ShipmentsDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { useTranslation, getI18n } from \"react-i18next\";\nimport { useShipments } from \"../../providers/ShipmentsProvider\";\nimport { defaultShipmentOverview } from \"../../interfaces/ShipmentsOverviewInterface\";\nimport { defaultPaginationData } from \"../../interfaces/PaginationDataInterface\";\nimport ShipmentsDatePicker from \"../../components/ShipmentsDatePicker/ShipmentsDatePicker\";\nimport ShipmentsSkSelect from \"../../components/ShipmentsSkSelect/ShipmentsSkSelect\";\nimport ShipmentsFilterPanel from \"../../components/ShipmentsFilterPanel/ShipmentsFilterPanel\";\nimport ShipmentsOverviewPanel from \"../../components/ShipmentsOverviewPanel/ShipmentsOverviewPanel\";\nimport ShipmentsListPanel from \"../../components/ShipmentsListPanel/ShipmentsListPanel\";\nimport { PageHeader } from \"./ShipmentsDashboard.style\";\nimport Moment from \"moment\";\nimport { TabTitle } from \"../../utils/GeneralFunctions\";\nimport { useTracking } from \"../../providers/TrackingProvider\";\nimport { useCustomer } from \"../../providers/CustomerProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducerList = (state, action) => {\n  switch (action.type) {\n    case \"dates\":\n      return { ...state,\n        startDate: action.startDateValue,\n        endDate: action.endDateValue\n      };\n\n    case \"order\":\n      return { ...state,\n        order: action.value\n      };\n\n    case \"orderBy\":\n      return { ...state,\n        orderBy: action.value\n      };\n\n    case \"airWaybill\":\n      return { ...state,\n        airWaybill: action.value\n      };\n\n    case \"packageReference\":\n      return { ...state,\n        packageReference: action.value\n      };\n\n    case \"account\":\n      return { ...state,\n        account: action.value\n      };\n\n    case \"city\":\n      return { ...state,\n        city: action.value\n      };\n\n    case \"lastEventType\":\n      return { ...state,\n        lastEventType: action.value\n      };\n\n    case \"pageSize\":\n      return { ...state,\n        pageSize: action.value\n      };\n\n    case \"pageNumberIncrement\":\n      return { ...state,\n        pageNumber: parseInt(state.pageNumber) + parseInt(action.value)\n      };\n\n    case \"pageNumberOne\":\n      return { ...state,\n        pageNumber: 1\n      };\n\n    case \"loadMore\":\n      return { ...state,\n        loadMore: action.value\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction ShipmentsDashboard() {\n  _s();\n\n  Moment.locale(getI18n().resolvedLanguage);\n  const initialListState = {\n    startDate: Moment().subtract(14, \"days\").format(\"YYYY-MM-DD\"),\n    endDate: Moment().format(\"YYYY-MM-DD\"),\n    order: \"asc\",\n    orderBy: \"airWaybill\",\n    airWaybill: \"\",\n    packageReference: \"\",\n    city: \"\",\n    lastEventType: \"\",\n    pageNumber: \"1\",\n    pageSize: \"50\",\n    loadMore: false\n  };\n  const [listState, dispatchList] = useReducer(reducerList, initialListState);\n  const [rows, setRows] = useState([]);\n  const [overview, setOverview] = useState(defaultShipmentOverview);\n  const [pagination, setPagination] = useState(defaultPaginationData);\n  const shipmentContext = useShipments();\n  const {\n    t\n  } = useTranslation();\n  const trackingContext = useTracking();\n  const [initialDataLoadedFlag, setInitialDataLoadedFlag] = useState(false);\n  const [noResults, setNoResults] = useState(false);\n  const {\n    loadingCustomer\n  } = useCustomer();\n  TabTitle(t(\"shipments-dashboard.block1.header.page-title\"));\n  useEffect(() => {\n    if (!loadingCustomer) {\n      // call getShipmentsData\n      setInitialDataLoadedFlag(false);\n      setRows([]);\n      dispatchList({\n        type: \"pageNumberOne\",\n        value: 1\n      });\n      trackingContext.resetTrackingData();\n      shipmentContext.getShipmentsData({\n        startDate: listState.startDate,\n        endDate: listState.endDate,\n        account: listState.account,\n        pageNumber: \"1\",\n        pageSize: listState.pageSize,\n        airWaybill: listState.airWaybill,\n        packageReference: listState.packageReference,\n        city: listState.city,\n        lastEventType: listState.lastEventType\n      });\n    } // excluding dependancy on listState.order and orderBy for now.\n    // eslint-disable-next-line\n\n  }, [listState.startDate, listState.endDate, listState.account, listState.pageSize, listState.airWaybill, listState.packageReference, listState.city, listState.lastEventType, loadingCustomer]);\n  useEffect(() => {\n    // call getShipmentsData LOAD MORE!!!!\n    if (listState.loadMore) {\n      shipmentContext.getShipmentsData({\n        startDate: listState.startDate,\n        endDate: listState.endDate,\n        account: listState.account,\n        pageNumber: listState.pageNumber,\n        pageSize: listState.pageSize,\n        airWaybill: listState.airWaybill,\n        packageReference: listState.packageReference,\n        city: listState.city,\n        lastEventType: listState.lastEventType\n      });\n      dispatchList({\n        type: \"loadMore\",\n        value: false\n      });\n    } // excluding dependancy on listState.order and orderBy for now.\n    // eslint-disable-next-line\n\n  }, [listState.pageNumber]); // listen to loading so it only sets rows and pagination once all the data is ready\n\n  useEffect(() => {\n    if (!shipmentContext.loading) {\n      var _shipmentContext$ship;\n\n      // getShipmentsData if changed then update rows and pagination!\n      setPagination(shipmentContext.paginationData);\n      setOverview(shipmentContext.shipmentsOverview);\n      setInitialDataLoadedFlag(true);\n\n      if (((_shipmentContext$ship = shipmentContext.shipmentsData) === null || _shipmentContext$ship === void 0 ? void 0 : _shipmentContext$ship.length) === 0) {\n        setNoResults(true);\n      } else if (shipmentContext.paginationData.currentPage === 1) {\n        // initial page load\n        setNoResults(false);\n        setRows([]);\n        setRows(shipmentContext.shipmentsData);\n      } else {\n        // load more pages\n        setRows([...rows, ...shipmentContext.shipmentsData]);\n      }\n    } // eslint-disable-next-line\n\n  }, [shipmentContext.loading, shipmentContext.shipmentsData, shipmentContext.paginationData, shipmentContext.shipmentsOverview]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h2\",\n        className: \"pageTitle\",\n        children: t(\"shipments-dashboard.block1.header.page-title\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), console.log(\"shipmentContext.loading: \", shipmentContext.loading), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"headerExtra\",\n        children: [/*#__PURE__*/_jsxDEV(ShipmentsDatePicker, {\n          startDate: listState.startDate,\n          endDate: listState.endDate,\n          dispatchList: dispatchList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShipmentsSkSelect, {\n          dispatchList: dispatchList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShipmentsFilterPanel, {\n      dispatchList: dispatchList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShipmentsOverviewPanel, {\n      booked: overview.booked,\n      accepted: overview.accepted,\n      inTransit: overview.inTransit,\n      outForDelivery: overview.outForDelivery,\n      deliveryAttempt: overview.deliveryAttempt,\n      doorDelivered: overview.doorDelivered,\n      missing: overview.missing,\n      returnToShipper: overview.returnToShipper,\n      startDate: listState.startDate,\n      endDate: listState.endDate,\n      initialDataLoadedFlag: initialDataLoadedFlag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShipmentsListPanel, {\n      listState: listState,\n      dispatchList: dispatchList,\n      rows: rows,\n      pagination: pagination,\n      initialDataLoadedFlag: initialDataLoadedFlag,\n      noResults: noResults,\n      loading: shipmentContext.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShipmentsDashboard, \"d8DzC1Adzvk7zP09XFsmW12ObuI=\", false, function () {\n  return [useShipments, useTranslation, useTracking, useCustomer];\n});\n\n_c = ShipmentsDashboard;\nexport default ShipmentsDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShipmentsDashboard\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/pages/ShipmentsDashboard/ShipmentsDashboard.tsx"],"names":["React","useEffect","useReducer","useState","Box","Typography","useTranslation","getI18n","useShipments","defaultShipmentOverview","defaultPaginationData","ShipmentsDatePicker","ShipmentsSkSelect","ShipmentsFilterPanel","ShipmentsOverviewPanel","ShipmentsListPanel","PageHeader","Moment","TabTitle","useTracking","useCustomer","reducerList","state","action","type","startDate","startDateValue","endDate","endDateValue","order","value","orderBy","airWaybill","packageReference","account","city","lastEventType","pageSize","pageNumber","parseInt","loadMore","ShipmentsDashboard","locale","resolvedLanguage","initialListState","subtract","format","listState","dispatchList","rows","setRows","overview","setOverview","pagination","setPagination","shipmentContext","t","trackingContext","initialDataLoadedFlag","setInitialDataLoadedFlag","noResults","setNoResults","loadingCustomer","resetTrackingData","getShipmentsData","loading","paginationData","shipmentsOverview","shipmentsData","length","currentPage","flexGrow","console","log","booked","accepted","inTransit","outForDelivery","deliveryAttempt","doorDelivered","missing","returnToShipper"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { useTranslation, getI18n } from \"react-i18next\";\nimport { useShipments } from \"../../providers/ShipmentsProvider\";\nimport { ShipmentDataInterface } from \"../../interfaces/ShipmentDataInterface\";\nimport { defaultShipmentOverview } from \"../../interfaces/ShipmentsOverviewInterface\";\nimport { defaultPaginationData } from \"../../interfaces/PaginationDataInterface\";\nimport ShipmentsDatePicker from \"../../components/ShipmentsDatePicker/ShipmentsDatePicker\";\nimport ShipmentsSkSelect from \"../../components/ShipmentsSkSelect/ShipmentsSkSelect\";\nimport ShipmentsFilterPanel from \"../../components/ShipmentsFilterPanel/ShipmentsFilterPanel\";\nimport ShipmentsOverviewPanel from \"../../components/ShipmentsOverviewPanel/ShipmentsOverviewPanel\";\nimport ShipmentsListPanel from \"../../components/ShipmentsListPanel/ShipmentsListPanel\";\nimport { PageHeader } from \"./ShipmentsDashboard.style\";\nimport Moment from \"moment\";\nimport { TabTitle } from \"../../utils/GeneralFunctions\";\nimport { useTracking } from \"../../providers/TrackingProvider\";\nimport { useCustomer } from \"../../providers/CustomerProvider\";\n\nconst reducerList = (state, action) => {\n  switch (action.type) {\n    case \"dates\":\n      return {\n        ...state,\n        startDate: action.startDateValue,\n        endDate: action.endDateValue\n      };\n    case \"order\":\n      return { ...state, order: action.value };\n    case \"orderBy\":\n      return { ...state, orderBy: action.value };\n    case \"airWaybill\":\n      return { ...state, airWaybill: action.value };\n    case \"packageReference\":\n      return { ...state, packageReference: action.value };\n    case \"account\":\n      return { ...state, account: action.value };\n    case \"city\":\n      return { ...state, city: action.value };\n    case \"lastEventType\":\n      return { ...state, lastEventType: action.value };\n    case \"pageSize\":\n      return { ...state, pageSize: action.value };\n    case \"pageNumberIncrement\":\n      return {\n        ...state,\n        pageNumber: parseInt(state.pageNumber) + parseInt(action.value)\n      };\n    case \"pageNumberOne\":\n      return { ...state, pageNumber: 1 };\n    case \"loadMore\":\n      return { ...state, loadMore: action.value };\n    default:\n      return state;\n  }\n};\n\nfunction ShipmentsDashboard() {\n  Moment.locale(getI18n().resolvedLanguage);\n  const initialListState = {\n    startDate: Moment().subtract(14, \"days\").format(\"YYYY-MM-DD\"),\n    endDate: Moment().format(\"YYYY-MM-DD\"),\n    order: \"asc\",\n    orderBy: \"airWaybill\",\n    airWaybill: \"\",\n    packageReference: \"\",\n    city: \"\",\n    lastEventType: \"\",\n    pageNumber: \"1\",\n    pageSize: \"50\",\n    loadMore: false\n  };\n  const [listState, dispatchList] = useReducer(reducerList, initialListState);\n  const [rows, setRows] = useState<ShipmentDataInterface[]>([]);\n  const [overview, setOverview] = useState(defaultShipmentOverview);\n  const [pagination, setPagination] = useState(defaultPaginationData);\n  const shipmentContext = useShipments();\n  const { t } = useTranslation();\n  const trackingContext = useTracking();\n  const [initialDataLoadedFlag, setInitialDataLoadedFlag] = useState(false);\n  const [noResults, setNoResults] = useState(false);\n  const { loadingCustomer } = useCustomer();\n\n  TabTitle(t(\"shipments-dashboard.block1.header.page-title\"));\n\n  useEffect(() => {\n    if (!loadingCustomer) {\n          // call getShipmentsData\n    setInitialDataLoadedFlag(false);\n    setRows([]);\n    dispatchList({ type: \"pageNumberOne\", value: 1 });\n    trackingContext.resetTrackingData();\n    shipmentContext.getShipmentsData({\n      startDate: listState.startDate,\n      endDate: listState.endDate,\n      account: listState.account,\n      pageNumber: \"1\",\n      pageSize: listState.pageSize,\n      airWaybill: listState.airWaybill,\n      packageReference: listState.packageReference,\n      city: listState.city,\n      lastEventType: listState.lastEventType\n    });\n    }\n    // excluding dependancy on listState.order and orderBy for now.\n    // eslint-disable-next-line\n  }, [\n    listState.startDate,\n    listState.endDate,\n    listState.account,\n    listState.pageSize,\n    listState.airWaybill,\n    listState.packageReference,\n    listState.city,\n    listState.lastEventType,\n    loadingCustomer\n  ]);\n\n  useEffect(() => {\n    // call getShipmentsData LOAD MORE!!!!\n    if (listState.loadMore) {\n      shipmentContext.getShipmentsData({\n        startDate: listState.startDate,\n        endDate: listState.endDate,\n        account: listState.account,\n        pageNumber: listState.pageNumber,\n        pageSize: listState.pageSize,\n        airWaybill: listState.airWaybill,\n        packageReference: listState.packageReference,\n        city: listState.city,\n        lastEventType: listState.lastEventType\n      });\n      dispatchList({ type: \"loadMore\", value: false });\n    }\n\n    // excluding dependancy on listState.order and orderBy for now.\n    // eslint-disable-next-line\n  }, [listState.pageNumber]);\n\n  // listen to loading so it only sets rows and pagination once all the data is ready\n  useEffect(() => {\n    if (!shipmentContext.loading) {\n      // getShipmentsData if changed then update rows and pagination!\n      setPagination(shipmentContext.paginationData);\n      setOverview(shipmentContext.shipmentsOverview);\n      setInitialDataLoadedFlag(true);\n      if (shipmentContext.shipmentsData?.length === 0) {\n        setNoResults(true);\n      } else if (shipmentContext.paginationData.currentPage === 1) {\n        // initial page load\n        setNoResults(false);\n        setRows([]);\n        setRows(shipmentContext.shipmentsData);\n      } else {\n        // load more pages\n        setRows([...rows, ...shipmentContext.shipmentsData]);\n      }\n    }\n    // eslint-disable-next-line\n  }, [\n    shipmentContext.loading,\n    shipmentContext.shipmentsData,\n    shipmentContext.paginationData,\n    shipmentContext.shipmentsOverview\n  ]);\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <PageHeader>\n        <Typography component=\"h1\" variant=\"h2\" className=\"pageTitle\">\n          {t(\"shipments-dashboard.block1.header.page-title\")}\n        </Typography>\n        {console.log(\"shipmentContext.loading: \" ,shipmentContext.loading)}\n        <Box className=\"headerExtra\">\n          <ShipmentsDatePicker\n            startDate={listState.startDate}\n            endDate={listState.endDate}\n            dispatchList={dispatchList}\n          />\n          <ShipmentsSkSelect dispatchList={dispatchList} />\n        </Box>\n      </PageHeader>\n\n      <ShipmentsFilterPanel dispatchList={dispatchList} />\n\n      <ShipmentsOverviewPanel\n        booked={overview.booked}\n        accepted={overview.accepted}\n        inTransit={overview.inTransit}\n        outForDelivery={overview.outForDelivery}\n        deliveryAttempt={overview.deliveryAttempt}\n        doorDelivered={overview.doorDelivered}\n        missing={overview.missing}\n        returnToShipper={overview.returnToShipper}\n        startDate={listState.startDate}\n        endDate={listState.endDate}\n        initialDataLoadedFlag={initialDataLoadedFlag}\n      />\n\n      <ShipmentsListPanel\n        listState={listState}\n        dispatchList={dispatchList}\n        rows={rows}\n        pagination={pagination}\n        initialDataLoadedFlag={initialDataLoadedFlag}\n        noResults={noResults}\n        loading={shipmentContext.loading}\n      />\n    </Box>\n  );\n}\nexport default ShipmentsDashboard;\n"]},"metadata":{},"sourceType":"module"}