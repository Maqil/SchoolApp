{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/providers/ContactFormProvider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\";\nimport { useApiError } from \"./ApiErrorProvider\";\nimport { useCustomer } from \"./CustomerProvider\";\nimport { getI18n } from \"react-i18next\";\nimport convertBase64 from \"../helpers/ConvertBase64\";\nimport SignRequest from \"../helpers/SignRequest\";\nimport { error } from \"../constants/bindings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactFormContext = /*#__PURE__*/createContext({\n  loading: false,\n  submitFormValues: (submittedValues, file) => {}\n});\nexport const ContactFormProvider = props => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const {\n    setErrorCode\n  } = useApiError();\n  const {\n    customerData\n  } = useCustomer();\n\n  const submitFormValues = async (submittedValues, file) => {\n    console.log(\"FILE AFTER COMPRESSION: \", file);\n    let fileAttachement = {};\n\n    if (file.length !== 0) {\n      const base64File = await convertBase64(file);\n      fileAttachement = {\n        contentType: file.type,\n        name: file.name,\n        body: base64File\n      };\n    }\n\n    try {\n      const createCaseData = constructCreateCaseData(customerData, submittedValues, fileAttachement);\n      console.log(\"createCaseData : \", createCaseData);\n      setLoading(true);\n      const data = await SignRequest(\"POST\", process.env.REACT_APP_API_BASE, process.env.REACT_APP_AKAMAI_DBAAS_API_URL, \"/create_case/details\", createCaseData).then(signedRequest => {\n        return fetch(signedRequest.api, {\n          method: \"POST\",\n          headers: signedRequest.headers,\n          body: signedRequest.data\n        });\n      }).then(response => response.json()).then(response => {\n        return response;\n      });\n      console.log(data, \"RESULT CONTACT FORM PROVIDER\");\n\n      if (data !== null && data !== void 0 && data.success) {\n        console.log(\"SUCCESS! case id:\" + (data === null || data === void 0 ? void 0 : data.id));\n      } else if (data !== null && data !== void 0 && data.status.includes(\"ERROR\")) {\n        console.log(\"ERROR STATUS: \" + (data === null || data === void 0 ? void 0 : data.status));\n        console.log(\"ERROR RAW MESSAGE: \" + JSON.stringify(data === null || data === void 0 ? void 0 : data.message, null, 2));\n        return {\n          status: \"ERROR\",\n          message: data === null || data === void 0 ? void 0 : data.message\n        };\n      }\n\n      return data;\n    } catch (e) {\n      var _e$response;\n\n      console.log(e, \"EXCEPTION ERROR CONTACT FORM PROVIDER\");\n\n      if ((_e$response = e.response) !== null && _e$response !== void 0 && _e$response.status) {\n        var _e$response2;\n\n        setErrorCode((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.status);\n      } else {\n        console.log(\">>>> ERROR CONTACT FORM PROVIDER EXCEPTION ERROR UNDEFINED! \");\n        setErrorCode(error.CREATE_CASE);\n      }\n\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactFormContext.Provider, {\n    value: {\n      loading,\n      submitFormValues\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactFormProvider, \"GgtU9f9xLQ0NgriVixcALCp7tlA=\", false, function () {\n  return [useApiError, useCustomer];\n});\n\n_c = ContactFormProvider;\n\nconst constructCreateCaseData = (customerData, submittedValues, fileAttachement) => {\n  let attachment = {\n    ContentType: \"\",\n    Name: \"\",\n    Body: \"\"\n  }; // clean up attachment file\n\n  if (Object.keys(fileAttachement).length !== 0 && fileAttachement.body.includes(\"base64,\")) {\n    const startIndex = fileAttachement.body.indexOf(\"base64,\");\n    const sanitizedFile = fileAttachement.body.slice(startIndex + 7);\n    attachment = {\n      ContentType: fileAttachement.contentType,\n      Name: fileAttachement.name,\n      Body: sanitizedFile\n    };\n  } // obtain the case report type id\n\n\n  const caseReportTypeId = '' + process.env.REACT_APP_CASE_REPORT_TYPE_ID; // adjust description for case number issue type\n\n  const description = submittedValues.issueType === \"Portal - e-Tailer: Follow-up on an existing case\" ? \"Case #: \" + submittedValues.trackingNumber + \" ; \" + submittedValues.description : submittedValues.description;\n  const data = {\n    AccountId: customerData[0].accountId,\n    ContactId: customerData[0].contactId,\n    RecordType: caseReportTypeId,\n    IssueType: submittedValues.issueType,\n    Subject: \"Question from Rivo Web Site Support page\",\n    Description: description,\n    Language: getI18n().resolvedLanguage === \"en\" ? \"English\" : \"French\",\n    TrackingNumber: submittedValues.trackingNumber,\n    Attachment: Object.keys(fileAttachement).length !== 0 ? attachment : undefined\n  };\n  return data;\n};\n\nexport const useContactForm = () => {\n  _s2();\n\n  const context = React.useContext(ContactFormContext);\n  return context;\n};\n\n_s2(useContactForm, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactFormProvider\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/providers/ContactFormProvider.tsx"],"names":["React","useState","createContext","useApiError","useCustomer","getI18n","convertBase64","SignRequest","error","ContactFormContext","loading","submitFormValues","submittedValues","file","ContactFormProvider","props","setLoading","setErrorCode","customerData","console","log","fileAttachement","length","base64File","contentType","type","name","body","createCaseData","constructCreateCaseData","data","process","env","REACT_APP_API_BASE","REACT_APP_AKAMAI_DBAAS_API_URL","then","signedRequest","fetch","api","method","headers","response","json","success","id","status","includes","JSON","stringify","message","e","CREATE_CASE","children","attachment","ContentType","Name","Body","Object","keys","startIndex","indexOf","sanitizedFile","slice","caseReportTypeId","REACT_APP_CASE_REPORT_TYPE_ID","description","issueType","trackingNumber","AccountId","accountId","ContactId","contactId","RecordType","IssueType","Subject","Description","Language","resolvedLanguage","TrackingNumber","Attachment","undefined","useContactForm","context","useContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,KAAT,QAAsB,uBAAtB;;AAEA,MAAMC,kBAAkB,gBAAGP,aAAa,CAAC;AACvCQ,EAAAA,OAAO,EAAE,KAD8B;AAEvCC,EAAAA,gBAAgB,EAAE,CAACC,eAAD,EAAkBC,IAAlB,KAA2B,CAAE;AAFR,CAAD,CAAxC;AAKA,OAAO,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AAAA;;AAE1C,QAAM,CAACL,OAAD,EAAUM,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAmBd,WAAW,EAApC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAmBd,WAAW,EAApC;;AAEA,QAAMO,gBAAgB,GAAG,OAAOC,eAAP,EAAwBC,IAAxB,KAAiC;AACxDM,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCP,IAAxC;AACA,QAAIQ,eAAe,GAAG,EAAtB;;AACA,QAAIR,IAAI,CAACS,MAAL,KAAgB,CAApB,EAAuB;AACrB,YAAMC,UAAU,GAAG,MAAMjB,aAAa,CAACO,IAAD,CAAtC;AACAQ,MAAAA,eAAe,GAAG;AAChBG,QAAAA,WAAW,EAAEX,IAAI,CAACY,IADF;AAEhBC,QAAAA,IAAI,EAAEb,IAAI,CAACa,IAFK;AAGhBC,QAAAA,IAAI,EAAEJ;AAHU,OAAlB;AAKD;;AAED,QAAI;AACF,YAAMK,cAAc,GAAGC,uBAAuB,CAACX,YAAD,EAAeN,eAAf,EAAgCS,eAAhC,CAA9C;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCQ,cAAjC;AAEAZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMc,IAAI,GAAG,MAAMvB,WAAW,CAC5B,MAD4B,EAE5BwB,OAAO,CAACC,GAAR,CAAYC,kBAFgB,EAG5BF,OAAO,CAACC,GAAR,CAAYE,8BAHgB,EAI5B,sBAJ4B,EAK5BN,cAL4B,CAAX,CAOhBO,IAPgB,CAOVC,aAAD,IAAmB;AACvB,eAAOC,KAAK,CAACD,aAAa,CAACE,GAAf,EAAoB;AAC9BC,UAAAA,MAAM,EAAE,MADsB;AAE9BC,UAAAA,OAAO,EAAEJ,aAAa,CAACI,OAFO;AAG9Bb,UAAAA,IAAI,EAAES,aAAa,CAACN;AAHU,SAApB,CAAZ;AAKD,OAbgB,EAchBK,IAdgB,CAcVM,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAdH,EAehBP,IAfgB,CAeVM,QAAD,IAAc;AAClB,eAAOA,QAAP;AACD,OAjBgB,CAAnB;AAkBAtB,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ,EAAkB,8BAAlB;;AACA,UAAIA,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEa,OAAV,EAAkB;AAChBxB,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAsBU,IAAtB,aAAsBA,IAAtB,uBAAsBA,IAAI,CAAEc,EAA5B,CAAZ;AACD,OAFD,MAEO,IAAId,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEe,MAAN,CAAaC,QAAb,CAAsB,OAAtB,CAAJ,EAAoC;AACzC3B,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAmBU,IAAnB,aAAmBA,IAAnB,uBAAmBA,IAAI,CAAEe,MAAzB,CAAZ;AACA1B,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwB2B,IAAI,CAACC,SAAL,CAAelB,IAAf,aAAeA,IAAf,uBAAeA,IAAI,CAAEmB,OAArB,EAA8B,IAA9B,EAAoC,CAApC,CAApC;AACA,eAAQ;AACNJ,UAAAA,MAAM,EAAE,OADF;AAENI,UAAAA,OAAO,EAAEnB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEmB;AAFT,SAAR;AAID;;AACD,aAAOnB,IAAP;AACD,KAnCD,CAmCE,OAAOoB,CAAP,EAAe;AAAA;;AACf/B,MAAAA,OAAO,CAACC,GAAR,CAAY8B,CAAZ,EAAe,uCAAf;;AACA,yBAAIA,CAAC,CAACT,QAAN,wCAAI,YAAYI,MAAhB,EAAwB;AAAA;;AACtB5B,QAAAA,YAAY,iBAACiC,CAAC,CAACT,QAAH,iDAAC,aAAYI,MAAb,CAAZ;AACD,OAFD,MAEO;AACL1B,QAAAA,OAAO,CAACC,GAAR,CACE,8DADF;AAGAH,QAAAA,YAAY,CAACT,KAAK,CAAC2C,WAAP,CAAZ;AACD;;AACDnC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KA9CD,SA8CU;AACRA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GA7DD;;AA+DA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAAEN,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAApC;AAAA,cACGI,KAAK,CAACqC;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1EM;;GAAMtC,mB;UAGcX,W,EACAC,W;;;KAJdU,mB;;AA4Eb,MAAMe,uBAAuB,GAAG,CAACX,YAAD,EAAeN,eAAf,EAAqCS,eAArC,KAA8D;AAE5F,MAAIgC,UAAgC,GAAG;AACrCC,IAAAA,WAAW,EAAE,EADwB;AAErCC,IAAAA,IAAI,EAAE,EAF+B;AAGrCC,IAAAA,IAAI,EAAE;AAH+B,GAAvC,CAF4F,CAQ5F;;AACA,MAAIC,MAAM,CAACC,IAAP,CAAYrC,eAAZ,EAA6BC,MAA7B,KAAwC,CAAxC,IAA6CD,eAAe,CAACM,IAAhB,CAAqBmB,QAArB,CAA8B,SAA9B,CAAjD,EAA2F;AACzF,UAAMa,UAAU,GAAGtC,eAAe,CAACM,IAAhB,CAAqBiC,OAArB,CAA6B,SAA7B,CAAnB;AACA,UAAMC,aAAa,GAAGxC,eAAe,CAACM,IAAhB,CAAqBmC,KAArB,CAA2BH,UAAU,GAAG,CAAxC,CAAtB;AACAN,IAAAA,UAAU,GAAG;AACXC,MAAAA,WAAW,EAAEjC,eAAe,CAACG,WADlB;AAEX+B,MAAAA,IAAI,EAAElC,eAAe,CAACK,IAFX;AAGX8B,MAAAA,IAAI,EAAEK;AAHK,KAAb;AAKD,GAjB2F,CAmB5F;;;AACA,QAAME,gBAAgB,GAAG,KAAKhC,OAAO,CAACC,GAAR,CAAYgC,6BAA1C,CApB4F,CAsB5F;;AACA,QAAMC,WAAW,GACdrD,eAAe,CAACsD,SAAhB,KAA8B,kDAA/B,GACI,aACAtD,eAAe,CAACuD,cADhB,GAEA,KAFA,GAGAvD,eAAe,CAACqD,WAJpB,GAKIrD,eAAe,CAACqD,WANtB;AAQA,QAAMnC,IAA6B,GAAG;AACpCsC,IAAAA,SAAS,EAAElD,YAAY,CAAC,CAAD,CAAZ,CAAgBmD,SADS;AAEpCC,IAAAA,SAAS,EAAEpD,YAAY,CAAC,CAAD,CAAZ,CAAgBqD,SAFS;AAGpCC,IAAAA,UAAU,EAAET,gBAHwB;AAIpCU,IAAAA,SAAS,EAAE7D,eAAe,CAACsD,SAJS;AAKpCQ,IAAAA,OAAO,EAAE,0CAL2B;AAMpCC,IAAAA,WAAW,EAAEV,WANuB;AAOpCW,IAAAA,QAAQ,EAAEvE,OAAO,GAAGwE,gBAAV,KAAgC,IAAhC,GAAuC,SAAvC,GAAkD,QAPxB;AAQpCC,IAAAA,cAAc,EAAElE,eAAe,CAACuD,cARI;AASpCY,IAAAA,UAAU,EAAEtB,MAAM,CAACC,IAAP,CAAYrC,eAAZ,EAA6BC,MAA7B,KAAwC,CAAxC,GAA4C+B,UAA5C,GAAyD2B;AATjC,GAAtC;AAWA,SAAOlD,IAAP;AACD,CA3CD;;AA6CA,OAAO,MAAMmD,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAMC,OAAO,GAAGlF,KAAK,CAACmF,UAAN,CAAiB1E,kBAAjB,CAAhB;AACA,SAAOyE,OAAP;AACD,CAHM;;IAAMD,c","sourcesContent":["import React, { useState, createContext } from \"react\";\nimport { useApiError } from \"./ApiErrorProvider\";\nimport { useCustomer } from \"./CustomerProvider\";\nimport { AttachementInterface, CreateCaseDataInterface } from \"../interfaces/CreateCaseDataInterface\";\nimport { getI18n } from \"react-i18next\";\nimport convertBase64 from \"../helpers/ConvertBase64\";\nimport SignRequest from \"../helpers/SignRequest\";\nimport { error } from \"../constants/bindings\";\n\nconst ContactFormContext = createContext({\n  loading: false,\n  submitFormValues: (submittedValues, file) => {}\n});\n\nexport const ContactFormProvider = props => {\n\n  const [loading, setLoading] = useState(false);\n  const { setErrorCode } = useApiError();\n  const { customerData } = useCustomer();\n\n  const submitFormValues = async (submittedValues, file) => {\n    console.log(\"FILE AFTER COMPRESSION: \", file)\n    let fileAttachement = {};\n    if (file.length !== 0) {\n      const base64File = await convertBase64(file);\n      fileAttachement = {\n        contentType: file.type,\n        name: file.name,\n        body: base64File\n      };\n    }\n\n    try {\n      const createCaseData = constructCreateCaseData(customerData, submittedValues, fileAttachement);\n      console.log(\"createCaseData : \", createCaseData);\n\n      setLoading(true);\n      const data = await SignRequest(\n        \"POST\",\n        process.env.REACT_APP_API_BASE,\n        process.env.REACT_APP_AKAMAI_DBAAS_API_URL,\n        \"/create_case/details\",\n        createCaseData\n      )\n        .then((signedRequest) => {\n          return fetch(signedRequest.api, {\n            method: \"POST\",\n            headers: signedRequest.headers,\n            body: signedRequest.data\n          });\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          return response;\n        });\n      console.log(data, \"RESULT CONTACT FORM PROVIDER\");\n      if (data?.success){\n        console.log(\"SUCCESS! case id:\" + data?.id );\n      } else if (data?.status.includes(\"ERROR\")) {\n        console.log(\"ERROR STATUS: \" + data?.status);\n        console.log(\"ERROR RAW MESSAGE: \" + JSON.stringify(data?.message, null, 2));\n        return ({\n          status: \"ERROR\",\n          message: data?.message\n        });\n      }\n      return data;\n    } catch (e: any) {\n      console.log(e, \"EXCEPTION ERROR CONTACT FORM PROVIDER\");\n      if (e.response?.status) {\n        setErrorCode(e.response?.status);\n      } else {\n        console.log(\n          \">>>> ERROR CONTACT FORM PROVIDER EXCEPTION ERROR UNDEFINED! \"\n        );\n        setErrorCode(error.CREATE_CASE);\n      }\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <ContactFormContext.Provider value={{ loading, submitFormValues }}>\n      {props.children}\n    </ContactFormContext.Provider>\n  );\n};\n\nconst constructCreateCaseData = (customerData, submittedValues: any, fileAttachement: any) => {\n\n  let attachment: AttachementInterface = {\n    ContentType: \"\",\n    Name: \"\",\n    Body: \"\"\n  };\n\n  // clean up attachment file\n  if (Object.keys(fileAttachement).length !== 0 && fileAttachement.body.includes(\"base64,\")) {\n    const startIndex = fileAttachement.body.indexOf(\"base64,\");\n    const sanitizedFile = fileAttachement.body.slice(startIndex + 7);\n    attachment = {\n      ContentType: fileAttachement.contentType,\n      Name: fileAttachement.name,\n      Body: sanitizedFile\n    }\n  }\n\n  // obtain the case report type id\n  const caseReportTypeId = '' + process.env.REACT_APP_CASE_REPORT_TYPE_ID;\n\n  // adjust description for case number issue type\n  const description =\n    (submittedValues.issueType === \"Portal - e-Tailer: Follow-up on an existing case\")\n      ? \"Case #: \" +\n        submittedValues.trackingNumber +\n        \" ; \" +\n        submittedValues.description\n      : submittedValues.description;\n\n  const data: CreateCaseDataInterface = {\n    AccountId: customerData[0].accountId,\n    ContactId: customerData[0].contactId,\n    RecordType: caseReportTypeId,\n    IssueType: submittedValues.issueType,\n    Subject: \"Question from Rivo Web Site Support page\",\n    Description: description,\n    Language: getI18n().resolvedLanguage ===  \"en\" ? \"English\": \"French\",\n    TrackingNumber: submittedValues.trackingNumber,\n    Attachment: Object.keys(fileAttachement).length !== 0 ? attachment : undefined\n  }\n  return data;\n}\n\nexport const useContactForm = () => {\n  const context = React.useContext(ContactFormContext);\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}