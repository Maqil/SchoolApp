{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/providers/ShipmentsProvider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { defaultShipmentData } from \"../interfaces/ShipmentDataInterface\";\nimport { defaultPaginationData } from \"../interfaces/PaginationDataInterface\";\nimport { defaultShipmentOverview } from \"../interfaces/ShipmentsOverviewInterface\";\nimport { defaultShipmentQuery } from \"../interfaces/ShipmentQueryInterface\";\nimport { useApiError } from \"./ApiErrorProvider\";\nimport { error } from \"../constants/bindings\";\nimport SignRequest from \"../helpers/SignRequest\";\nimport { useCustomer } from \"./CustomerProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShipmentsContext = /*#__PURE__*/React.createContext({\n  loading: true,\n  shipmentsData: [defaultShipmentData],\n  shipmentsOverview: defaultShipmentOverview,\n  paginationData: defaultPaginationData,\n  shipmentsQuery: defaultShipmentQuery,\n  getShipmentsData: date => {}\n});\nexport const ShipmentsProvider = props => {\n  _s();\n\n  const [shipmentsQuery, setShipmentsQuery] = React.useState(defaultShipmentQuery);\n  const [shipmentsData, setShipmentsData] = React.useState([]);\n  const [shipmentsOverview, setShipmentsOverview] = React.useState(defaultShipmentOverview);\n  const [paginationData, setPaginationData] = React.useState(defaultPaginationData);\n  const [loading, setLoading] = React.useState(true);\n  const {\n    setErrorCode\n  } = useApiError();\n  const {\n    loadingCustomer\n  } = useCustomer();\n  const statusMap = [{\n    key: \"booked\",\n    value: [\"BKD\"]\n  }, {\n    key: \"accepted\",\n    value: [\"RCS\"]\n  }, {\n    key: \"inTransit\",\n    value: [\"DEP\", \"RCF\", \"RPU\", \"MAN\", \"ARR\", \"PUL\", \"DLV\"]\n  }, {\n    key: \"outForDelivery\",\n    value: [\"GDL\"]\n  }, {\n    key: \"deliveryAttempt\",\n    value: [\"ADL\"]\n  }, {\n    key: \"doorDelivered\",\n    value: [\"DLD\", \"DPU\", \"DDL\"]\n  }, {\n    key: \"missing\",\n    value: [\"MMM\"]\n  }, {\n    key: \"returnToShipper\",\n    value: [\"RTS\"]\n  }];\n\n  const findTotalCountByEvent = (data, event) => {\n    let totalCount = 0;\n    const status = statusMap.find(el => el.key === event);\n    let eventCodes = status ? status.value : [];\n\n    for (const eventCode of eventCodes) {\n      const el = data.find(el => el.event === eventCode);\n      totalCount = totalCount + (el ? el.count : 0);\n    }\n\n    return totalCount;\n  };\n\n  const getShipmentsData = async shipmentsQuery => {\n    setShipmentsQuery(shipmentsQuery);\n\n    if (!shipmentsQuery) {\n      return;\n    }\n\n    setShipmentsData([]);\n    setLoading(true);\n\n    try {\n      const body = {\n        SK_ID: shipmentsQuery.account,\n        startDate: shipmentsQuery.startDate,\n        endDate: shipmentsQuery.endDate,\n        pageNumber: parseInt(shipmentsQuery.pageNumber),\n        pageSize: parseInt(shipmentsQuery.pageSize),\n        packageReference: shipmentsQuery.packageReference,\n        airWaybill: shipmentsQuery.airWaybill,\n        lastEventType: shipmentsQuery.lastEventType.toString(),\n        city: shipmentsQuery.city\n      }; // CALL: https://apigw.cargo-rivo-int.digital.aircanada.com/shipment_history/details\n\n      const rawShipmentsData = await SignRequest(\"POST\", process.env.REACT_APP_API_BASE, process.env.REACT_APP_AKAMAI_DBAAS_API_URL, \"/shipment_history/details\", body).then(signedRequest => {\n        return fetch(signedRequest.api, {\n          method: \"POST\",\n          headers: signedRequest.headers,\n          body: signedRequest.data\n        });\n      }).then(response => response.json()).then(response => {\n        return response;\n      });\n\n      if (!rawShipmentsData.results) {\n        setShipmentsData([]);\n        setPaginationData(defaultPaginationData);\n        setShipmentsOverview(shipmentsOverview);\n        return;\n      } // CALL: https://apigw.cargo-rivo-int.digital.aircanada.com/shipment_summary/details\n\n\n      const rawShipmentsOverview = await SignRequest(\"POST\", process.env.REACT_APP_API_BASE, process.env.REACT_APP_AKAMAI_DBAAS_API_URL, \"/shipment_summary/details\", body).then(signedRequest => {\n        return fetch(signedRequest.api, {\n          method: \"POST\",\n          headers: signedRequest.headers,\n          body: signedRequest.data\n        });\n      }).then(response => response.json()).then(response => {\n        return response;\n      });\n      setShipmentsData(rawShipmentsData.results);\n      setShipmentsOverview({\n        booked: findTotalCountByEvent(rawShipmentsOverview, \"booked\"),\n        accepted: findTotalCountByEvent(rawShipmentsOverview, \"accepted\"),\n        inTransit: findTotalCountByEvent(rawShipmentsOverview, \"inTransit\"),\n        outForDelivery: findTotalCountByEvent(rawShipmentsOverview, \"outForDelivery\"),\n        deliveryAttempt: findTotalCountByEvent(rawShipmentsOverview, \"deliveryAttempt\"),\n        doorDelivered: findTotalCountByEvent(rawShipmentsOverview, \"doorDelivered\"),\n        missing: findTotalCountByEvent(rawShipmentsOverview, \"missing\"),\n        returnToShipper: findTotalCountByEvent(rawShipmentsOverview, \"returnToShipper\")\n      });\n      setPaginationData({\n        currentPage: rawShipmentsData.currentPage,\n        pageCount: rawShipmentsData.pageCount,\n        pageSize: rawShipmentsData.pageSize\n      });\n      setLoading(false);\n      return rawShipmentsData;\n    } catch (e) {\n      var _e$response;\n\n      if ((_e$response = e.response) !== null && _e$response !== void 0 && _e$response.status) {\n        var _e$response2;\n\n        setErrorCode((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.status);\n      } else {\n        setErrorCode(error.DEFAULT);\n      }\n\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ShipmentsContext.Provider, {\n    value: {\n      loading,\n      shipmentsData,\n      shipmentsOverview,\n      paginationData,\n      shipmentsQuery,\n      getShipmentsData\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShipmentsProvider, \"OMOc11qXeFn4MHcbtVFFTusen7Y=\", false, function () {\n  return [useApiError, useCustomer];\n});\n\n_c = ShipmentsProvider;\nexport const useShipments = () => {\n  _s2();\n\n  const context = React.useContext(ShipmentsContext);\n  return context;\n};\n\n_s2(useShipments, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ShipmentsProvider\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/providers/ShipmentsProvider.tsx"],"names":["React","defaultShipmentData","defaultPaginationData","defaultShipmentOverview","defaultShipmentQuery","useApiError","error","SignRequest","useCustomer","ShipmentsContext","createContext","loading","shipmentsData","shipmentsOverview","paginationData","shipmentsQuery","getShipmentsData","date","ShipmentsProvider","props","setShipmentsQuery","useState","setShipmentsData","setShipmentsOverview","setPaginationData","setLoading","setErrorCode","loadingCustomer","statusMap","key","value","findTotalCountByEvent","data","event","totalCount","status","find","el","eventCodes","eventCode","count","body","SK_ID","account","startDate","endDate","pageNumber","parseInt","pageSize","packageReference","airWaybill","lastEventType","toString","city","rawShipmentsData","process","env","REACT_APP_API_BASE","REACT_APP_AKAMAI_DBAAS_API_URL","then","signedRequest","fetch","api","method","headers","response","json","results","rawShipmentsOverview","booked","accepted","inTransit","outForDelivery","deliveryAttempt","doorDelivered","missing","returnToShipper","currentPage","pageCount","e","DEFAULT","children","useShipments","context","useContext"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { \n  defaultShipmentData,\n  ShipmentDataInterface \n} from \"../interfaces/ShipmentDataInterface\";\nimport {\n  defaultPaginationData,\n  PaginationDataInterface\n} from \"../interfaces/PaginationDataInterface\";\nimport {\n  defaultShipmentOverview,\n  ShipmentsOverviewInterface\n} from \"../interfaces/ShipmentsOverviewInterface\";\nimport { defaultShipmentQuery } from \"../interfaces/ShipmentQueryInterface\";\nimport { useApiError } from \"./ApiErrorProvider\";\nimport { error } from \"../constants/bindings\";\nimport SignRequest from \"../helpers/SignRequest\";\nimport { useCustomer } from \"./CustomerProvider\";\n\nconst ShipmentsContext = React.createContext({\n  loading: true,\n  shipmentsData: [defaultShipmentData],\n  shipmentsOverview: defaultShipmentOverview,\n  paginationData: defaultPaginationData,\n  shipmentsQuery: defaultShipmentQuery,\n  getShipmentsData: date => {}\n});\n\nexport const ShipmentsProvider = props => {\n  const [shipmentsQuery, setShipmentsQuery] =\n    React.useState(defaultShipmentQuery);\n  const [shipmentsData, setShipmentsData] = React.useState<ShipmentDataInterface[]>([]);\n  const [shipmentsOverview, setShipmentsOverview] = React.useState(\n    defaultShipmentOverview\n  );\n  const [paginationData, setPaginationData] = React.useState(\n    defaultPaginationData\n  );\n  const [loading, setLoading] = React.useState(true);\n  const { setErrorCode } = useApiError();\n  const { loadingCustomer } = useCustomer();\n  const statusMap = [\n    { key: \"booked\", value: [\"BKD\"] },\n    { key: \"accepted\", value: [\"RCS\"] },\n    {\n      key: \"inTransit\",\n      value: [\"DEP\", \"RCF\", \"RPU\", \"MAN\", \"ARR\", \"PUL\", \"DLV\"]\n    },\n    { key: \"outForDelivery\", value: [\"GDL\"] },\n    { key: \"deliveryAttempt\", value: [\"ADL\"] },\n    { key: \"doorDelivered\", value: [\"DLD\", \"DPU\", \"DDL\"] },\n    { key: \"missing\", value: [\"MMM\"] },\n    { key: \"returnToShipper\", value: [\"RTS\"] }\n  ];\n\n  const findTotalCountByEvent = (data, event) => {\n    let totalCount = 0;\n    const status = statusMap.find(el => el.key === event);\n    let eventCodes = status ? status.value : [];\n    for (const eventCode of eventCodes) {\n      const el = data.find(el => el.event === eventCode);\n      totalCount = totalCount + (el ? el.count : 0);\n    }\n    return totalCount;\n  };\n\n  const getShipmentsData = async shipmentsQuery => {\n    setShipmentsQuery(shipmentsQuery);\n    if (!shipmentsQuery) {\n      return;\n    }\n    setShipmentsData([]);\n    setLoading(true);\n    try {\n      const body = {\n        SK_ID: shipmentsQuery.account,\n        startDate: shipmentsQuery.startDate,\n        endDate: shipmentsQuery.endDate,\n        pageNumber: parseInt(shipmentsQuery.pageNumber),\n        pageSize:  parseInt(shipmentsQuery.pageSize),\n        packageReference: shipmentsQuery.packageReference,\n        airWaybill: shipmentsQuery.airWaybill,\n        lastEventType: shipmentsQuery.lastEventType.toString(),\n        city: shipmentsQuery.city\n      };\n\n      // CALL: https://apigw.cargo-rivo-int.digital.aircanada.com/shipment_history/details\n      const rawShipmentsData = await SignRequest(\n        \"POST\",\n        process.env.REACT_APP_API_BASE,\n        process.env.REACT_APP_AKAMAI_DBAAS_API_URL,\n        \"/shipment_history/details\",\n        body\n      )\n        .then((signedRequest) => {\n          return fetch(signedRequest.api, {\n            method: \"POST\",\n            headers: signedRequest.headers,\n            body: signedRequest.data\n          });\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          return response;\n        });\n\n      if (!rawShipmentsData.results) {\n        setShipmentsData([]);\n        setPaginationData(defaultPaginationData);\n        setShipmentsOverview(shipmentsOverview);\n        return;\n      }\n\n      // CALL: https://apigw.cargo-rivo-int.digital.aircanada.com/shipment_summary/details\n      const rawShipmentsOverview = await SignRequest(\n        \"POST\",\n        process.env.REACT_APP_API_BASE,\n        process.env.REACT_APP_AKAMAI_DBAAS_API_URL,\n        \"/shipment_summary/details\",\n        body\n      )\n        .then((signedRequest) => {\n          return fetch(signedRequest.api, {\n            method: \"POST\",\n            headers: signedRequest.headers,\n            body: signedRequest.data\n          });\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          return response;\n        });\n\n      setShipmentsData(rawShipmentsData.results);\n\n      setShipmentsOverview({\n        booked: findTotalCountByEvent(rawShipmentsOverview, \"booked\"),\n        accepted: findTotalCountByEvent(rawShipmentsOverview, \"accepted\"),\n        inTransit: findTotalCountByEvent(rawShipmentsOverview, \"inTransit\"),\n        outForDelivery: findTotalCountByEvent(\n          rawShipmentsOverview,\n          \"outForDelivery\"\n        ),\n        deliveryAttempt: findTotalCountByEvent(\n          rawShipmentsOverview,\n          \"deliveryAttempt\"\n        ),\n        doorDelivered: findTotalCountByEvent(\n          rawShipmentsOverview,\n          \"doorDelivered\"\n        ),\n        missing: findTotalCountByEvent(rawShipmentsOverview, \"missing\"),\n        returnToShipper: findTotalCountByEvent(\n          rawShipmentsOverview,\n          \"returnToShipper\"\n        )\n      } as ShipmentsOverviewInterface);\n\n      setPaginationData({\n        currentPage: rawShipmentsData.currentPage,\n        pageCount: rawShipmentsData.pageCount,\n        pageSize: rawShipmentsData.pageSize\n      } as PaginationDataInterface);\n\n      setLoading(false);\n      return rawShipmentsData;\n    } catch (e: any) {\n      if (e.response?.status) {\n        setErrorCode(e.response?.status);\n      } else {\n        setErrorCode(error.DEFAULT);\n      }\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <ShipmentsContext.Provider\n      value={{\n        loading,\n        shipmentsData,\n        shipmentsOverview,\n        paginationData,\n        shipmentsQuery,\n        getShipmentsData\n      }}\n    >\n      {props.children}\n    </ShipmentsContext.Provider>\n  );\n};\n\nexport const useShipments = () => {\n  const context = React.useContext(ShipmentsContext);\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}