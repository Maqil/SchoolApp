{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/components/ShipmentsRowHistoryTab/ShipmentsRowHistoryTab.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTranslation, getI18n } from \"react-i18next\";\nimport { useTracking } from \"../../providers/TrackingProvider\";\nimport Moment from \"moment\";\nimport { HistoryList } from \"./ShipmentsRowHistoryTab.style\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ShipmentsRowHistoryTab(_ref) {\n  _s();\n\n  let {\n    airwayBill\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const trackingContext = useTracking();\n  let lastTrackingCode = \"\";\n  const trackingDetails = trackingContext.trackingData.get(airwayBill)[\"Content\"][0];\n  Moment.locale(getI18n().resolvedLanguage);\n  const validCodes = [\"BKD\", \"RCS\", \"DEP\", \"RCF\", \"GDL\", \"ADL\", \"RPU\", \"DLD\", \"DPU\", \"DDL\", \"RTS\"];\n  const atConsigneeLocationCodes = [\"DLD\", \"DDL\", \"GDL\", \"ADL\", \"ATD\", \"DPU\"];\n\n  const arrivedAtConsigneeLocation = shipmentEvent => {\n    let isAtConsigneeLocationFlag = false;\n\n    for (const atConsigneeLocationCode of atConsigneeLocationCodes) {\n      if (atConsigneeLocationCode === shipmentEvent) {\n        isAtConsigneeLocationFlag = true;\n      }\n    }\n\n    return isAtConsigneeLocationFlag;\n  };\n\n  function hasNumber(myString) {\n    return /\\d/.test(myString);\n  } // Makes the first letter of the week day capital for french\n\n\n  const dateCapitalized = date => {\n    let currentLang = getI18n().resolvedLanguage;\n    let newDate;\n\n    if (currentLang === \"fr\") {\n      newDate = Moment(date).format(\"dddd Do MMMM YYYY, h:mm a\").replace(/(\\d)(er)/g, \"$1<sup>$2</sup>\");\n    } else {\n      newDate = Moment(date).format(\"dddd MMMM Do YYYY, h:mm a\").replace(/(\\d)(st|nd|rd|th)/g, \"$1<sup>$2</sup>\");\n    }\n\n    return newDate.charAt(0).toUpperCase() + newDate.slice(1);\n  };\n\n  const packageHistoryJSX = trackingDetails.Events ? [...trackingDetails.Events].filter(Event => validCodes.includes(Event.Type.Code)).reverse().map(function (Event, index) {\n    // Do not display 2 identical events in a row, except for ADL, only show latest\n    // https://aircanada.atlassian.net/browse/CDE-3079\n    if (lastTrackingCode !== Event.Type.Code || Event.Type.Code === \"ADL\") {\n      lastTrackingCode = Event.Type.Code;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"code-\" + Event.Type.Code,\n        children: [/*#__PURE__*/_jsxDEV(CheckIcon, {\n          className: \"check-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), Event.Type.Code !== \"BKD\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-event-time\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: dateCapitalized(Event.Timestamp)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this), t(\"tracking-results.package-history.list.history-date-location\"), arrivedAtConsigneeLocation(Event.Type.Code) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\" \", trackingDetails.participants[1].city.charAt(0).toUpperCase() + trackingDetails.participants[1].city.slice(1).toLowerCase()]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\" \", t(\"tracking-results.package-history.list.destination-city.\" + Event.Location.Airport.Code.substring(0, 3))]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-event-time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: dateCapitalized(Event.Timestamp)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), Event.Segment.FlightNumber.endsWith(\"T\") ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: Event.Segment.Destination === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-event-description\",\n            children: t(\"tracking-results.package-history.list.history-description-empty.\" + Event.Type.Code)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: hasNumber(Event.Segment.Destination) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"history-event-description\",\n              children: t(\"tracking-results.package-history.list.history-description-addition-installations.\" + Event.Type.Code)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"history-event-description\",\n              children: t(\"tracking-results.package-history.list.history-description-addition-airport.\" + Event.Type.Code)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: !hasNumber(Event.Segment.Destination) && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: Event.Segment.Destination === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"history-event-description\",\n              children: t(\"tracking-results.package-history.list.history-description-empty.\" + Event.Type.Code)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"history-event-description\",\n                children: [t(\"tracking-results.package-history.list.history-description.\" + Event.Type.Code), \" \", t(\"tracking-results.package-history.list.destination-city.\" + Event.Segment.Destination.substring(0, 3))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 27\n              }, this)\n            }, void 0, false)\n          }, void 0, false)\n        }, void 0, false)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this);\n    } else {\n      return \"\";\n    }\n  }) : /*#__PURE__*/_jsxDEV(\"li\", {\n    children: \"Nothing to show!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(HistoryList, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shipment-details-title\",\n      children: t(\"tracking-results.shipping-details.header.history\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: packageHistoryJSX\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShipmentsRowHistoryTab, \"QMCInoZ+wgb86BtH+7XSnNFwECg=\", false, function () {\n  return [useTranslation, useTracking];\n});\n\n_c = ShipmentsRowHistoryTab;\nexport default ShipmentsRowHistoryTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShipmentsRowHistoryTab\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/components/ShipmentsRowHistoryTab/ShipmentsRowHistoryTab.tsx"],"names":["React","useTranslation","getI18n","useTracking","Moment","HistoryList","CheckIcon","ShipmentsRowHistoryTab","airwayBill","t","trackingContext","lastTrackingCode","trackingDetails","trackingData","get","locale","resolvedLanguage","validCodes","atConsigneeLocationCodes","arrivedAtConsigneeLocation","shipmentEvent","isAtConsigneeLocationFlag","atConsigneeLocationCode","hasNumber","myString","test","dateCapitalized","date","currentLang","newDate","format","replace","charAt","toUpperCase","slice","packageHistoryJSX","Events","filter","Event","includes","Type","Code","reverse","map","index","__html","Timestamp","participants","city","toLowerCase","Location","Airport","substring","Segment","FlightNumber","endsWith","Destination"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useTranslation, getI18n } from \"react-i18next\";\nimport { useTracking } from \"../../providers/TrackingProvider\";\nimport Moment from \"moment\";\nimport { HistoryList } from \"./ShipmentsRowHistoryTab.style\";\nimport CheckIcon from \"@mui/icons-material/Check\";\n\nfunction ShipmentsRowHistoryTab({ airwayBill }) {\n  const { t } = useTranslation();\n  const trackingContext = useTracking();\n  let lastTrackingCode = \"\";\n\n  const trackingDetails = trackingContext.trackingData.get(airwayBill)[\n    \"Content\"\n  ][0] as any;\n\n  Moment.locale(getI18n().resolvedLanguage);\n  const validCodes = [\n    \"BKD\",\n    \"RCS\",\n    \"DEP\",\n    \"RCF\",\n    \"GDL\",\n    \"ADL\",\n    \"RPU\",\n    \"DLD\",\n    \"DPU\",\n    \"DDL\",\n    \"RTS\"\n  ];\n\n  const atConsigneeLocationCodes = [\"DLD\", \"DDL\", \"GDL\", \"ADL\", \"ATD\", \"DPU\"];\n\n  const arrivedAtConsigneeLocation = shipmentEvent => {\n    let isAtConsigneeLocationFlag = false;\n    for (const atConsigneeLocationCode of atConsigneeLocationCodes) {\n      if (atConsigneeLocationCode === shipmentEvent) {\n        isAtConsigneeLocationFlag = true;\n      }\n    }\n    return isAtConsigneeLocationFlag;\n  };\n\n  function hasNumber(myString: string) {\n    return /\\d/.test(myString);\n  }\n\n  // Makes the first letter of the week day capital for french\n  const dateCapitalized = date => {\n    let currentLang = getI18n().resolvedLanguage;\n    let newDate;\n    if (currentLang === \"fr\") {\n      newDate = Moment(date)\n        .format(\"dddd Do MMMM YYYY, h:mm a\")\n        .replace(/(\\d)(er)/g, \"$1<sup>$2</sup>\");\n    } else {\n      newDate = Moment(date)\n        .format(\"dddd MMMM Do YYYY, h:mm a\")\n        .replace(/(\\d)(st|nd|rd|th)/g, \"$1<sup>$2</sup>\");\n    }\n    return newDate.charAt(0).toUpperCase() + newDate.slice(1);\n  };\n\n  const packageHistoryJSX = trackingDetails.Events ? (\n    [...trackingDetails.Events]\n      .filter(Event => validCodes.includes(Event.Type.Code))\n      .reverse()\n      .map(function (Event, index) {\n        // Do not display 2 identical events in a row, except for ADL, only show latest\n        // https://aircanada.atlassian.net/browse/CDE-3079\n        if (lastTrackingCode !== Event.Type.Code || Event.Type.Code === \"ADL\") {\n          lastTrackingCode = Event.Type.Code;\n          return (\n            <li key={index} className={\"code-\" + Event.Type.Code}>\n              <CheckIcon className=\"check-icon\" />\n              {Event.Type.Code !== \"BKD\" ? (\n                <div className=\"history-event-time\">\n                  <span\n                    dangerouslySetInnerHTML={{\n                      __html: dateCapitalized(Event.Timestamp)\n                    }}\n                  />\n                  {t(\n                    \"tracking-results.package-history.list.history-date-location\"\n                  )}\n                  {/* Events Code that are already at destination use consignee location instead of airport code for location */}\n                  {arrivedAtConsigneeLocation(Event.Type.Code) ? (\n                    <>\n                      {\" \"}\n                      {trackingDetails.participants[1].city\n                        .charAt(0)\n                        .toUpperCase() +\n                        trackingDetails.participants[1].city\n                          .slice(1)\n                          .toLowerCase()}\n                    </>\n                  ) : (\n                    <>\n                      {\" \"}\n                      {t(\n                        \"tracking-results.package-history.list.destination-city.\" +\n                          Event.Location.Airport.Code.substring(0, 3)\n                      )}\n                    </>\n                  )}\n                </div>\n              ) : (\n                <div className=\"history-event-time\">\n                  {/* bkdEvent */}\n                  <span\n                    dangerouslySetInnerHTML={{\n                      __html: dateCapitalized(Event.Timestamp)\n                    }}\n                  />\n                </div>\n              )}\n              {Event.Segment.FlightNumber.endsWith(\"T\") ? (\n                <>\n                  {/* localDelivery */}\n                  {Event.Segment.Destination === \"\" ? (\n                    <div className=\"history-event-description\">\n                      {t(\n                        \"tracking-results.package-history.list.history-description-empty.\" +\n                          Event.Type.Code\n                      )}\n                    </div>\n                  ) : (\n                    <div>\n                      {/* continue */}\n                      {hasNumber(Event.Segment.Destination) ? (\n                        <div className=\"history-event-description\">\n                          {/* Local warehouse delivery  */}\n                          {t(\n                            \"tracking-results.package-history.list.history-description-addition-installations.\" +\n                              Event.Type.Code\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"history-event-description\">\n                          {/* Local airport delivery */}\n                          {t(\n                            \"tracking-results.package-history.list.history-description-addition-airport.\" +\n                              Event.Type.Code\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </>\n              ) : (\n                <>\n                  {!hasNumber(Event.Segment.Destination) && (\n                    <>\n                      {/* Empty Destination (could be RTS, ADL, GDL, etc) */}\n                      {Event.Segment.Destination === \"\" ? (\n                        <div className=\"history-event-description\">\n                          {t(\n                            \"tracking-results.package-history.list.history-description-empty.\" +\n                              Event.Type.Code\n                          )}\n                        </div>\n                      ) : (\n                        <>\n                          {/* flightDelivery */}\n                          {/* To airport for a flight delivery  */}\n                          <div className=\"history-event-description\">\n                            {t(\n                              \"tracking-results.package-history.list.history-description.\" +\n                                Event.Type.Code\n                            )}{\" \"}\n                            {t(\n                              \"tracking-results.package-history.list.destination-city.\" +\n                                Event.Segment.Destination.substring(0, 3)\n                            )}\n                          </div>\n                        </>\n                      )}\n                    </>\n                  )}\n                </>\n              )}\n            </li>\n          );\n        } else {\n          return \"\";\n        }\n      })\n  ) : (\n    <li>Nothing to show!</li>\n  );\n\n  return (\n    <HistoryList>\n      <div className=\"shipment-details-title\">\n        {t(\"tracking-results.shipping-details.header.history\")}\n      </div>\n      <ul>{packageHistoryJSX}</ul>\n    </HistoryList>\n  );\n}\n\nexport default ShipmentsRowHistoryTab;\n"]},"metadata":{},"sourceType":"module"}