{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/components/ShipmentsFilterPanel/ShipmentsFilterPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useCallback, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Button from \"@mui/material/Button\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { useTranslation } from \"react-i18next\";\nimport { SectionAccordion } from \"../../pages/ShipmentsDashboard/ShipmentsDashboard.style\";\nimport { StatusMenuItem, FilterPanel, FilterPanelButtonWrapper, FilterPanelFieldsWrapper } from \"./ShipmentsFilterPanel.style\";\nimport { Paper, Typography, AccordionSummary, AccordionDetails } from \"@mui/material\";\nimport { ExpandMore } from \"@mui/icons-material\";\nimport debounce from \"lodash.debounce\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShipmentsFilterPanel(props) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    dispatchList\n  } = props;\n  const [airWaybill, setAirWaybill] = React.useState(\"\");\n  const [packageReference, setPackageReference] = React.useState(\"\");\n  const [city, setCity] = React.useState(\"\");\n  const [status, setStatus] = React.useState([]);\n  const statusMap = [{\n    key: t(\"shipments-dashboard.filter.status.label.booked\"),\n    value: \"BKD\"\n  }, {\n    key: t(\"shipments-dashboard.filter.status.label.accepted\"),\n    value: \"RCS\"\n  }, {\n    key: t(\"shipments-dashboard.filter.status.label.in-transit\"),\n    value: \"DEP,RCF,RPU,MAN,ARR,PUL,DLV\"\n  }, {\n    key: t(\"shipments-dashboard.filter.status.label.out-for-delivery\"),\n    value: \"GDL\"\n  }, {\n    key: t(\"shipments-dashboard.filter.status.label.delivery-attempt\"),\n    value: \"ADL\"\n  }, {\n    key: t(\"shipments-dashboard.filter.status.label.delivered\"),\n    value: \"DLD,DPU,DDL\"\n  },\n  /** \n   * HIDE FOR NOW TILL FUTURE PHASE\n  { \n    key: t(\"shipments-dashboard.filter.status.label.missing\"),\n    value: \"MMM\"\n  },\n  **/\n  {\n    key: t(\"shipments-dashboard.filter.status.label.return-to-shipper\"),\n    value: \"RTS\"\n  }];\n\n  const handleClearChanges = () => {\n    console.log(\"@@@@@@@ handleClearChanges\");\n    setAirWaybill(\"\");\n    dispatchList({\n      type: \"airWaybill\",\n      value: \"\"\n    });\n    setPackageReference(\"\");\n    dispatchList({\n      type: \"packageReference\",\n      value: \"\"\n    });\n    setCity(\"\");\n    dispatchList({\n      type: \"city\",\n      value: \"\"\n    });\n    setStatus([]);\n    dispatchList({\n      type: \"lastEventType\",\n      value: \"\"\n    });\n  }; // call dispatchList to apply the filter\n\n\n  const changeFilterHandler = useCallback((event, type) => {\n    console.log(\"changeFilterHandler called after debounce\");\n    dispatchList({\n      type: type,\n      value: event.target.value\n    });\n  }, [dispatchList]);\n\n  const changeFilterStatusHandler = event => {\n    console.log(\"changeFilterStatusHandler: \" + JSON.stringify(event.target.value));\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setStatus( // On autofill we get a stringified value.\n    typeof value === \"string\" ? value.split(\",\") : value);\n    let newArray = value.toString().split(\",\");\n    const statusCodes = newArray.map(status => {\n      var _statusMap$find;\n\n      return (_statusMap$find = statusMap.find(el => el.key === status)) === null || _statusMap$find === void 0 ? void 0 : _statusMap$find.value;\n    });\n    dispatchList({\n      type: \"lastEventType\",\n      value: statusCodes\n    });\n  }; // Debounce before changing the filter\n  // to avoid to many api request when typing fast\n\n\n  const debouncedChangeFilterHandler = useMemo(() => debounce(changeFilterHandler, 300), [changeFilterHandler]); // Stop the invocation of the debounced function\n  // after unmounting\n\n  useEffect(() => {\n    return () => {\n      debouncedChangeFilterHandler.cancel();\n    };\n  }, [debouncedChangeFilterHandler]);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    variant: \"section\",\n    sx: {\n      padding: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(SectionAccordion, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 23\n        }, this),\n        \"aria-controls\": \"filter-panel-content\",\n        id: \"filter-panel-header\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h2\",\n          variant: \"sectionTitle\",\n          children: t(\"shipments-dashboard.filter.header.section-title\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: /*#__PURE__*/_jsxDEV(FilterPanel, {\n          children: [/*#__PURE__*/_jsxDEV(FilterPanelButtonWrapper, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              onClick: handleClearChanges,\n              disabled: !airWaybill && !packageReference && !city && status.length === 0,\n              children: t(\"shipments-dashboard.filter.button.clear\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FilterPanelFieldsWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: t(\"shipments-dashboard.filter.label.airWaybill\"),\n                id: \"airWaybill\",\n                type: \"text\",\n                name: \"airWaybill\",\n                value: airWaybill,\n                onChange: e => {\n                  setAirWaybill(e.target.value);\n                  debouncedChangeFilterHandler(e, \"airWaybill\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: t(\"shipments-dashboard.filter.label.packageReference\"),\n                id: \"packageReference\",\n                type: \"text\",\n                name: \"packageReference\",\n                value: packageReference,\n                onChange: e => {\n                  setPackageReference(e.target.value);\n                  debouncedChangeFilterHandler(e, \"packageReference\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: t(\"shipments-dashboard.filter.label.destination\"),\n                id: \"consigneeCity\",\n                type: \"text\",\n                name: \"consigneeCity\",\n                value: city,\n                onChange: e => {\n                  setCity(e.target.value);\n                  debouncedChangeFilterHandler(e, \"city\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                label: t(\"shipments-dashboard.filter.label.status\"),\n                id: \"status-multiple-checkbox-test\",\n                name: \"status-multiple-checkbox-test\",\n                onChange: changeFilterStatusHandler,\n                value: status,\n                SelectProps: {\n                  multiple: true,\n                  renderValue: selected => selected.join(\",\")\n                },\n                children: statusMap.map(s => /*#__PURE__*/_jsxDEV(StatusMenuItem, {\n                  value: s.key,\n                  children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: status.indexOf(s.key) > -1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: s.key\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this)]\n                }, s.value, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShipmentsFilterPanel, \"AIaLcOTrtrAzG+koWGWY6aXsqk0=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ShipmentsFilterPanel;\nexport default ShipmentsFilterPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShipmentsFilterPanel\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/components/ShipmentsFilterPanel/ShipmentsFilterPanel.tsx"],"names":["React","useMemo","useCallback","useEffect","TextField","FormControl","Button","ListItemText","Checkbox","useTranslation","SectionAccordion","StatusMenuItem","FilterPanel","FilterPanelButtonWrapper","FilterPanelFieldsWrapper","Paper","Typography","AccordionSummary","AccordionDetails","ExpandMore","debounce","ShipmentsFilterPanel","props","t","dispatchList","airWaybill","setAirWaybill","useState","packageReference","setPackageReference","city","setCity","status","setStatus","statusMap","key","value","handleClearChanges","console","log","type","changeFilterHandler","event","target","changeFilterStatusHandler","JSON","stringify","split","newArray","toString","statusCodes","map","find","el","debouncedChangeFilterHandler","cancel","padding","length","e","multiple","renderValue","selected","join","s","indexOf"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Button from \"@mui/material/Button\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { useTranslation } from \"react-i18next\";\nimport { SectionAccordion } from \"../../pages/ShipmentsDashboard/ShipmentsDashboard.style\";\nimport {\n  StatusMenuItem,\n  FilterPanel,\n  FilterPanelButtonWrapper,\n  FilterPanelFieldsWrapper\n} from \"./ShipmentsFilterPanel.style\";\nimport {\n  Paper,\n  Typography,\n  AccordionSummary,\n  AccordionDetails\n} from \"@mui/material\";\nimport { ExpandMore } from \"@mui/icons-material\";\nimport debounce from \"lodash.debounce\";\n\nfunction ShipmentsFilterPanel(props) {\n  const { t } = useTranslation();\n  const { dispatchList } = props;\n  const [airWaybill, setAirWaybill] = React.useState<string>(\"\");\n  const [packageReference, setPackageReference] = React.useState<string>(\"\");\n  const [city, setCity] = React.useState<string>(\"\");\n  const [status, setStatus] = React.useState<string[]>([]);\n\n  const statusMap = [\n    {\n      key: t(\"shipments-dashboard.filter.status.label.booked\"),\n      value: \"BKD\"\n    },\n    {\n      key: t(\"shipments-dashboard.filter.status.label.accepted\"),\n      value: \"RCS\"\n    },\n    {\n      key: t(\"shipments-dashboard.filter.status.label.in-transit\"),\n      value: \"DEP,RCF,RPU,MAN,ARR,PUL,DLV\"\n    },\n    {\n      key: t(\"shipments-dashboard.filter.status.label.out-for-delivery\"),\n      value: \"GDL\"\n    },\n    {\n      key: t(\"shipments-dashboard.filter.status.label.delivery-attempt\"),\n      value: \"ADL\"\n    },\n    {\n      key: t(\"shipments-dashboard.filter.status.label.delivered\"),\n      value: \"DLD,DPU,DDL\"\n    },\n    /** \n     * HIDE FOR NOW TILL FUTURE PHASE\n    { \n      key: t(\"shipments-dashboard.filter.status.label.missing\"),\n      value: \"MMM\"\n    },\n    **/\n    {\n      key: t(\"shipments-dashboard.filter.status.label.return-to-shipper\"),\n      value: \"RTS\"\n    }\n  ];\n\n  const handleClearChanges = () => {\n    console.log(\"@@@@@@@ handleClearChanges\");\n    setAirWaybill(\"\");\n    dispatchList({ type: \"airWaybill\", value: \"\" });\n    setPackageReference(\"\");\n    dispatchList({ type: \"packageReference\", value: \"\" });\n    setCity(\"\");\n    dispatchList({ type: \"city\", value: \"\" });\n    setStatus([]);\n    dispatchList({ type: \"lastEventType\", value: \"\" });\n  };\n\n  // call dispatchList to apply the filter\n  const changeFilterHandler = useCallback(\n    (event, type) => {\n      console.log(\"changeFilterHandler called after debounce\");\n      dispatchList({ type: type, value: event.target.value });\n    },\n    [dispatchList]\n  );\n\n  const changeFilterStatusHandler = event => {\n    console.log(\n      \"changeFilterStatusHandler: \" + JSON.stringify(event.target.value)\n    );\n    const {\n      target: { value }\n    } = event;\n    setStatus(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n\n    let newArray = value.toString().split(\",\");\n    const statusCodes = newArray.map(\n      status => statusMap.find(el => el.key === status)?.value\n    );\n    dispatchList({ type: \"lastEventType\", value: statusCodes });\n  };\n\n  // Debounce before changing the filter\n  // to avoid to many api request when typing fast\n  const debouncedChangeFilterHandler = useMemo(\n    () => debounce(changeFilterHandler, 300),\n    [changeFilterHandler]\n  );\n\n  // Stop the invocation of the debounced function\n  // after unmounting\n  useEffect(() => {\n    return () => {\n      debouncedChangeFilterHandler.cancel();\n    };\n  }, [debouncedChangeFilterHandler]);\n\n  return (\n    <Paper variant=\"section\" sx={{ padding: 0 }}>\n      <SectionAccordion>\n        <AccordionSummary\n          expandIcon={<ExpandMore />}\n          aria-controls=\"filter-panel-content\"\n          id=\"filter-panel-header\"\n        >\n          <Typography component=\"h2\" variant=\"sectionTitle\">\n            {t(\"shipments-dashboard.filter.header.section-title\")}\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <FilterPanel>\n            <FilterPanelButtonWrapper>\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                onClick={handleClearChanges}\n                disabled={\n                  !airWaybill &&\n                  !packageReference &&\n                  !city &&\n                  status.length === 0\n                }\n              >\n                {t(\"shipments-dashboard.filter.button.clear\")}\n              </Button>\n            </FilterPanelButtonWrapper>\n            <FilterPanelFieldsWrapper>\n              <FormControl>\n                <TextField\n                  label={t(\"shipments-dashboard.filter.label.airWaybill\")}\n                  id=\"airWaybill\"\n                  type=\"text\"\n                  name=\"airWaybill\"\n                  value={airWaybill}\n                  onChange={e => {\n                    setAirWaybill(e.target.value);\n                    debouncedChangeFilterHandler(e, \"airWaybill\");\n                  }}\n                />\n              </FormControl>\n              <FormControl>\n                <TextField\n                  label={t(\"shipments-dashboard.filter.label.packageReference\")}\n                  id=\"packageReference\"\n                  type=\"text\"\n                  name=\"packageReference\"\n                  value={packageReference}\n                  onChange={e => {\n                    setPackageReference(e.target.value);\n                    debouncedChangeFilterHandler(e, \"packageReference\");\n                  }}\n                />\n              </FormControl>\n              <FormControl>\n                <TextField\n                  label={t(\"shipments-dashboard.filter.label.destination\")}\n                  id=\"consigneeCity\"\n                  type=\"text\"\n                  name=\"consigneeCity\"\n                  value={city}\n                  onChange={e => {\n                    setCity(e.target.value);\n                    debouncedChangeFilterHandler(e, \"city\");\n                  }}\n                />\n              </FormControl>\n              <FormControl>\n                <TextField\n                  select\n                  label={t(\"shipments-dashboard.filter.label.status\")}\n                  id=\"status-multiple-checkbox-test\"\n                  name=\"status-multiple-checkbox-test\"\n                  onChange={changeFilterStatusHandler}\n                  value={status}\n                  SelectProps={{\n                    multiple: true,\n                    renderValue: selected => (selected as string[]).join(\",\")\n                  }}\n                >\n                  {statusMap.map(s => (\n                    <StatusMenuItem key={s.value} value={s.key}>\n                      <Checkbox checked={status.indexOf(s.key) > -1} />\n                      <ListItemText primary={s.key} />\n                    </StatusMenuItem>\n                  ))}\n                </TextField>\n              </FormControl>\n            </FilterPanelFieldsWrapper>\n          </FilterPanel>\n        </AccordionDetails>\n      </SectionAccordion>\n    </Paper>\n  );\n}\n\nexport default ShipmentsFilterPanel;\n"]},"metadata":{},"sourceType":"module"}