{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/pages/Login/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Alert, Box, Grid, IconButton, InputAdornment, Typography } from \"@mui/material\";\nimport { makeValidate, makeRequired, showErrorOnBlur } from \"mui-rff\";\nimport { Form } from \"react-final-form\";\nimport { OnChange } from \"react-final-form-listeners\";\nimport { FORM_ERROR } from \"final-form\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"i18next\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { CheckBoxWrapper, LoginBox, LoginButton, LoginErrorHelperText, LoginHeader, LoginLink, LoginTextField } from \"../../components/LoginComponents/LoginComponents.style\"; //We are using our own version of the Checkbox instead of mui-rff's version because we need to hook into the checked and onChange props.\n//This can removed this if this issue is ever addressed and fixed.\n\nimport { Checkboxes } from \"../../components/Mui/RivoMuiRffCheckbox\";\nimport { LoginSchema } from \"../../schema/LoginSchema\";\nimport { useAuth } from \"../../providers/Auth\";\nimport VerificationCode from \"../../components/VerificationCode/VerificationCode\";\nimport NewPassword from \"../../components/NewPassword/NewPassword\";\nimport { TabTitle } from \"../../utils/GeneralFunctions\";\n/**\n * Uses the optional helper makeValidate function to format the error messages\n * into something usable by final form.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validate = makeValidate(LoginSchema, error => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"error\",\n    children: i18n.t(error.message)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n});\n/**\n * Grabs all the required fields from the schema so that they can be passed into\n * the components without having to declare them in both the schema and the component.\n */\n\nconst required = makeRequired(LoginSchema);\n\nconst Login = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const state = location.state;\n  TabTitle(t(\"login.block1.header.page-title\"));\n  const {\n    signIn\n  } = useAuth();\n  const [submittedValues, setSubmittedValues] = useState(undefined);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [unloggedUser, setUnloggedUser] = useState({});\n  const [rememberEmail, setRememberEmail] = useState(localStorage.getItem(\"rememberEmail\") === \"true\" || false);\n  const [email, setEmail] = useState(localStorage.getItem(\"email\") || \"\");\n  const [password, setPassword] = useState(\"\");\n  const initialValues = {\n    email: email,\n    password: password,\n    rememberEmail: rememberEmail\n  };\n\n  const onChangeRememberMe = e => {\n    let value = e.target.checked;\n    setRememberEmail(value);\n  };\n\n  const onChangeEmail = value => {\n    setEmail(value);\n  };\n\n  const onChangePassword = value => {\n    setPassword(value);\n  };\n\n  const onSubmit = async values => {\n    setSubmittedValues(values); //handle rememberEmail\n\n    if (values.email !== \"\" && values.rememberEmail === true) {\n      localStorage.setItem(\"rememberEmail\", values.rememberEmail.toString());\n      localStorage.setItem(\"email\", values.email);\n    } else {\n      localStorage.setItem(\"rememberEmail\", \"false\");\n      localStorage.setItem(\"email\", \"\");\n    } // lowercase the email and trim white space around password\n\n\n    const usr = await signIn(values.email.toLowerCase(), values.password.trim());\n\n    if (usr.status === \"FAIL\" || usr.error) {\n      return {\n        [FORM_ERROR]: \"login.block-form.loginError\"\n      };\n    } else if (usr.challengeName === \"SMS_MFA\" || usr.challengeName === \"SOFTWARE_TOKEN_MFA\" || usr.challengeName === \"CUSTOM_CHALLENGE\") {\n      setShowConfirmation(true);\n      setUnloggedUser(usr);\n    } else if (usr.challengeName === \"NEW_PASSWORD_REQUIRED\") {\n      setShowNewPassword(true);\n      setUnloggedUser(usr);\n    } else {\n      navigate(\"/shipments-dashboard\");\n    }\n  }; // remove first and last name in local storage\n\n\n  React.useEffect(() => {\n    if (state && state.showAlert && state.message === \"all.alert.logout\") {\n      if (sessionStorage) {\n        let sessionName = sessionStorage.getItem(\"firstName\") ? sessionStorage.getItem(\"firstName\") : \"\";\n        sessionStorage.setItem(\"firstName\", \"\");\n        sessionStorage.setItem(\"lastName\", \"\");\n        localStorage.setItem(\"firstName\", \"\");\n        localStorage.setItem(\"lastName\", \"\");\n\n        if (sessionName === null || sessionName !== null && sessionName !== \"\") {\n          window.location.reload();\n        }\n      }\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [state && state.showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: state.severity === \"success\" ? \"success\" : state.severity === \"error\" ? \"error\" : state.severity === \"info\" ? \"info\" : \"warning\",\n      children: t(state.message)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), !showConfirmation && !showNewPassword && Object.keys(unloggedUser).length === 0 && /*#__PURE__*/_jsxDEV(LoginBox, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        sx: {\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(LoginHeader, {\n            component: \"h1\",\n            variant: \"display2\",\n            color: \"fuchsiaAccessible.main\",\n            children: t(\"login.block1.header.page-title\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"p\",\n            variant: \"lead\",\n            children: t(\"login.block1.header.short-intro\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: onSubmit,\n            initialValues: submittedValues ? submittedValues : initialValues,\n            validate: validate,\n            render: _ref => {\n              let {\n                submitError,\n                handleSubmit,\n                submitting\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit //noValidate={true}\n                ,\n                autoComplete: \"new-password\",\n                children: [/*#__PURE__*/_jsxDEV(LoginTextField, {\n                  type: \"text\",\n                  required: required.email,\n                  label: t(\"login.block-form.input.email\"),\n                  id: \"email\",\n                  name: \"email\",\n                  variant: \"filled\",\n                  autoComplete: \"email\",\n                  InputProps: {\n                    disableUnderline: true\n                  },\n                  showError: showErrorOnBlur,\n                  value: email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(OnChange, {\n                  name: \"email\",\n                  children: value => {\n                    onChangeEmail(value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(LoginTextField, {\n                  required: required.password,\n                  type: showPassword ? \"text\" : \"password\",\n                  label: t(\"login.block-form.input.password\"),\n                  id: \"password\",\n                  name: \"password\",\n                  variant: \"filled\",\n                  autoComplete: \"current-password\",\n                  showError: showErrorOnBlur,\n                  InputProps: {\n                    disableUnderline: true,\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        \"aria-label\": showPassword ? t(\"all.button.password-icon-show\") : t(\"all.button.password-icon-hide\"),\n                        onClick: () => setShowPassword(!showPassword),\n                        onMouseDown: handleMouseDownPassword,\n                        edge: \"end\",\n                        component: \"button\",\n                        disableRipple: true,\n                        children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 230,\n                          columnNumber: 35\n                        }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 232,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 29\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(OnChange, {\n                  name: \"password\",\n                  children: value => {\n                    onChangePassword(value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CheckBoxWrapper, {\n                  sx: {\n                    display: \"block\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Checkboxes, {\n                    required: required.rememberEmail,\n                    id: \"rememberEmail\",\n                    name: \"rememberEmail\",\n                    data: {\n                      label: t(\"login.block-form.input.checkbox\"),\n                      value: true,\n                      onChange: onChangeRememberMe,\n                      checked: rememberEmail\n                    },\n                    disableRipple: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this), submitError && /*#__PURE__*/_jsxDEV(LoginErrorHelperText, {\n                  variant: \"filled\",\n                  filled: true,\n                  required: true,\n                  component: \"p\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error\",\n                    children: t(submitError)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n                  variant: \"contained\",\n                  type: \"submit\",\n                  disabled: submitting,\n                  size: \"large\",\n                  sx: {\n                    mr: theme => theme.spacer_m\n                  },\n                  disableElevation: true,\n                  children: t(\"login.block-form.button.submit\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(LoginLink, {\n                  component: Link,\n                  to: \"/forgot-password\",\n                  variant: \"body1\",\n                  color: \"fuchsiaAccessible.main\",\n                  children: t(\"login.block-form.button.link\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    my: theme => theme.spacer_l\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"p\",\n                    variant: \"h4\",\n                    sx: {\n                      mb: theme => theme.spacer_m\n                    },\n                    children: t(\"login.block2.text.account\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"p\",\n                    variant: \"caption\",\n                    children: t(\"login.block2.text.link\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }, this), showConfirmation && Object.keys(unloggedUser).length > 0 && /*#__PURE__*/_jsxDEV(VerificationCode, {\n      user: unloggedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this), showNewPassword && Object.keys(unloggedUser).length > 0 && /*#__PURE__*/_jsxDEV(NewPassword, {\n      user: unloggedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"3kbZD1D7HEF8sa0qrcjvY93rRcg=\", false, function () {\n  return [useTranslation, useLocation, useNavigate, useAuth];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/pages/Login/Login.tsx"],"names":["React","useState","Alert","Box","Grid","IconButton","InputAdornment","Typography","makeValidate","makeRequired","showErrorOnBlur","Form","OnChange","FORM_ERROR","useTranslation","i18n","Visibility","VisibilityOff","Link","useLocation","useNavigate","CheckBoxWrapper","LoginBox","LoginButton","LoginErrorHelperText","LoginHeader","LoginLink","LoginTextField","Checkboxes","LoginSchema","useAuth","VerificationCode","NewPassword","TabTitle","validate","error","t","message","required","Login","location","navigate","state","signIn","submittedValues","setSubmittedValues","undefined","showPassword","setShowPassword","showConfirmation","setShowConfirmation","showNewPassword","setShowNewPassword","unloggedUser","setUnloggedUser","rememberEmail","setRememberEmail","localStorage","getItem","email","setEmail","password","setPassword","initialValues","onChangeRememberMe","e","value","target","checked","onChangeEmail","onChangePassword","onSubmit","values","setItem","toString","usr","toLowerCase","trim","status","challengeName","useEffect","showAlert","sessionStorage","sessionName","window","reload","handleMouseDownPassword","event","preventDefault","severity","Object","keys","length","pt","submitError","handleSubmit","submitting","disableUnderline","endAdornment","display","label","onChange","mr","theme","spacer_m","my","spacer_l","mb"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Alert,\n  Box,\n  Grid,\n  IconButton,\n  InputAdornment,\n  Typography\n} from \"@mui/material\";\nimport { makeValidate, makeRequired, showErrorOnBlur } from \"mui-rff\";\nimport { Form } from \"react-final-form\";\nimport { OnChange } from \"react-final-form-listeners\";\nimport { FORM_ERROR } from \"final-form\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"i18next\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport {\n  CheckBoxWrapper,\n  LoginBox,\n  LoginButton,\n  LoginErrorHelperText,\n  LoginHeader,\n  LoginLink,\n  LoginTextField\n} from \"../../components/LoginComponents/LoginComponents.style\";\n//We are using our own version of the Checkbox instead of mui-rff's version because we need to hook into the checked and onChange props.\n//This can removed this if this issue is ever addressed and fixed.\nimport { Checkboxes } from \"../../components/Mui/RivoMuiRffCheckbox\";\nimport { AlertStateInterface } from \"../../interfaces/AlertStateInterface\";\nimport { LoginSchema } from \"../../schema/LoginSchema\";\nimport { LoginInterface } from \"../../interfaces/LoginInterface\";\nimport { useAuth } from \"../../providers/Auth\";\nimport VerificationCode from \"../../components/VerificationCode/VerificationCode\";\nimport NewPassword from \"../../components/NewPassword/NewPassword\";\nimport { TabTitle } from \"../../utils/GeneralFunctions\";\n/**\n * Uses the optional helper makeValidate function to format the error messages\n * into something usable by final form.\n */\nconst validate = makeValidate(LoginSchema, error => {\n  return <span className=\"error\">{i18n.t(error.message)}</span>;\n});\n/**\n * Grabs all the required fields from the schema so that they can be passed into\n * the components without having to declare them in both the schema and the component.\n */\nconst required = makeRequired(LoginSchema);\n\nconst Login = () => {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const state = location.state as AlertStateInterface;\n  TabTitle(t(\"login.block1.header.page-title\"));\n  const { signIn } = useAuth();\n  const [submittedValues, setSubmittedValues] = useState<\n    LoginInterface | undefined\n  >(undefined);\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [unloggedUser, setUnloggedUser] = useState<any>({});\n  const [rememberEmail, setRememberEmail] = useState<boolean>(\n    localStorage.getItem(\"rememberEmail\") === \"true\" || false\n  );\n  const [email, setEmail] = useState(localStorage.getItem(\"email\") || \"\");\n  const [password, setPassword] = useState(\"\");\n\n  const initialValues: LoginInterface = {\n    email: email,\n    password: password,\n    rememberEmail: rememberEmail\n  };\n\n  const onChangeRememberMe = e => {\n    let value = e.target.checked;\n    setRememberEmail(value);\n  };\n\n  const onChangeEmail = value => {\n    setEmail(value);\n  };\n\n  const onChangePassword = value => {\n    setPassword(value);\n  };\n\n  const onSubmit = async (values: LoginInterface) => {\n    setSubmittedValues(values);\n    //handle rememberEmail\n    if (values.email !== \"\" && values.rememberEmail === true) {\n      localStorage.setItem(\"rememberEmail\", values.rememberEmail.toString());\n      localStorage.setItem(\"email\", values.email);\n    } else {\n      localStorage.setItem(\"rememberEmail\", \"false\");\n      localStorage.setItem(\"email\", \"\");\n    }\n\n    // lowercase the email and trim white space around password\n    const usr: any = await signIn(values.email.toLowerCase(), values.password.trim());\n    if (usr.status === \"FAIL\" || usr.error) {\n      return { [FORM_ERROR]: \"login.block-form.loginError\" };\n    } else if (\n      usr.challengeName === \"SMS_MFA\" ||\n      usr.challengeName === \"SOFTWARE_TOKEN_MFA\" ||\n      usr.challengeName === \"CUSTOM_CHALLENGE\"\n    ) {\n      setShowConfirmation(true);\n      setUnloggedUser(usr);\n    } else if (usr.challengeName === \"NEW_PASSWORD_REQUIRED\") {\n      setShowNewPassword(true);\n      setUnloggedUser(usr);\n    } else {\n      navigate(\"/shipments-dashboard\");\n    }\n  };\n\n  // remove first and last name in local storage\n  React.useEffect(() => {\n    if (state && state.showAlert && state.message === \"all.alert.logout\") {\n      if (sessionStorage) {       \n        let sessionName = (sessionStorage.getItem(\"firstName\"))?sessionStorage.getItem(\"firstName\"):\"\";\n        sessionStorage.setItem(\"firstName\", \"\");\n        sessionStorage.setItem(\"lastName\", \"\");\n        localStorage.setItem(\"firstName\", \"\");\n        localStorage.setItem(\"lastName\", \"\");\n        if (sessionName === null || (sessionName !== null && sessionName !== \"\")){\n          window.location.reload();\n        } \n      }\n    }\n    // eslint-disable-next-line\n  }, []);\n    \n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n  return (\n    <>\n      {state && state.showAlert && (\n        <Alert\n          severity={\n            state.severity === \"success\"\n              ? \"success\"\n              : state.severity === \"error\"\n              ? \"error\"\n              : state.severity === \"info\"\n              ? \"info\"\n              : \"warning\"\n          }\n        >\n          {t(state.message)}\n        </Alert>\n      )}\n      {!showConfirmation &&\n        !showNewPassword &&\n        Object.keys(unloggedUser).length === 0 && (\n          <LoginBox>\n            <Grid container sx={{ pt: 0 }}>\n              <Grid item xs={12} sm={6}>\n                <LoginHeader\n                  component=\"h1\"\n                  variant=\"display2\"\n                  color=\"fuchsiaAccessible.main\"\n                >\n                  {t(\"login.block1.header.page-title\")}\n                </LoginHeader>\n                <Typography component=\"p\" variant=\"lead\">\n                  {t(\"login.block1.header.short-intro\")}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Form\n                  onSubmit={onSubmit}\n                  initialValues={\n                    submittedValues ? submittedValues : initialValues\n                  }\n                  validate={validate}\n                  render={({ submitError, handleSubmit, submitting }) => (\n                    <form\n                      onSubmit={handleSubmit}\n                      //noValidate={true}\n                      autoComplete=\"new-password\"\n                    >\n                      <LoginTextField\n                        type=\"text\"\n                        required={required.email}\n                        label={t(\"login.block-form.input.email\")}\n                        id=\"email\"\n                        name=\"email\"\n                        variant=\"filled\"\n                        autoComplete=\"email\"\n                        InputProps={{ disableUnderline: true }}\n                        showError={showErrorOnBlur}\n                        value={email}\n                      />\n                      <OnChange name=\"email\">\n                        {value => {\n                          onChangeEmail(value);\n                        }}\n                      </OnChange>\n                      <LoginTextField\n                        required={required.password}\n                        type={showPassword ? \"text\" : \"password\"}\n                        label={t(\"login.block-form.input.password\")}\n                        id=\"password\"\n                        name=\"password\"\n                        variant=\"filled\"\n                        autoComplete=\"current-password\"\n                        showError={showErrorOnBlur}\n                        InputProps={{\n                          disableUnderline: true,\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                aria-label={\n                                  showPassword\n                                    ? t(\"all.button.password-icon-show\")\n                                    : t(\"all.button.password-icon-hide\")\n                                }\n                                onClick={() => setShowPassword(!showPassword)}\n                                onMouseDown={handleMouseDownPassword}\n                                edge=\"end\"\n                                component=\"button\"\n                                disableRipple\n                              >\n                                {showPassword ? (\n                                  <VisibilityOff />\n                                ) : (\n                                  <Visibility />\n                                )}\n                              </IconButton>\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      <OnChange name=\"password\">\n                        {value => {\n                          onChangePassword(value);\n                        }}\n                      </OnChange>\n                      <CheckBoxWrapper\n                        sx={{\n                          display: \"block\"\n                        }}\n                      >\n                        <Checkboxes\n                          required={required.rememberEmail}\n                          id=\"rememberEmail\"\n                          name=\"rememberEmail\"\n                          data={{\n                            label: t(\"login.block-form.input.checkbox\"),\n                            value: true,\n                            onChange: onChangeRememberMe,\n                            checked: rememberEmail\n                          }}\n                          disableRipple\n                        />\n                      </CheckBoxWrapper>\n                      {submitError && (\n                        <LoginErrorHelperText\n                          variant=\"filled\"\n                          filled\n                          required\n                          component=\"p\"\n                        >\n                          <span className=\"error\">{t(submitError)}</span>\n                        </LoginErrorHelperText>\n                      )}\n                      <LoginButton\n                        variant=\"contained\"\n                        type=\"submit\"\n                        disabled={submitting}\n                        size=\"large\"\n                        sx={{ mr: theme => theme.spacer_m }}\n                        disableElevation\n                      >\n                        {t(\"login.block-form.button.submit\")}\n                      </LoginButton>\n                      <LoginLink\n                        component={Link}\n                        to=\"/forgot-password\"\n                        variant=\"body1\"\n                        color=\"fuchsiaAccessible.main\"\n                      >\n                        {t(\"login.block-form.button.link\")}\n                      </LoginLink>\n                      <Box sx={{ my: theme => theme.spacer_l }}>\n                        <Typography\n                          component=\"p\"\n                          variant=\"h4\"\n                          sx={{ mb: theme => theme.spacer_m }}\n                        >\n                          {t(\"login.block2.text.account\")}\n                        </Typography>\n                        <Typography component=\"p\" variant=\"caption\">\n                          {t(\"login.block2.text.link\")}\n                        </Typography>\n                      </Box>\n                    </form>\n                  )}\n                />\n              </Grid>\n            </Grid>\n          </LoginBox>\n        )}\n      {showConfirmation && Object.keys(unloggedUser).length > 0 && (\n        <VerificationCode user={unloggedUser} />\n      )}\n      {showNewPassword && Object.keys(unloggedUser).length > 0 && (\n        <NewPassword user={unloggedUser} />\n      )}\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}