{"ast":null,"code":"import Auth from '@aws-amplify/auth';\nimport { Signer } from '@aws-amplify/core'; // sign a request using Amplify Auth and Signer\n\nexport default function SignRequest(method, basePath, apiPath, endPoint, data) {\n  const url = basePath + endPoint;\n  const api = apiPath + endPoint;\n  return Auth.currentCredentials().then(credentials => {\n    let cred = Auth.essentialCredentials(credentials);\n    return Promise.resolve(cred);\n  }).then(essentialCredentials => {\n    let params = {\n      headers: {\n        /* request headers */\n        'Accept-Language': 'en'\n      },\n      method: method,\n      api: api,\n      url: url,\n      host: url,\n      path: url,\n      data: JSON.stringify(data),\n      responseType: 'application/json',\n      timeout: 0\n    }; // set your AWS region and service here\n\n    const serviceInfo = {\n      region: process.env.REACT_APP_AWS_REGION,\n      service: 'execute-api'\n    }; // cred object keys must stay the same so that \n    // Signer.sign function can access the keys\n\n    let cred = {\n      secret_key: essentialCredentials.secretAccessKey,\n      access_key: essentialCredentials.accessKeyId,\n      session_token: essentialCredentials.sessionToken\n    }; // Signer.sign takes care of all other steps of Signature V4\n\n    let signedReq = Signer.sign(params, cred, serviceInfo);\n    return Promise.resolve(signedReq);\n  });\n}\n_c = SignRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignRequest\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/helpers/SignRequest.tsx"],"names":["Auth","Signer","SignRequest","method","basePath","apiPath","endPoint","data","url","api","currentCredentials","then","credentials","cred","essentialCredentials","Promise","resolve","params","headers","host","path","JSON","stringify","responseType","timeout","serviceInfo","region","process","env","REACT_APP_AWS_REGION","service","secret_key","secretAccessKey","access_key","accessKeyId","session_token","sessionToken","signedReq","sign"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CAGA;;AACA,eAAe,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,OAAvC,EAAgDC,QAAhD,EAA0DC,IAA1D,EAAgE;AAC3E,QAAMC,GAAG,GAAGJ,QAAQ,GAAGE,QAAvB;AACA,QAAMG,GAAG,GAAGJ,OAAO,GAAGC,QAAtB;AACA,SAAON,IAAI,CAACU,kBAAL,GACFC,IADE,CACGC,WAAW,IAAI;AACjB,QAAIC,IAAI,GAAGb,IAAI,CAACc,oBAAL,CAA0BF,WAA1B,CAAX;AACA,WAAOG,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAP;AACH,GAJE,EAKFF,IALE,CAKGG,oBAAoB,IAAI;AAC1B,QAAIG,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AAAE;AACP,2BAAmB;AADd,OADA;AAITf,MAAAA,MAAM,EAAEA,MAJC;AAKTM,MAAAA,GAAG,EAAEA,GALI;AAMTD,MAAAA,GAAG,EAAEA,GANI;AAOTW,MAAAA,IAAI,EAAEX,GAPG;AAQTY,MAAAA,IAAI,EAAEZ,GARG;AASTD,MAAAA,IAAI,EAAEc,IAAI,CAACC,SAAL,CAAef,IAAf,CATG;AAUTgB,MAAAA,YAAY,EAAE,kBAVL;AAWTC,MAAAA,OAAO,EAAE;AAXA,KAAb,CAD0B,CAe1B;;AACA,UAAMC,WAAW,GAAG;AAChBC,MAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,oBADJ;AAC0BC,MAAAA,OAAO,EAAE;AADnC,KAApB,CAhB0B,CAoB1B;AACA;;AACA,QAAIjB,IAAI,GAAG;AACPkB,MAAAA,UAAU,EAAEjB,oBAAoB,CAACkB,eAD1B;AAEPC,MAAAA,UAAU,EAAEnB,oBAAoB,CAACoB,WAF1B;AAGPC,MAAAA,aAAa,EAAErB,oBAAoB,CAACsB;AAH7B,KAAX,CAtB0B,CA4B1B;;AACA,QAAIC,SAAS,GAAGpC,MAAM,CAACqC,IAAP,CAAYrB,MAAZ,EAAoBJ,IAApB,EAA0BY,WAA1B,CAAhB;AACA,WAAOV,OAAO,CAACC,OAAR,CAAgBqB,SAAhB,CAAP;AACH,GApCE,CAAP;AAqCH;KAxCuBnC,W","sourcesContent":["import Auth from '@aws-amplify/auth';\nimport { Signer } from '@aws-amplify/core';\n\n\n// sign a request using Amplify Auth and Signer\nexport default function SignRequest(method, basePath, apiPath, endPoint, data) {\n    const url = basePath + endPoint;\n    const api = apiPath + endPoint;\n    return Auth.currentCredentials()\n        .then(credentials => {\n            let cred = Auth.essentialCredentials(credentials);\n            return Promise.resolve(cred);\n        })\n        .then(essentialCredentials => {\n            let params = {\n                headers: { /* request headers */ \n                    'Accept-Language': 'en'\n                },\n                method: method,\n                api: api,\n                url: url,\n                host: url,\n                path: url,\n                data: JSON.stringify(data),\n                responseType: 'application/json',\n                timeout: 0\n            };\n\n            // set your AWS region and service here\n            const serviceInfo = {\n                region: process.env.REACT_APP_AWS_REGION, service: 'execute-api'\n            }\n\n            // cred object keys must stay the same so that \n            // Signer.sign function can access the keys\n            let cred = {\n                secret_key: essentialCredentials.secretAccessKey,\n                access_key: essentialCredentials.accessKeyId,\n                session_token: essentialCredentials.sessionToken\n            }\n\n            // Signer.sign takes care of all other steps of Signature V4\n            let signedReq = Signer.sign(params, cred, serviceInfo);\n            return Promise.resolve(signedReq);\n        });\n}\n"]},"metadata":{},"sourceType":"module"}