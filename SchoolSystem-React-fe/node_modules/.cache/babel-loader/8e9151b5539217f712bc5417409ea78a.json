{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/components/ShipmentsSkSelect/ShipmentsSkSelect.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport { SkSelectStyle } from \"./ShipmentsSkSelect.style\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCustomer } from \"../../providers/CustomerProvider\";\nimport TextField from \"@mui/material/TextField\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShipmentsSkSelect(props) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    customerData\n  } = useCustomer();\n  const {\n    dispatchList\n  } = props;\n  const accountNumbers = useMemo(() => {\n    // transform string to array of accounts\n    return customerData.length > 0 && customerData[0].accountNumber && customerData[0].accountNumber.split(\";\") || [];\n  }, [customerData]);\n  useEffect(() => {\n    if (accountNumbers.length > 0) {\n      updateAccount(accountNumbers[0]);\n\n      if (accountNumbers.length > 1) {\n        setSelectStatus(\"visible\");\n      } else {\n        setSelectStatus(\"hidden\");\n      }\n    } // eslint-disable-next-line\n\n  }, [accountNumbers]); // set up default value\n\n  const [skValue, setSkValue] = useState(\"\");\n  const [skSelectStatus, setSelectStatus] = useState(\"hidden\"); // create sk map for dropdown\n\n  const skMap = [];\n  accountNumbers.forEach(function (acct) {\n    skMap.push({\n      key: acct,\n      value: acct\n    });\n  });\n\n  const changeSkHandler = event => {\n    updateAccount(event.target.value);\n  };\n\n  function updateAccount(skID) {\n    setSkValue(skID);\n    dispatchList({\n      type: \"account\",\n      value: skID\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(SkSelectStyle, {\n    className: skSelectStatus,\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: t(\"shipments-dashboard.sk.label.select\"),\n      id: \"select-sk\",\n      name: \"select-sk\",\n      onChange: changeSkHandler,\n      value: skValue,\n      children: skMap.map(s => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: s.key,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: s.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, s.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShipmentsSkSelect, \"66TE3jvP2B0+LOsAVVGnhnLCVJo=\", false, function () {\n  return [useTranslation, useCustomer];\n});\n\n_c = ShipmentsSkSelect;\nexport default ShipmentsSkSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShipmentsSkSelect\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/components/ShipmentsSkSelect/ShipmentsSkSelect.tsx"],"names":["useEffect","useMemo","useState","SkSelectStyle","useTranslation","useCustomer","TextField","ListItemText","MenuItem","ShipmentsSkSelect","props","t","customerData","dispatchList","accountNumbers","length","accountNumber","split","updateAccount","setSelectStatus","skValue","setSkValue","skSelectStatus","skMap","forEach","acct","push","key","value","changeSkHandler","event","target","skID","type","map","s"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAQP,cAAc,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAmBP,WAAW,EAApC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAmBH,KAAzB;AAEA,QAAMI,cAAc,GAAGb,OAAO,CAAC,MAAM;AACnC;AACA,WACGW,YAAY,CAACG,MAAb,GAAsB,CAAtB,IACCH,YAAY,CAAC,CAAD,CAAZ,CAAgBI,aADjB,IAECJ,YAAY,CAAC,CAAD,CAAZ,CAAgBI,aAAhB,CAA8BC,KAA9B,CAAoC,GAApC,CAFF,IAGA,EAJF;AAMD,GAR6B,EAQ3B,CAACL,YAAD,CAR2B,CAA9B;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,cAAc,CAACC,MAAf,GAAwB,CAA5B,EAA+B;AAC7BG,MAAAA,aAAa,CAACJ,cAAc,CAAC,CAAD,CAAf,CAAb;;AACA,UAAIA,cAAc,CAACC,MAAf,GAAwB,CAA5B,EAA+B;AAC7BI,QAAAA,eAAe,CAAC,SAAD,CAAf;AACD,OAFD,MAEO;AACLA,QAAAA,eAAe,CAAC,QAAD,CAAf;AACD;AACF,KARa,CASd;;AACD,GAVQ,EAUN,CAACL,cAAD,CAVM,CAAT,CAfgC,CA2BhC;;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM,CAACoB,cAAD,EAAiBH,eAAjB,IAAoCjB,QAAQ,CAAS,QAAT,CAAlD,CA7BgC,CA+BhC;;AACA,QAAMqB,KAAU,GAAG,EAAnB;AACAT,EAAAA,cAAc,CAACU,OAAf,CAAuB,UAAUC,IAAV,EAAgB;AACrCF,IAAAA,KAAK,CAACG,IAAN,CAAW;AAAEC,MAAAA,GAAG,EAAEF,IAAP;AAAaG,MAAAA,KAAK,EAAEH;AAApB,KAAX;AACD,GAFD;;AAIA,QAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/BZ,IAAAA,aAAa,CAACY,KAAK,CAACC,MAAN,CAAaH,KAAd,CAAb;AACD,GAFD;;AAIA,WAASV,aAAT,CAAuBc,IAAvB,EAA6B;AAC3BX,IAAAA,UAAU,CAACW,IAAD,CAAV;AACAnB,IAAAA,YAAY,CAAC;AAAEoB,MAAAA,IAAI,EAAE,SAAR;AAAmBL,MAAAA,KAAK,EAAEI;AAA1B,KAAD,CAAZ;AACD;;AAED,sBACE,QAAC,aAAD;AAAe,IAAA,SAAS,EAAEV,cAA1B;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,KAAK,EAAEX,CAAC,CAAC,qCAAD,CAFV;AAGE,MAAA,EAAE,EAAC,WAHL;AAIE,MAAA,IAAI,EAAC,WAJP;AAKE,MAAA,QAAQ,EAAEkB,eALZ;AAME,MAAA,KAAK,EAAET,OANT;AAAA,gBAQGG,KAAK,CAACW,GAAN,CAAUC,CAAC,iBACV,QAAC,QAAD;AAAwB,QAAA,KAAK,EAAEA,CAAC,CAACR,GAAjC;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEQ,CAAC,CAACR;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF,SAAeQ,CAAC,CAACP,KAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AARH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAhEQnB,iB;UACOL,c,EACWC,W;;;KAFlBI,iB;AAkET,eAAeA,iBAAf","sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport { SkSelectStyle } from \"./ShipmentsSkSelect.style\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCustomer } from \"../../providers/CustomerProvider\";\nimport TextField from \"@mui/material/TextField\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nfunction ShipmentsSkSelect(props) {\n  const { t } = useTranslation();\n  const { customerData } = useCustomer();\n  const { dispatchList } = props;\n\n  const accountNumbers = useMemo(() => {\n    // transform string to array of accounts\n    return (\n      (customerData.length > 0 &&\n        customerData[0].accountNumber &&\n        customerData[0].accountNumber.split(\";\")) ||\n      []\n    );\n  }, [customerData]);\n\n  useEffect(() => {\n    if (accountNumbers.length > 0) {\n      updateAccount(accountNumbers[0]);\n      if (accountNumbers.length > 1) {\n        setSelectStatus(\"visible\");\n      } else {\n        setSelectStatus(\"hidden\");\n      }\n    }\n    // eslint-disable-next-line\n  }, [accountNumbers]);\n\n  // set up default value\n  const [skValue, setSkValue] = useState<string>(\"\");\n  const [skSelectStatus, setSelectStatus] = useState<string>(\"hidden\");\n\n  // create sk map for dropdown\n  const skMap: any = [];\n  accountNumbers.forEach(function (acct) {\n    skMap.push({ key: acct, value: acct });\n  });\n\n  const changeSkHandler = event => {\n    updateAccount(event.target.value);\n  };\n\n  function updateAccount(skID) {\n    setSkValue(skID);\n    dispatchList({ type: \"account\", value: skID });\n  }\n\n  return (\n    <SkSelectStyle className={skSelectStatus}>\n      <TextField\n        select\n        label={t(\"shipments-dashboard.sk.label.select\")}\n        id=\"select-sk\"\n        name=\"select-sk\"\n        onChange={changeSkHandler}\n        value={skValue}\n      >\n        {skMap.map(s => (\n          <MenuItem key={s.value} value={s.key}>\n            <ListItemText primary={s.key} />\n          </MenuItem>\n        ))}\n      </TextField>\n    </SkSelectStyle>\n  );\n}\n\nexport default ShipmentsSkSelect;\n"]},"metadata":{},"sourceType":"module"}