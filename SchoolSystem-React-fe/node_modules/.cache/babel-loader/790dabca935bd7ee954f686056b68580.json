{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/providers/TrackingProvider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\"; //import { useAuth } from './Auth';\n\nimport { useApiError } from \"./ApiErrorProvider\";\nimport { error } from \"../constants/bindings\";\nimport SignRequest from \"../helpers/SignRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackingContext = /*#__PURE__*/React.createContext({\n  loading: false,\n  getTrackingData: trackingId => {},\n  resetTrackingData: () => {},\n  trackingData: new Map()\n});\nexport const TrackingProvider = props => {\n  _s();\n\n  const [trackingData, setTrackingData] = React.useState(new Map());\n  const [loading, setLoading] = React.useState(false);\n  const {\n    setErrorCode\n  } = useApiError();\n\n  const getTrackingData = async trackingId => {\n    if (!trackingId) {\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const body = {\n        AirWaybillReference: trackingId\n      };\n      const data = await SignRequest(\"POST\", process.env.REACT_APP_API_BASE, process.env.REACT_APP_AKAMAI_DBAAS_API_URL, \"/track/api/operations/status\", body).then(signedRequest => {\n        return fetch(signedRequest.api, {\n          method: \"POST\",\n          headers: signedRequest.headers,\n          body: signedRequest.data\n        });\n      }).then(response => response.json()).then(response => {\n        return response;\n      });\n      setTrackingData(trackingData.set(trackingId, data));\n      setLoading(false);\n      return data;\n    } catch (e) {\n      var _e$response;\n\n      if ((_e$response = e.response) !== null && _e$response !== void 0 && _e$response.status) {\n        var _e$response2;\n\n        setErrorCode((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.status);\n      } else {\n        setErrorCode(error.DEFAULT);\n      }\n\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetTrackingData = () => {\n    setTrackingData(new Map());\n  };\n\n  return /*#__PURE__*/_jsxDEV(TrackingContext.Provider, {\n    value: {\n      loading,\n      getTrackingData,\n      trackingData,\n      resetTrackingData\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TrackingProvider, \"dq/7SDT/jpYMJ5QBzA4GhsWC2YI=\", false, function () {\n  return [useApiError];\n});\n\n_c = TrackingProvider;\nexport const useTracking = () => {\n  _s2();\n\n  const context = React.useContext(TrackingContext);\n  return context;\n};\n\n_s2(useTracking, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackingProvider\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/providers/TrackingProvider.tsx"],"names":["React","useApiError","error","SignRequest","TrackingContext","createContext","loading","getTrackingData","trackingId","resetTrackingData","trackingData","Map","TrackingProvider","props","setTrackingData","useState","setLoading","setErrorCode","body","AirWaybillReference","data","process","env","REACT_APP_API_BASE","REACT_APP_AKAMAI_DBAAS_API_URL","then","signedRequest","fetch","api","method","headers","response","json","set","e","status","DEFAULT","children","useTracking","context","useContext"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import { useAuth } from './Auth';\nimport { useApiError } from \"./ApiErrorProvider\";\nimport { error } from \"../constants/bindings\";\nimport SignRequest from \"../helpers/SignRequest\";\n\nconst TrackingContext = React.createContext({\n  loading: false,\n  getTrackingData: trackingId => {},\n  resetTrackingData: () => {},\n  trackingData: new Map()\n});\n\nexport const TrackingProvider = props => {\n  const [trackingData, setTrackingData] = React.useState(new Map()) as any;\n  const [loading, setLoading] = React.useState(false);\n  const { setErrorCode } = useApiError();\n\n  const getTrackingData = async trackingId => {\n    if (!trackingId) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const body = {\n        AirWaybillReference: trackingId\n      };\n\n      const data = await SignRequest(\n        \"POST\",\n        process.env.REACT_APP_API_BASE,\n        process.env.REACT_APP_AKAMAI_DBAAS_API_URL,\n        \"/track/api/operations/status\",\n        body\n      )\n        .then(signedRequest => {\n          return fetch(signedRequest.api, {\n            method: \"POST\",\n            headers: signedRequest.headers,\n            body: signedRequest.data\n          });\n        })\n        .then(response => response.json())\n        .then(response => {\n          return response;\n        });\n      setTrackingData(trackingData.set(trackingId, data));\n      setLoading(false);\n      return data;\n    } catch (e: any) {\n      if (e.response?.status) {\n        setErrorCode(e.response?.status);\n      } else {\n        setErrorCode(error.DEFAULT);\n      }\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetTrackingData = () => {\n    setTrackingData(new Map());\n  };\n\n  return (\n    <TrackingContext.Provider\n      value={{ loading, getTrackingData, trackingData, resetTrackingData }}\n    >\n      {props.children}\n    </TrackingContext.Provider>\n  );\n};\n\nexport const useTracking = () => {\n  const context = React.useContext(TrackingContext);\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}