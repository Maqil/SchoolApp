{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/components/AcErrorDialog/AcErrorDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { error } from \"../../constants/bindings\";\nimport { useAuth } from \"../../providers/Auth\";\nimport AcDialog from \"../AcDialog/AcDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AcErrorDialog(_ref) {\n  _s();\n\n  let {\n    errorCode\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const user = useAuth();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = () => setOpen(false);\n\n  const handleLogout = () => {\n    user.signOut();\n    setOpen(false);\n  };\n\n  const handleRefresh = () => {\n    window.location.reload();\n  };\n\n  const handleLogin = () => {\n    localStorage.clear(); //user.signIn();\n  };\n\n  const defaultErrorData = {\n    icon: \"icon-sad-emoji\",\n    title: t(\"errorDefault.title\"),\n    description: t(\"errorDefault.description\"),\n    actionLabel: t(\"errorDefault.buttonText\"),\n    handleAction: handleLogout,\n    secondaryActionLabel: t(\"errorDefault.secondaryButtonText\"),\n    handleSecondaryAction: handleRefresh\n  };\n  const authErrorData = {\n    title: t(\"errorAuth.title\"),\n    description: t(\"errorAuth.description\"),\n    actionLabel: t(\"errorAuth.buttonText\"),\n    handleAction: handleLogin\n  };\n  const timeoutErrorData = {\n    icon: \"icon-sad-emoji\",\n    title: t(\"errorTimeout.title\"),\n    description: t(\"errorTimeout.description\"),\n    support: t(\"errorTimeout.support\"),\n    actionLabel: t(\"errorTimeout.buttonText\"),\n    handleAction: handleRefresh\n  };\n  const contactFormErrorData = {\n    icon: \"icon-sad-emoji\",\n    title: t(\"errorContactForm.title\"),\n    description: t(\"errorContactForm.description\"),\n    actionLabel: t(\"errorContactForm.buttonText\"),\n    handleAction: handleClose\n  };\n\n  const getData = () => {\n    if (errorCode === error.AUTH || errorCode === error.FORBIDDEN) {\n      return authErrorData;\n    } else if (errorCode === error.TIME_OUT) {\n      return timeoutErrorData;\n    } else if (errorCode === error.CREATE_CASE) {\n      console.log(\"errorCode\");\n      return contactFormErrorData;\n    } else {\n      return defaultErrorData;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AcDialog, {\n      open: open,\n      onClose: handleClose,\n      data: getData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(AcErrorDialog, \"XH69F+vDMku3AgBrY4MMx8HiCfA=\", false, function () {\n  return [useTranslation, useAuth];\n});\n\n_c = AcErrorDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"AcErrorDialog\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/components/AcErrorDialog/AcErrorDialog.tsx"],"names":["React","useState","useTranslation","error","useAuth","AcDialog","AcErrorDialog","errorCode","t","user","open","setOpen","handleClose","handleLogout","signOut","handleRefresh","window","location","reload","handleLogin","localStorage","clear","defaultErrorData","icon","title","description","actionLabel","handleAction","secondaryActionLabel","handleSecondaryAction","authErrorData","timeoutErrorData","support","contactFormErrorData","getData","AUTH","FORBIDDEN","TIME_OUT","CREATE_CASE","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { error } from \"../../constants/bindings\";\nimport AcDialogInterface from \"../../interfaces/AcDialogInterface\";\nimport { useAuth } from \"../../providers/Auth\";\nimport AcDialog from \"../AcDialog/AcDialog\";\n\nexport default function AcErrorDialog({ errorCode }) {\n  const { t } = useTranslation();\n  const user = useAuth();\n\n  const [open, setOpen] = useState(true);\n  const handleClose = () => setOpen(false);\n\n  const handleLogout = () => {\n    user.signOut();\n    setOpen(false);\n  };\n\n  const handleRefresh = () => {\n    window.location.reload();\n  };\n\n  const handleLogin = () => {\n    localStorage.clear();\n    //user.signIn();\n  };\n\n  const defaultErrorData: AcDialogInterface = {\n    icon: \"icon-sad-emoji\",\n    title: t(\"errorDefault.title\"),\n    description: t(\"errorDefault.description\"),\n    actionLabel: t(\"errorDefault.buttonText\"),\n    handleAction: handleLogout,\n    secondaryActionLabel: t(\"errorDefault.secondaryButtonText\"),\n    handleSecondaryAction: handleRefresh\n  };\n\n  const authErrorData: AcDialogInterface = {\n    title: t(\"errorAuth.title\"),\n    description: t(\"errorAuth.description\"),\n    actionLabel: t(\"errorAuth.buttonText\"),\n    handleAction: handleLogin\n  };\n\n  const timeoutErrorData: AcDialogInterface = {\n    icon: \"icon-sad-emoji\",\n    title: t(\"errorTimeout.title\"),\n    description: t(\"errorTimeout.description\"),\n    support: t(\"errorTimeout.support\"),\n    actionLabel: t(\"errorTimeout.buttonText\"),\n    handleAction: handleRefresh\n  };\n\n  const contactFormErrorData: AcDialogInterface = {\n    icon: \"icon-sad-emoji\",\n    title: t(\"errorContactForm.title\"),\n    description: t(\"errorContactForm.description\"),\n    actionLabel: t(\"errorContactForm.buttonText\"),\n    handleAction: handleClose\n  };\n\n  const getData = () => {\n    if (errorCode === error.AUTH || errorCode === error.FORBIDDEN) {\n      return authErrorData;\n    } else if (errorCode === error.TIME_OUT) {\n      return timeoutErrorData;\n    } else if (errorCode === error.CREATE_CASE) {\n      console.log(\"errorCode\")\n      return contactFormErrorData;\n    } else {\n      return defaultErrorData;\n    }\n  };\n\n  return (\n    <>\n      <AcDialog open={open} onClose={handleClose} data={getData()} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}