{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport PropTypes from 'prop-types';\nimport { createElement, forwardRef, Fragment, PureComponent } from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport Typography from '@mui/material/Typography';\nimport withStyles from '@mui/styles/withStyles';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport clsx from 'clsx';\nimport Dropzone from 'react-dropzone';\nimport Chip from '@mui/material/Chip';\nimport Fab from '@mui/material/Fab';\nimport Grid from '@mui/material/Grid';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport SnackbarContent from '@mui/material/SnackbarContent';\nimport { withStyles as withStyles$1 } from '@mui/styles';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport InfoIcon from '@mui/icons-material/Info';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nfunction isImage(file) {\n  if (file.type.split('/')[0] === 'image') {\n    return true;\n  }\n}\n\nfunction convertBytesToMbsOrKbs(filesize) {\n  var size = '';\n\n  if (filesize >= 1048576) {\n    size = filesize / 1048576 + ' megabytes';\n  } else if (filesize >= 1024) {\n    size = filesize / 1024 + ' kilobytes';\n  } else {\n    size = filesize + ' bytes';\n  }\n\n  return size;\n}\n\nfunction createFileFromUrl(_x) {\n  return _createFileFromUrl.apply(this, arguments);\n}\n\nfunction _createFileFromUrl() {\n  _createFileFromUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var response, data, metadata, filename;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(url);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.blob();\n\n          case 5:\n            data = _context.sent;\n            metadata = {\n              type: data.type\n            };\n            filename = url.replace(/\\?.+/, '').split('/').pop();\n            return _context.abrupt(\"return\", new File([data], filename, metadata));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createFileFromUrl.apply(this, arguments);\n}\n\nfunction readFile(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      var _event$target;\n\n      resolve(event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result);\n    };\n\n    reader.onerror = function (event) {\n      reader.abort();\n      reject(event);\n    };\n\n    reader.readAsDataURL(file);\n  });\n}\n\nvar _DeleteIcon;\n\nvar styles = function styles(_ref) {\n  var _palette$text;\n\n  var palette = _ref.palette,\n      shape = _ref.shape,\n      spacing = _ref.spacing;\n  return {\n    root: {},\n    imageContainer: {\n      position: 'relative',\n      zIndex: 10,\n      textAlign: 'center',\n      '&:hover $image': {\n        opacity: 0.3\n      },\n      '&:hover $removeButton': {\n        opacity: 1\n      }\n    },\n    image: {\n      height: 100,\n      width: 'initial',\n      maxWidth: '100%',\n      color: palette === null || palette === void 0 ? void 0 : (_palette$text = palette.text) === null || _palette$text === void 0 ? void 0 : _palette$text.primary,\n      transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\n      boxSizing: 'border-box',\n      boxShadow: 'rgba(0, 0, 0, 0.12) 0 1px 6px, rgba(0, 0, 0, 0.12) 0 1px 4px',\n      borderRadius: shape === null || shape === void 0 ? void 0 : shape.borderRadius,\n      zIndex: 5,\n      opacity: 1\n    },\n    removeButton: {\n      transition: '.5s ease',\n      position: 'absolute',\n      opacity: 0,\n      top: spacing === null || spacing === void 0 ? void 0 : spacing(-1),\n      right: spacing === null || spacing === void 0 ? void 0 : spacing(-1),\n      width: 40,\n      height: 40,\n      '&:focus': {\n        opacity: 1\n      }\n    }\n  };\n};\n\nfunction PreviewList(_ref2) {\n  var fileObjects = _ref2.fileObjects,\n      handleRemove = _ref2.handleRemove,\n      showFileNames = _ref2.showFileNames,\n      useChipsForPreview = _ref2.useChipsForPreview,\n      previewChipProps = _ref2.previewChipProps,\n      previewGridClasses = _ref2.previewGridClasses,\n      previewGridProps = _ref2.previewGridProps,\n      classes = _ref2.classes,\n      getPreviewIcon = _ref2.getPreviewIcon;\n\n  if (useChipsForPreview) {\n    return /*#__PURE__*/createElement(Grid, _extends({\n      spacing: 1,\n      direction: \"row\"\n    }, previewGridProps.container, {\n      container: true,\n      className: clsx(classes.root, previewGridClasses.container)\n    }), fileObjects.map(function (fileObject, i) {\n      var _fileObject$file$name, _fileObject$file;\n\n      return /*#__PURE__*/createElement(Grid, _extends({}, previewGridProps.item, {\n        item: true,\n        key: \"\".concat((_fileObject$file$name = (_fileObject$file = fileObject.file) === null || _fileObject$file === void 0 ? void 0 : _fileObject$file.name) !== null && _fileObject$file$name !== void 0 ? _fileObject$file$name : 'file', \"-\").concat(i),\n        className: classes.imageContainer\n      }), /*#__PURE__*/createElement(Chip, _extends({\n        variant: \"outlined\"\n      }, previewChipProps, {\n        label: fileObject.file.name,\n        onDelete: handleRemove(i)\n      })));\n    }));\n  }\n\n  return /*#__PURE__*/createElement(Grid, _extends({\n    spacing: 8\n  }, previewGridProps.container, {\n    container: true,\n    className: clsx(classes.root, previewGridClasses.container)\n  }), fileObjects.map(function (fileObject, i) {\n    var _fileObject$file$name2, _fileObject$file2;\n\n    return /*#__PURE__*/createElement(Grid, _extends({\n      xs: 4\n    }, previewGridProps.item, {\n      item: true,\n      key: \"\".concat((_fileObject$file$name2 = (_fileObject$file2 = fileObject.file) === null || _fileObject$file2 === void 0 ? void 0 : _fileObject$file2.name) !== null && _fileObject$file$name2 !== void 0 ? _fileObject$file$name2 : 'file', \"-\").concat(i),\n      className: clsx(classes.imageContainer, previewGridClasses.item)\n    }), getPreviewIcon(fileObject, classes), showFileNames && /*#__PURE__*/createElement(Typography, {\n      variant: \"body1\",\n      component: \"p\"\n    }, fileObject.file.name), /*#__PURE__*/createElement(Fab, {\n      onClick: handleRemove(i),\n      \"aria-label\": \"Delete\",\n      className: classes.removeButton\n    }, _DeleteIcon || (_DeleteIcon = /*#__PURE__*/createElement(DeleteIcon, null))));\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? PreviewList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getPreviewIcon: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  previewChipProps: PropTypes.object,\n  previewGridClasses: PropTypes.object,\n  previewGridProps: PropTypes.object,\n  showFileNames: PropTypes.bool,\n  useChipsForPreview: PropTypes.bool\n} : void 0;\nvar PreviewList$1 = withStyles(styles, {\n  name: 'MuiDropzonePreviewList'\n})(PreviewList);\nvar _excluded = [\"classes\", \"className\", \"message\", \"onClose\", \"variant\"];\nvar variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nvar styles$1 = function styles(theme) {\n  var _theme$palette, _theme$palette$succes, _theme$palette2, _theme$palette2$error, _theme$palette3, _theme$palette3$info, _theme$palette4, _theme$palette4$warni, _theme$spacing;\n\n  return {\n    successAlert: {\n      backgroundColor: theme === null || theme === void 0 ? void 0 : (_theme$palette = theme.palette) === null || _theme$palette === void 0 ? void 0 : (_theme$palette$succes = _theme$palette.success) === null || _theme$palette$succes === void 0 ? void 0 : _theme$palette$succes.main\n    },\n    errorAlert: {\n      backgroundColor: theme === null || theme === void 0 ? void 0 : (_theme$palette2 = theme.palette) === null || _theme$palette2 === void 0 ? void 0 : (_theme$palette2$error = _theme$palette2.error) === null || _theme$palette2$error === void 0 ? void 0 : _theme$palette2$error.main\n    },\n    infoAlert: {\n      backgroundColor: theme === null || theme === void 0 ? void 0 : (_theme$palette3 = theme.palette) === null || _theme$palette3 === void 0 ? void 0 : (_theme$palette3$info = _theme$palette3.info) === null || _theme$palette3$info === void 0 ? void 0 : _theme$palette3$info.main\n    },\n    warningAlert: {\n      backgroundColor: theme === null || theme === void 0 ? void 0 : (_theme$palette4 = theme.palette) === null || _theme$palette4 === void 0 ? void 0 : (_theme$palette4$warni = _theme$palette4.warning) === null || _theme$palette4$warni === void 0 ? void 0 : _theme$palette4$warni.main\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n      '& > svg': {\n        marginRight: theme === null || theme === void 0 ? void 0 : (_theme$spacing = theme.spacing) === null || _theme$spacing === void 0 ? void 0 : _theme$spacing.call(theme, 1)\n      }\n    },\n    icon: {\n      fontSize: 20,\n      opacity: 0.9\n    },\n    closeButton: {}\n  };\n};\n\nvar SnackbarContentWrapper = /*#__PURE__*/forwardRef(function (props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      message = props.message,\n      onClose = props.onClose,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var Icon = variantIcon[variant];\n  return /*#__PURE__*/createElement(SnackbarContent, _extends({\n    ref: ref,\n    className: clsx(classes[\"\".concat(variant, \"Alert\")], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: /*#__PURE__*/createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message\n    }, /*#__PURE__*/createElement(Icon, {\n      className: classes.icon\n    }), message),\n    action: [/*#__PURE__*/createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      className: classes.closeButton,\n      onClick: onClose\n    }, /*#__PURE__*/createElement(CloseIcon, {\n      className: classes.icon\n    }))]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContentWrapper.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n} : void 0;\nSnackbarContentWrapper.displayName = \"SnackbarContentWrapper\";\nvar SnackbarContentWrapper$1 = withStyles$1(styles$1, {\n  name: 'MuiDropzoneSnackbar'\n})(SnackbarContentWrapper);\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar styles$2 = function styles(_ref) {\n  var _palette$background, _palette$background2, _palette$background3, _palette$primary, _palette$error, _palette$error2, _palette$error3, _palette$error4, _palette$error5, _palette$text;\n\n  var palette = _ref.palette,\n      shape = _ref.shape,\n      spacing = _ref.spacing;\n  return {\n    '@keyframes progress': {\n      '0%': {\n        backgroundPosition: '0 0'\n      },\n      '100%': {\n        backgroundPosition: '-70px 0'\n      }\n    },\n    root: {\n      position: 'relative',\n      width: '100%',\n      minHeight: '250px',\n      backgroundColor: palette === null || palette === void 0 ? void 0 : (_palette$background = palette.background) === null || _palette$background === void 0 ? void 0 : _palette$background.paper,\n      border: 'dashed',\n      borderColor: palette === null || palette === void 0 ? void 0 : palette.divider,\n      borderRadius: shape === null || shape === void 0 ? void 0 : shape.borderRadius,\n      boxSizing: 'border-box',\n      cursor: 'pointer',\n      overflow: 'hidden'\n    },\n    active: {\n      animation: '$progress 2s linear infinite !important',\n      // eslint-disable-next-line max-len\n      backgroundImage: \"repeating-linear-gradient(-45deg, \".concat(palette === null || palette === void 0 ? void 0 : (_palette$background2 = palette.background) === null || _palette$background2 === void 0 ? void 0 : _palette$background2.paper, \", \").concat(palette === null || palette === void 0 ? void 0 : (_palette$background3 = palette.background) === null || _palette$background3 === void 0 ? void 0 : _palette$background3.paper, \" 25px, \").concat(palette === null || palette === void 0 ? void 0 : palette.divider, \" 25px, \").concat(palette === null || palette === void 0 ? void 0 : palette.divider, \" 50px)\"),\n      backgroundSize: '150% 100%',\n      border: 'solid',\n      borderColor: palette === null || palette === void 0 ? void 0 : (_palette$primary = palette.primary) === null || _palette$primary === void 0 ? void 0 : _palette$primary.light\n    },\n    invalid: {\n      // eslint-disable-next-line max-len\n      backgroundImage: \"repeating-linear-gradient(-45deg, \".concat(palette === null || palette === void 0 ? void 0 : (_palette$error = palette.error) === null || _palette$error === void 0 ? void 0 : _palette$error.light, \", \").concat(palette === null || palette === void 0 ? void 0 : (_palette$error2 = palette.error) === null || _palette$error2 === void 0 ? void 0 : _palette$error2.light, \" 25px, \").concat(palette === null || palette === void 0 ? void 0 : (_palette$error3 = palette.error) === null || _palette$error3 === void 0 ? void 0 : _palette$error3.dark, \" 25px, \").concat(palette === null || palette === void 0 ? void 0 : (_palette$error4 = palette.error) === null || _palette$error4 === void 0 ? void 0 : _palette$error4.dark, \" 50px)\"),\n      borderColor: palette === null || palette === void 0 ? void 0 : (_palette$error5 = palette.error) === null || _palette$error5 === void 0 ? void 0 : _palette$error5.main\n    },\n    textContainer: {\n      textAlign: 'center'\n    },\n    text: {\n      marginBottom: spacing === null || spacing === void 0 ? void 0 : spacing(3),\n      marginTop: spacing === null || spacing === void 0 ? void 0 : spacing(3)\n    },\n    icon: {\n      width: 51,\n      height: 51,\n      color: palette === null || palette === void 0 ? void 0 : (_palette$text = palette.text) === null || _palette$text === void 0 ? void 0 : _palette$text.primary\n    }\n  };\n};\n\nvar defaultSnackbarAnchorOrigin = {\n  horizontal: 'left',\n  vertical: 'bottom'\n};\n\nvar defaultGetPreviewIcon = function defaultGetPreviewIcon(fileObject, classes) {\n  if (isImage(fileObject.file)) {\n    return /*#__PURE__*/createElement(\"img\", {\n      className: classes.image,\n      role: \"presentation\",\n      src: fileObject.data\n    });\n  }\n\n  return /*#__PURE__*/createElement(AttachFileIcon, {\n    className: classes.image\n  });\n};\n/**\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\n */\n\n\nvar DropzoneAreaBase = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(DropzoneAreaBase, _React$PureComponent);\n\n  var _super = _createSuper(DropzoneAreaBase);\n\n  function DropzoneAreaBase() {\n    var _this;\n\n    _classCallCheck(this, DropzoneAreaBase);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      openSnackBar: false,\n      snackbarMessage: '',\n      snackbarVariant: 'success'\n    };\n\n    _this.handleDropAccepted = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(acceptedFiles, evt) {\n        var _this$props, fileObjects, filesLimit, getFileAddedMessage, getFileLimitExceedMessage, onAdd, onDrop, fileObjs, message;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$props = _this.props, fileObjects = _this$props.fileObjects, filesLimit = _this$props.filesLimit, getFileAddedMessage = _this$props.getFileAddedMessage, getFileLimitExceedMessage = _this$props.getFileLimitExceedMessage, onAdd = _this$props.onAdd, onDrop = _this$props.onDrop;\n\n                if (!(filesLimit > 1 && fileObjects.length + acceptedFiles.length > filesLimit)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                _this.setState({\n                  openSnackBar: true,\n                  snackbarMessage: getFileLimitExceedMessage(filesLimit),\n                  snackbarVariant: 'error'\n                }, _this.notifyAlert);\n\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                // Notify Drop event\n                if (onDrop) {\n                  onDrop(acceptedFiles, evt);\n                } // Retrieve fileObjects data\n\n\n                _context2.next = 7;\n                return Promise.all(acceptedFiles.map( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n                    var data;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return readFile(file);\n\n                          case 2:\n                            data = _context.sent;\n                            return _context.abrupt(\"return\", {\n                              file: file,\n                              data: data\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x3) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }()));\n\n              case 7:\n                fileObjs = _context2.sent; // Notify added files\n\n                if (onAdd) {\n                  onAdd(fileObjs);\n                } // Display message\n\n\n                message = fileObjs.reduce(function (msg, fileObj) {\n                  return msg + getFileAddedMessage(fileObj.file.name);\n                }, '');\n\n                _this.setState({\n                  openSnackBar: true,\n                  snackbarMessage: message,\n                  snackbarVariant: 'success'\n                }, _this.notifyAlert);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDropRejected = function (rejectedFiles, evt) {\n      var _this$props2 = _this.props,\n          acceptedFiles = _this$props2.acceptedFiles,\n          filesLimit = _this$props2.filesLimit,\n          fileObjects = _this$props2.fileObjects,\n          getDropRejectMessage = _this$props2.getDropRejectMessage,\n          getFileLimitExceedMessage = _this$props2.getFileLimitExceedMessage,\n          maxFileSize = _this$props2.maxFileSize,\n          onDropRejected = _this$props2.onDropRejected;\n      var message = '';\n\n      if (fileObjects.length + rejectedFiles.length > filesLimit) {\n        message = getFileLimitExceedMessage(filesLimit);\n      } else {\n        rejectedFiles.forEach(function (rejectedFile) {\n          message = getDropRejectMessage(rejectedFile, acceptedFiles, maxFileSize);\n        });\n      }\n\n      if (onDropRejected) {\n        onDropRejected(rejectedFiles, evt);\n      }\n\n      _this.setState({\n        openSnackBar: true,\n        snackbarMessage: message,\n        snackbarVariant: 'error'\n      }, _this.notifyAlert);\n    };\n\n    _this.handleRemove = function (fileIndex) {\n      return function (event) {\n        event.stopPropagation();\n        var _this$props3 = _this.props,\n            fileObjects = _this$props3.fileObjects,\n            getFileRemovedMessage = _this$props3.getFileRemovedMessage,\n            onDelete = _this$props3.onDelete; // Find removed fileObject\n\n        var removedFileObj = fileObjects[fileIndex]; // Notify removed file\n\n        if (onDelete) {\n          onDelete(removedFileObj, fileIndex);\n        }\n\n        _this.setState({\n          openSnackBar: true,\n          snackbarMessage: getFileRemovedMessage(removedFileObj.file.name),\n          snackbarVariant: 'info'\n        }, _this.notifyAlert);\n      };\n    };\n\n    _this.handleCloseSnackbar = function () {\n      _this.setState({\n        openSnackBar: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DropzoneAreaBase, [{\n    key: \"notifyAlert\",\n    value: function notifyAlert() {\n      var onAlert = this.props.onAlert;\n      var _this$state = this.state,\n          openSnackBar = _this$state.openSnackBar,\n          snackbarMessage = _this$state.snackbarMessage,\n          snackbarVariant = _this$state.snackbarVariant;\n\n      if (openSnackBar && onAlert) {\n        onAlert(snackbarMessage, snackbarVariant);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          acceptedFiles = _this$props4.acceptedFiles,\n          alertSnackbarProps = _this$props4.alertSnackbarProps,\n          classes = _this$props4.classes,\n          disableRejectionFeedback = _this$props4.disableRejectionFeedback,\n          dropzoneClass = _this$props4.dropzoneClass,\n          dropzoneParagraphClass = _this$props4.dropzoneParagraphClass,\n          dropzoneProps = _this$props4.dropzoneProps,\n          dropzoneText = _this$props4.dropzoneText,\n          fileObjects = _this$props4.fileObjects,\n          filesLimit = _this$props4.filesLimit,\n          getPreviewIcon = _this$props4.getPreviewIcon,\n          Icon = _this$props4.Icon,\n          inputProps = _this$props4.inputProps,\n          maxFileSize = _this$props4.maxFileSize,\n          previewChipProps = _this$props4.previewChipProps,\n          previewGridClasses = _this$props4.previewGridClasses,\n          previewGridProps = _this$props4.previewGridProps,\n          previewText = _this$props4.previewText,\n          showAlerts = _this$props4.showAlerts,\n          showFileNames = _this$props4.showFileNames,\n          showFileNamesInPreview = _this$props4.showFileNamesInPreview,\n          showPreviews = _this$props4.showPreviews,\n          showPreviewsInDropzone = _this$props4.showPreviewsInDropzone,\n          useChipsForPreview = _this$props4.useChipsForPreview;\n      var _this$state2 = this.state,\n          openSnackBar = _this$state2.openSnackBar,\n          snackbarMessage = _this$state2.snackbarMessage,\n          snackbarVariant = _this$state2.snackbarVariant;\n      var acceptFiles = acceptedFiles === null || acceptedFiles === void 0 ? void 0 : acceptedFiles.join(',');\n      var isMultiple = filesLimit > 1;\n      var previewsVisible = showPreviews && fileObjects.length > 0;\n      var previewsInDropzoneVisible = showPreviewsInDropzone && fileObjects.length > 0;\n      return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Dropzone, _extends({}, dropzoneProps, {\n        accept: acceptFiles,\n        onDropAccepted: this.handleDropAccepted,\n        onDropRejected: this.handleDropRejected,\n        maxSize: maxFileSize,\n        multiple: isMultiple\n      }), function (_ref4) {\n        var getRootProps = _ref4.getRootProps,\n            getInputProps = _ref4.getInputProps,\n            isDragActive = _ref4.isDragActive,\n            isDragReject = _ref4.isDragReject;\n        return /*#__PURE__*/createElement(\"div\", getRootProps({\n          className: clsx(classes.root, dropzoneClass, isDragActive && classes.active, !disableRejectionFeedback && isDragReject && classes.invalid)\n        }), /*#__PURE__*/createElement(\"input\", getInputProps(inputProps)), /*#__PURE__*/createElement(\"div\", {\n          className: classes.textContainer\n        }, /*#__PURE__*/createElement(Typography, {\n          variant: \"h5\",\n          component: \"p\",\n          className: clsx(classes.text, dropzoneParagraphClass)\n        }, dropzoneText), Icon ? /*#__PURE__*/createElement(Icon, {\n          className: classes.icon\n        }) : /*#__PURE__*/createElement(CloudUploadIcon, {\n          className: classes.icon\n        })), previewsInDropzoneVisible && /*#__PURE__*/createElement(PreviewList$1, {\n          fileObjects: fileObjects,\n          handleRemove: _this2.handleRemove,\n          getPreviewIcon: getPreviewIcon,\n          showFileNames: showFileNames,\n          useChipsForPreview: useChipsForPreview,\n          previewChipProps: previewChipProps,\n          previewGridClasses: previewGridClasses,\n          previewGridProps: previewGridProps\n        }));\n      }), previewsVisible && /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Typography, {\n        variant: \"subtitle1\",\n        component: \"span\"\n      }, previewText), /*#__PURE__*/createElement(PreviewList$1, {\n        fileObjects: fileObjects,\n        handleRemove: this.handleRemove,\n        getPreviewIcon: getPreviewIcon,\n        showFileNames: showFileNamesInPreview,\n        useChipsForPreview: useChipsForPreview,\n        previewChipProps: previewChipProps,\n        previewGridClasses: previewGridClasses,\n        previewGridProps: previewGridProps\n      })), (typeof showAlerts === 'boolean' && showAlerts || Array.isArray(showAlerts) && showAlerts.includes(snackbarVariant)) && /*#__PURE__*/createElement(Snackbar, _extends({\n        anchorOrigin: defaultSnackbarAnchorOrigin,\n        autoHideDuration: 6000\n      }, alertSnackbarProps, {\n        open: openSnackBar,\n        onClose: this.handleCloseSnackbar\n      }), /*#__PURE__*/createElement(SnackbarContentWrapper$1, {\n        onClose: this.handleCloseSnackbar,\n        variant: snackbarVariant,\n        message: snackbarMessage\n      })));\n    }\n  }]);\n\n  return DropzoneAreaBase;\n}(PureComponent);\n\nDropzoneAreaBase.defaultProps = {\n  acceptedFiles: [],\n  filesLimit: 3,\n  fileObjects: [],\n  maxFileSize: 3000000,\n  dropzoneText: 'Drag and drop a file here or click',\n  previewText: 'Preview:',\n  disableRejectionFeedback: false,\n  showPreviews: false,\n  // By default previews show up under in the dialog and inside in the standalone\n  showPreviewsInDropzone: true,\n  showFileNames: false,\n  showFileNamesInPreview: false,\n  useChipsForPreview: false,\n  previewChipProps: {},\n  previewGridClasses: {},\n  previewGridProps: {},\n  showAlerts: true,\n  alertSnackbarProps: {\n    anchorOrigin: {\n      horizontal: 'left',\n      vertical: 'bottom'\n    },\n    autoHideDuration: 6000\n  },\n  getFileLimitExceedMessage: function getFileLimitExceedMessage(filesLimit) {\n    return \"Maximum allowed number of files exceeded. Only \".concat(filesLimit, \" allowed\");\n  },\n  getFileAddedMessage: function getFileAddedMessage(fileName) {\n    return \"File \".concat(fileName, \" successfully added.\");\n  },\n  getPreviewIcon: defaultGetPreviewIcon,\n  getFileRemovedMessage: function getFileRemovedMessage(fileName) {\n    return \"File \".concat(fileName, \" removed.\");\n  },\n  getDropRejectMessage: function getDropRejectMessage(rejectedFile, acceptedFiles, maxFileSize) {\n    var message = \"File \".concat(rejectedFile.name, \" was rejected. \");\n\n    if (!acceptedFiles.includes(rejectedFile.type)) {\n      message += 'File type not supported. ';\n    }\n\n    if (rejectedFile.size > maxFileSize) {\n      message += 'File is too big. Size limit is ' + convertBytesToMbsOrKbs(maxFileSize) + '. ';\n    }\n\n    return message;\n  }\n};\nvar FileObjectShape = PropTypes.shape({\n  file: PropTypes.object,\n  data: PropTypes.any\n});\nprocess.env.NODE_ENV !== \"production\" ? DropzoneAreaBase.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n\n  /** A list of file types to accept.\n   * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\n   */\n  acceptedFiles: PropTypes.arrayOf(PropTypes.string),\n\n  /** Maximum number of files that can be loaded into the dropzone. */\n  filesLimit: PropTypes.number,\n\n  /** Icon to be displayed inside the dropzone area. */\n  Icon: PropTypes.elementType,\n\n  /** Currently loaded files. */\n  fileObjects: PropTypes.arrayOf(FileObjectShape),\n\n  /** Maximum file size (in bytes) that the dropzone will accept. */\n  maxFileSize: PropTypes.number,\n\n  /** Text inside the dropzone. */\n  dropzoneText: PropTypes.string,\n\n  /** Custom CSS class name for dropzone container. */\n  dropzoneClass: PropTypes.string,\n\n  /** Custom CSS class name for text inside the container. */\n  dropzoneParagraphClass: PropTypes.string,\n\n  /** Disable feedback effect when dropping rejected files. */\n  disableRejectionFeedback: PropTypes.bool,\n\n  /** Shows previews **BELOW** the dropzone. */\n  showPreviews: PropTypes.bool,\n\n  /** Shows preview **INSIDE** the dropzone area. */\n  showPreviewsInDropzone: PropTypes.bool,\n\n  /** Shows file name under the dropzone image. */\n  showFileNames: PropTypes.bool,\n\n  /** Shows file name under the image. */\n  showFileNamesInPreview: PropTypes.bool,\n\n  /** Uses deletable Material-UI Chip components to display file names. */\n  useChipsForPreview: PropTypes.bool,\n\n  /**\n   * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\n   *\n   * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\n   */\n  previewChipProps: PropTypes.object,\n\n  /**\n   * Custom CSS classNames for preview Grid components.<br/>\n   * Should be in the form {container: string, item: string, image: string}.\n   */\n  previewGridClasses: PropTypes.object,\n\n  /**\n   * Props to pass to the Material-UI Grid components.<br/>\n   * Should be in the form {container: GridProps, item: GridProps}.\n   *\n   * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\n   */\n  previewGridProps: PropTypes.object,\n\n  /** The label for the file preview section. */\n  previewText: PropTypes.string,\n\n  /**\n   * Shows styled Material-UI Snackbar when files are dropped, deleted or rejected.\n   *\n   * - can be a boolean (\"global\" `true` or `false` for all alerts).\n   * - can be an array, with values 'error', 'info', 'success' to select to view only certain alerts:\n   *  - showAlerts={['error']} for only errors.\n   *  - showAlerts={['error', 'info']} for both errors and info.\n   *  - showAlerts={['error', 'success', 'info']} is same as showAlerts={true}.\n   *  - showAlerts={[]} is same as showAlerts={false}.\n   */\n  showAlerts: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.oneOf(['error', 'success', 'info']))]),\n\n  /**\n   * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\n   *\n   * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\n   */\n  alertSnackbarProps: PropTypes.object,\n\n  /**\n   * Props to pass to the Dropzone component.\n   *\n   * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\n   */\n  dropzoneProps: PropTypes.object,\n\n  /**\n   * Attributes applied to the input element.\n   *\n   * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Get alert message to display when files limit is exceed.\n   *\n   * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\n   *\n   * @param {number} filesLimit The `filesLimit` currently set for the component.\n   */\n  getFileLimitExceedMessage: PropTypes.func,\n\n  /**\n   * Get alert message to display when a new file is added.\n   *\n   * *Default*: \"File ${fileName} successfully added.\"\n   *\n   * @param {string} fileName The newly added file name.\n   */\n  getFileAddedMessage: PropTypes.func,\n\n  /**\n   * Get alert message to display when a file is removed.\n   *\n   * *Default*: \"File ${fileName} removed.\"\n   *\n   * @param {string} fileName The name of the removed file.\n   */\n  getFileRemovedMessage: PropTypes.func,\n\n  /**\n   * Get alert message to display when a file is rejected onDrop.\n   *\n   * *Default*: \"File ${rejectedFile.name} was rejected.\"\n   *\n   * @param {Object} rejectedFile The file that got rejected\n   * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\n   * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\n   */\n  getDropRejectMessage: PropTypes.func,\n\n  /**\n   * A function which determines which icon to display for a file preview.\n   *\n   * *Default*: If its an image then displays a preview the image, otherwise it will display an attachment icon\n   *\n   * @param {FileObject} objectFile The file which the preview will belong to\n   * @param {Object} classes The classes for the file preview icon, in the default case we use the 'image' className.\n   */\n  getPreviewIcon: PropTypes.func,\n\n  /**\n   * Fired when new files are added to dropzone.\n   *\n   * @param {FileObject[]} newFiles The new files added to the dropzone.\n   */\n  onAdd: PropTypes.func,\n\n  /**\n   * Fired when a file is deleted from the previews panel.\n   *\n   * @param {FileObject} deletedFileObject The file that was removed.\n   * @param {number} index The index of the removed file object.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * Fired when the user drops files into the dropzone.\n   *\n   * @param {File[]} droppedFiles All the files dropped into the dropzone.\n   * @param {Event} event The react-dropzone drop event.\n   */\n  onDrop: PropTypes.func,\n\n  /**\n   * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\n   *\n   * @param {File[]} rejectedFiles All the rejected files.\n   * @param {Event} event The react-dropzone drop event.\n   */\n  onDropRejected: PropTypes.func,\n\n  /**\n   * Fired when an alert is triggered.\n   *\n   * @param {string} message Alert message.\n   * @param {string} variant One of \"error\", \"info\", \"success\".\n   */\n  onAlert: PropTypes.func\n} : void 0;\nvar DropzoneAreaBase$1 = withStyles(styles$2, {\n  name: 'MuiDropzoneArea'\n})(DropzoneAreaBase);\nvar _excluded$1 = [\"clearOnUnmount\", \"initialFiles\", \"onChange\", \"onDelete\"];\n\nfunction _createSuper$1(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$1() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar splitDropzoneAreaProps = function splitDropzoneAreaProps(props) {\n  var clearOnUnmount = props.clearOnUnmount,\n      initialFiles = props.initialFiles,\n      onChange = props.onChange,\n      onDelete = props.onDelete,\n      dropzoneAreaProps = _objectWithoutProperties(props, _excluded$1);\n\n  return [{\n    clearOnUnmount: clearOnUnmount,\n    initialFiles: initialFiles,\n    onChange: onChange,\n    onDelete: onDelete\n  }, dropzoneAreaProps];\n};\n/**\n * This components creates an uncontrolled Material-UI Dropzone, with previews and snackbar notifications.\n *\n * It supports all props of `DropzoneAreaBase` but keeps the files state internally.\n *\n * **Note** To listen to file changes use `onChange` event handler and notice that `onDelete` returns a `File` instance instead of `FileObject`.\n */\n\n\nvar DropzoneArea = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(DropzoneArea, _React$PureComponent);\n\n  var _super = _createSuper$1(DropzoneArea);\n\n  function DropzoneArea() {\n    var _this;\n\n    _classCallCheck(this, DropzoneArea);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fileObjects: []\n    };\n\n    _this.notifyFileChange = function () {\n      var onChange = _this.props.onChange;\n      var fileObjects = _this.state.fileObjects;\n\n      if (onChange) {\n        onChange(fileObjects.map(function (fileObject) {\n          return fileObject.file;\n        }));\n      }\n    };\n\n    _this.loadInitialFiles = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var initialFiles, fileObjs;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              initialFiles = _this.props.initialFiles;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return Promise.all(initialFiles.map( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(initialFile) {\n                  var file, data;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(typeof initialFile === 'string')) {\n                            _context.next = 6;\n                            break;\n                          }\n\n                          _context.next = 3;\n                          return createFileFromUrl(initialFile);\n\n                        case 3:\n                          file = _context.sent;\n                          _context.next = 7;\n                          break;\n\n                        case 6:\n                          file = initialFile;\n\n                        case 7:\n                          _context.next = 9;\n                          return readFile(file);\n\n                        case 9:\n                          data = _context.sent;\n                          return _context.abrupt(\"return\", {\n                            file: file,\n                            data: data\n                          });\n\n                        case 11:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()));\n\n            case 4:\n              fileObjs = _context2.sent;\n\n              _this.setState(function (state) {\n                return {\n                  fileObjects: [].concat(state.fileObjects, fileObjs)\n                };\n              }, _this.notifyFileChange);\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    _this.addFiles = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(newFileObjects) {\n        var filesLimit;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                filesLimit = _this.props.filesLimit; // Update component state\n\n                _this.setState(function (state) {\n                  // Handle a single file\n                  if (filesLimit <= 1) {\n                    return {\n                      fileObjects: [].concat(newFileObjects[0])\n                    };\n                  } // Handle multiple files\n\n\n                  return {\n                    fileObjects: [].concat(state.fileObjects, newFileObjects)\n                  };\n                }, _this.notifyFileChange);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteFile = function (removedFileObj, removedFileObjIdx) {\n      event.stopPropagation();\n      var onDelete = _this.props.onDelete;\n      var fileObjects = _this.state.fileObjects; // Calculate remaining fileObjects array\n\n      var remainingFileObjs = fileObjects.filter(function (fileObject, i) {\n        return i !== removedFileObjIdx;\n      }); // Notify removed file\n\n      if (onDelete) {\n        onDelete(removedFileObj.file);\n      } // Update local state\n\n\n      _this.setState({\n        fileObjects: remainingFileObjs\n      }, _this.notifyFileChange);\n    };\n\n    return _this;\n  }\n\n  _createClass(DropzoneArea, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadInitialFiles();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var clearOnUnmount = this.props.clearOnUnmount;\n\n      if (clearOnUnmount) {\n        this.setState({\n          fileObjects: []\n        }, this.notifyFileChange);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _splitDropzoneAreaPro = splitDropzoneAreaProps(this.props),\n          _splitDropzoneAreaPro2 = _slicedToArray(_splitDropzoneAreaPro, 2),\n          dropzoneAreaProps = _splitDropzoneAreaPro2[1];\n\n      var fileObjects = this.state.fileObjects;\n      return /*#__PURE__*/createElement(DropzoneAreaBase$1, _extends({}, dropzoneAreaProps, {\n        fileObjects: fileObjects,\n        onAdd: this.addFiles,\n        onDelete: this.deleteFile\n      }));\n    }\n  }]);\n\n  return DropzoneArea;\n}(PureComponent);\n\nDropzoneArea.defaultProps = {\n  clearOnUnmount: true,\n  filesLimit: 3,\n  initialFiles: []\n};\nprocess.env.NODE_ENV !== \"production\" ? DropzoneArea.propTypes = _extends({}, DropzoneAreaBase$1.propTypes, {\n  /** Clear uploaded files when component is unmounted. */\n  clearOnUnmount: PropTypes.bool,\n\n  /** List containing File objects or URL strings.<br/>\n   * **Note:** Please take care of CORS.\n  */\n  initialFiles: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.any])),\n\n  /** Maximum number of files that can be loaded into the dropzone. */\n  filesLimit: PropTypes.number,\n\n  /**\n   * Fired when the files inside dropzone change.\n   *\n   * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Fired when a file is deleted from the previews panel.\n   *\n   * @param {File} deletedFile The file that was removed.\n   */\n  onDelete: PropTypes.func\n}) : void 0;\nvar _excluded$2 = [\"cancelButtonText\", \"dialogProps\", \"dialogTitle\", \"fullWidth\", \"maxWidth\", \"onClose\", \"onSave\", \"open\", \"submitButtonText\"];\n\nfunction _createSuper$2(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$2();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$2() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction splitDropzoneDialogProps(allProps) {\n  var cancelButtonText = allProps.cancelButtonText,\n      dialogProps = allProps.dialogProps,\n      dialogTitle = allProps.dialogTitle,\n      fullWidth = allProps.fullWidth,\n      maxWidth = allProps.maxWidth,\n      onClose = allProps.onClose,\n      onSave = allProps.onSave,\n      open = allProps.open,\n      submitButtonText = allProps.submitButtonText,\n      dropzoneAreaProps = _objectWithoutProperties(allProps, _excluded$2);\n\n  return [{\n    cancelButtonText: cancelButtonText,\n    dialogProps: dialogProps,\n    dialogTitle: dialogTitle,\n    fullWidth: fullWidth,\n    maxWidth: maxWidth,\n    onClose: onClose,\n    onSave: onSave,\n    open: open,\n    submitButtonText: submitButtonText\n  }, dropzoneAreaProps];\n}\n/**\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\n *\n * It supports all the Props and Methods from `DropzoneAreaBase`.\n */\n\n\nvar DropzoneDialogBase = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(DropzoneDialogBase, _React$PureComponent);\n\n  var _super = _createSuper$2(DropzoneDialogBase);\n\n  function DropzoneDialogBase() {\n    _classCallCheck(this, DropzoneDialogBase);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DropzoneDialogBase, [{\n    key: \"render\",\n    value: function render() {\n      var _splitDropzoneDialogP = splitDropzoneDialogProps(this.props),\n          _splitDropzoneDialogP2 = _slicedToArray(_splitDropzoneDialogP, 2),\n          dropzoneDialogProps = _splitDropzoneDialogP2[0],\n          dropzoneAreaProps = _splitDropzoneDialogP2[1];\n\n      var cancelButtonText = dropzoneDialogProps.cancelButtonText,\n          dialogProps = dropzoneDialogProps.dialogProps,\n          dialogTitle = dropzoneDialogProps.dialogTitle,\n          fullWidth = dropzoneDialogProps.fullWidth,\n          maxWidth = dropzoneDialogProps.maxWidth,\n          onClose = dropzoneDialogProps.onClose,\n          onSave = dropzoneDialogProps.onSave,\n          open = dropzoneDialogProps.open,\n          submitButtonText = dropzoneDialogProps.submitButtonText; // Submit button state\n\n      var submitDisabled = dropzoneAreaProps.fileObjects.length === 0;\n      return /*#__PURE__*/createElement(Dialog, _extends({}, dialogProps, {\n        fullWidth: fullWidth,\n        maxWidth: maxWidth,\n        onClose: onClose,\n        open: open\n      }), /*#__PURE__*/createElement(DialogTitle, null, dialogTitle), /*#__PURE__*/createElement(DialogContent, null, /*#__PURE__*/createElement(DropzoneAreaBase$1, dropzoneAreaProps)), /*#__PURE__*/createElement(DialogActions, null, /*#__PURE__*/createElement(Button, {\n        color: \"primary\",\n        onClick: onClose\n      }, cancelButtonText), /*#__PURE__*/createElement(Button, {\n        color: \"primary\",\n        disabled: submitDisabled,\n        onClick: onSave\n      }, submitButtonText)));\n    }\n  }]);\n\n  return DropzoneDialogBase;\n}(PureComponent);\n\nDropzoneDialogBase.defaultProps = {\n  open: false,\n  dialogTitle: 'Upload file',\n  dialogProps: {},\n  fullWidth: true,\n  maxWidth: 'sm',\n  cancelButtonText: 'Cancel',\n  submitButtonText: 'Submit',\n  showPreviews: true,\n  showPreviewsInDropzone: false,\n  showFileNamesInPreview: true\n};\nprocess.env.NODE_ENV !== \"production\" ? DropzoneDialogBase.propTypes = _extends({}, DropzoneAreaBase$1.propTypes, {\n  /** Sets whether the dialog is open or closed. */\n  open: PropTypes.bool,\n\n  /** The Dialog title. */\n  dialogTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\n  /**\n   * Props to pass to the Material-UI Dialog components.\n   * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\n   */\n  dialogProps: PropTypes.object,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.<br/>\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.string,\n\n  /** Cancel button text in dialog. */\n  cancelButtonText: PropTypes.string,\n\n  /** Submit button text in dialog. */\n  submitButtonText: PropTypes.string,\n\n  /**\n   * Fired when the modal is closed.\n   *\n   * @param {SyntheticEvent} event The react `SyntheticEvent`\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Fired when the user clicks the Submit button.\n   *\n   * @param {SyntheticEvent} event The react `SyntheticEvent`\n   */\n  onSave: PropTypes.func,\n\n  /**\n   * Shows previews **BELOW** the dropzone.<br/>\n   * **Note:** By default previews show up under in the Dialog and inside in the standalone.\n   */\n  showPreviews: PropTypes.bool,\n\n  /** Shows preview **INSIDE** the dropzone area. */\n  showPreviewsInDropzone: PropTypes.bool,\n\n  /** Shows file name under the image. */\n  showFileNamesInPreview: PropTypes.bool\n}) : void 0;\n\nfunction _createSuper$3(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$3();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct$3() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * This component provides an uncontrolled version of the DropzoneDialogBase component.\n *\n * It supports all the Props and Methods from `DropzoneDialogBase` but keeps the files state internally.\n *\n * **Note** The `onSave` handler also returns `File[]` with all the accepted files.\n */\n\n\nvar DropzoneDialog = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(DropzoneDialog, _React$PureComponent);\n\n  var _super = _createSuper$3(DropzoneDialog);\n\n  function DropzoneDialog() {\n    var _this;\n\n    _classCallCheck(this, DropzoneDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fileObjects: []\n    };\n\n    _this.notifyFileChange = function () {\n      var onChange = _this.props.onChange;\n      var fileObjects = _this.state.fileObjects;\n\n      if (onChange) {\n        onChange(fileObjects.map(function (fileObject) {\n          return fileObject.file;\n        }));\n      }\n    };\n\n    _this.loadInitialFiles = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var initialFiles, fileObjs;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              initialFiles = _this.props.initialFiles;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return Promise.all(initialFiles.map( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(initialFile) {\n                  var file, data;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(typeof initialFile === 'string')) {\n                            _context.next = 6;\n                            break;\n                          }\n\n                          _context.next = 3;\n                          return createFileFromUrl(initialFile);\n\n                        case 3:\n                          file = _context.sent;\n                          _context.next = 7;\n                          break;\n\n                        case 6:\n                          file = initialFile;\n\n                        case 7:\n                          _context.next = 9;\n                          return readFile(file);\n\n                        case 9:\n                          data = _context.sent;\n                          return _context.abrupt(\"return\", {\n                            file: file,\n                            data: data\n                          });\n\n                        case 11:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()));\n\n            case 4:\n              fileObjs = _context2.sent;\n\n              _this.setState(function (state) {\n                return {\n                  fileObjects: [].concat(state.fileObjects, fileObjs)\n                };\n              }, _this.notifyFileChange);\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    _this.addFiles = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(newFileObjects) {\n        var filesLimit;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                filesLimit = _this.props.filesLimit; // Update component state\n\n                _this.setState(function (state) {\n                  // Handle a single file\n                  if (filesLimit <= 1) {\n                    return {\n                      fileObjects: [].concat(newFileObjects[0])\n                    };\n                  } // Handle multiple files\n\n\n                  return {\n                    fileObjects: [].concat(state.fileObjects, newFileObjects)\n                  };\n                }, _this.notifyFileChange);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteFile = function (removedFileObj, removedFileObjIdx) {\n      event.stopPropagation();\n      var onDelete = _this.props.onDelete;\n      var fileObjects = _this.state.fileObjects; // Calculate remaining fileObjects array\n\n      var remainingFileObjs = fileObjects.filter(function (fileObject, i) {\n        return i !== removedFileObjIdx;\n      }); // Notify removed file\n\n      if (onDelete) {\n        onDelete(removedFileObj.file);\n      } // Update local state\n\n\n      _this.setState({\n        fileObjects: remainingFileObjs\n      }, _this.notifyFileChange);\n    };\n\n    _this.handleClose = function (evt) {\n      var _this$props = _this.props,\n          clearOnUnmount = _this$props.clearOnUnmount,\n          onClose = _this$props.onClose;\n\n      if (onClose) {\n        onClose(evt);\n      }\n\n      if (clearOnUnmount) {\n        _this.setState({\n          fileObjects: []\n        }, _this.notifyFileChange);\n      }\n    };\n\n    _this.handleSave = function (evt) {\n      var _this$props2 = _this.props,\n          clearOnUnmount = _this$props2.clearOnUnmount,\n          onSave = _this$props2.onSave;\n      var fileObjects = _this.state.fileObjects;\n\n      if (onSave) {\n        onSave(fileObjects.map(function (fileObject) {\n          return fileObject.file;\n        }), evt);\n      }\n\n      if (clearOnUnmount) {\n        _this.setState({\n          fileObjects: []\n        }, _this.notifyFileChange);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DropzoneDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadInitialFiles();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var clearOnUnmount = this.props.clearOnUnmount;\n\n      if (clearOnUnmount) {\n        this.setState({\n          fileObjects: []\n        }, this.notifyFileChange);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var fileObjects = this.state.fileObjects;\n      return /*#__PURE__*/createElement(DropzoneDialogBase, _extends({}, this.props, {\n        fileObjects: fileObjects,\n        onAdd: this.addFiles,\n        onDelete: this.deleteFile,\n        onClose: this.handleClose,\n        onSave: this.handleSave\n      }));\n    }\n  }]);\n\n  return DropzoneDialog;\n}(PureComponent);\n\nDropzoneDialog.defaultProps = {\n  clearOnUnmount: true,\n  filesLimit: 3,\n  initialFiles: []\n};\nprocess.env.NODE_ENV !== \"production\" ? DropzoneDialog.propTypes = _extends({}, DropzoneDialogBase.propTypes, {\n  /** Clear uploaded files when component is unmounted. */\n  clearOnUnmount: PropTypes.bool,\n\n  /** Maximum number of files that can be loaded into the dropzone. */\n  filesLimit: PropTypes.number,\n\n  /** List containing File objects or URL strings.<br/>\n   * **Note:** Please take care of CORS.\n  */\n  initialFiles: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.any])),\n\n  /**\n   * Fired when the user clicks the Submit button.\n   *\n   * @param {File[]} files All the files currently inside the Dropzone.\n   * @param {SyntheticEvent} event The react `SyntheticEvent`.\n   */\n  onSave: PropTypes.func\n}) : void 0;\nexport { DropzoneArea, DropzoneAreaBase$1 as DropzoneAreaBase, DropzoneDialog, DropzoneDialogBase };","map":{"version":3,"sources":["../src/helpers.js","../src/components/PreviewList.js","../src/components/SnackbarContentWrapper.js","../src/components/DropzoneAreaBase.js","../src/components/DropzoneArea.js","../src/components/DropzoneDialogBase.js","../src/components/DropzoneDialog.js"],"names":["file","size","filesize","response","fetch","data","metadata","type","filename","url","reader","resolve","event","reject","styles","palette","shape","spacing","root","imageContainer","position","zIndex","textAlign","opacity","image","height","width","maxWidth","color","transition","boxSizing","boxShadow","borderRadius","removeButton","top","right","fileObjects","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","classes","getPreviewIcon","clsx","fileObject","React.createElement","PropTypes","bool","name","variantIcon","success","warning","error","info","InfoIcon","successAlert","backgroundColor","theme","main","errorAlert","infoAlert","warningAlert","message","display","alignItems","marginRight","icon","fontSize","closeButton","SnackbarContentWrapper","className","onClose","variant","other","props","Icon","isRequired","backgroundPosition","minHeight","border","borderColor","cursor","overflow","active","animation","backgroundImage","backgroundSize","light","invalid","textContainer","text","marginBottom","marginTop","primary","defaultSnackbarAnchorOrigin","horizontal","vertical","defaultGetPreviewIcon","isImage","DropzoneAreaBase","React","state","openSnackBar","snackbarMessage","snackbarVariant","onAlert","handleDropAccepted","filesLimit","getFileAddedMessage","getFileLimitExceedMessage","onAdd","onDrop","acceptedFiles","fileObjs","readFile","msg","fileObj","handleDropRejected","getDropRejectMessage","maxFileSize","onDropRejected","rejectedFiles","getFileRemovedMessage","onDelete","removedFileObj","handleCloseSnackbar","alertSnackbarProps","disableRejectionFeedback","dropzoneClass","dropzoneParagraphClass","dropzoneProps","dropzoneText","inputProps","previewText","showAlerts","showFileNamesInPreview","showPreviews","showPreviewsInDropzone","acceptFiles","isMultiple","previewsVisible","previewsInDropzoneVisible","getRootProps","getInputProps","isDragActive","isDragReject","Array","anchorOrigin","autoHideDuration","rejectedFile","convertBytesToMbsOrKbs","FileObjectShape","any","func","splitDropzoneAreaProps","clearOnUnmount","initialFiles","onChange","dropzoneAreaProps","DropzoneArea","notifyFileChange","loadInitialFiles","createFileFromUrl","console","addFiles","newFileObjects","deleteFile","remainingFileObjs","i","cancelButtonText","dialogProps","dialogTitle","fullWidth","onSave","open","submitButtonText","allProps","DropzoneDialogBase","dropzoneDialogProps","splitDropzoneDialogProps","submitDisabled","DropzoneDialog","handleClose","handleSave"],"mappings":"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","sourcesContent":["export function isImage(file) {\n    if (file.type.split('/')[0] === 'image') {\n        return true;\n    }\n}\n\nexport function convertBytesToMbsOrKbs(filesize) {\n    let size = '';\n    if (filesize >= 1048576) {\n        size = (filesize / 1048576) + ' megabytes';\n    } else if (filesize >= 1024) {\n        size = (filesize / 1024) + ' kilobytes';\n    } else {\n        size = filesize + ' bytes';\n    }\n    return size;\n}\n\nexport async function createFileFromUrl(url) {\n    const response = await fetch(url);\n    const data = await response.blob();\n    const metadata = {type: data.type};\n    const filename = url.replace(/\\?.+/, '').split('/').pop();\n    return new File([data], filename, metadata);\n}\n\nexport function readFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            resolve(event?.target?.result);\n        };\n        reader.onerror = (event) => {\n            reader.abort();\n            reject(event);\n        };\n        reader.readAsDataURL(file);\n    });\n}\n","import Chip from '@mui/material/Chip';\nimport Fab from '@mui/material/Fab';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport withStyles from '@mui/styles/withStyles';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\nconst styles = ({palette, shape, spacing}) => ({\n    root: {},\n    imageContainer: {\n        position: 'relative',\n        zIndex: 10,\n        textAlign: 'center',\n        '&:hover $image': {\n            opacity: 0.3,\n        },\n        '&:hover $removeButton': {\n            opacity: 1,\n        },\n    },\n    image: {\n        height: 100,\n        width: 'initial',\n        maxWidth: '100%',\n        color: palette?.text?.primary,\n        transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\n        boxSizing: 'border-box',\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0 1px 6px, rgba(0, 0, 0, 0.12) 0 1px 4px',\n        borderRadius: shape?.borderRadius,\n        zIndex: 5,\n        opacity: 1,\n    },\n    removeButton: {\n        transition: '.5s ease',\n        position: 'absolute',\n        opacity: 0,\n        top: spacing?.(-1),\n        right: spacing?.(-1),\n        width: 40,\n        height: 40,\n        '&:focus': {\n            opacity: 1,\n        },\n    },\n});\n\nfunction PreviewList({\n    fileObjects,\n    handleRemove,\n    showFileNames,\n    useChipsForPreview,\n    previewChipProps,\n    previewGridClasses,\n    previewGridProps,\n    classes,\n    getPreviewIcon,\n}) {\n    if (useChipsForPreview) {\n        return (\n            <Grid\n                spacing={1}\n                direction=\"row\"\n                {...previewGridProps.container}\n                container={true}\n                className={clsx(classes.root, previewGridClasses.container)}\n            >\n                {fileObjects.map((fileObject, i) => {\n                    return (\n                        <Grid\n                            {...previewGridProps.item}\n                            item={true}\n                            key={`${fileObject.file?.name ?? 'file'}-${i}`}\n                            className={classes.imageContainer}\n                        >\n                            <Chip\n                                variant=\"outlined\"\n                                {...previewChipProps}\n                                label={fileObject.file.name}\n                                onDelete={handleRemove(i)}\n                            />\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        );\n    }\n\n    return (\n        <Grid\n            spacing={8}\n            {...previewGridProps.container}\n            container={true}\n            className={clsx(classes.root, previewGridClasses.container)}\n        >\n            {fileObjects.map((fileObject, i) => {\n                return (\n                    <Grid\n                        xs={4}\n                        {...previewGridProps.item}\n                        item={true}\n                        key={`${fileObject.file?.name ?? 'file'}-${i}`}\n                        className={clsx(classes.imageContainer, previewGridClasses.item)}\n                    >\n                        {getPreviewIcon(fileObject, classes)}\n\n                        {showFileNames && (\n                            <Typography variant=\"body1\" component=\"p\">\n                                {fileObject.file.name}\n                            </Typography>\n                        )}\n\n                        <Fab\n                            onClick={handleRemove(i)}\n                            aria-label=\"Delete\"\n                            className={classes.removeButton}\n                        >\n                            <DeleteIcon />\n                        </Fab>\n                    </Grid>\n                );\n            })}\n        </Grid>\n    );\n}\n\nPreviewList.propTypes = {\n    classes: PropTypes.object.isRequired,\n    fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n    getPreviewIcon: PropTypes.func.isRequired,\n    handleRemove: PropTypes.func.isRequired,\n    previewChipProps: PropTypes.object,\n    previewGridClasses: PropTypes.object,\n    previewGridProps: PropTypes.object,\n    showFileNames: PropTypes.bool,\n    useChipsForPreview: PropTypes.bool,\n};\n\nexport default withStyles(styles, {name: 'MuiDropzonePreviewList'})(PreviewList);\n","import IconButton from '@mui/material/IconButton';\nimport SnackbarContent from '@mui/material/SnackbarContent';\nimport {withStyles} from '@mui/styles';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport InfoIcon from '@mui/icons-material/Info';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles = (theme) => ({\n    successAlert: {\n        backgroundColor: theme?.palette?.success?.main,\n    },\n    errorAlert: {\n        backgroundColor: theme?.palette?.error?.main,\n    },\n    infoAlert: {\n        backgroundColor: theme?.palette?.info?.main,\n    },\n    warningAlert: {\n        backgroundColor: theme?.palette?.warning?.main,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n        '& > svg': {\n            marginRight: theme?.spacing?.(1),\n        },\n    },\n    icon: {\n        fontSize: 20,\n        opacity: 0.9,\n    },\n    closeButton: {},\n});\n\nconst SnackbarContentWrapper = React.forwardRef((props, ref) => {\n    const {classes, className, message, onClose, variant, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            ref={ref}\n            className={clsx(classes[`${variant}Alert`], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={classes.icon} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.closeButton}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n});\n\nSnackbarContentWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nSnackbarContentWrapper.displayName  = \"SnackbarContentWrapper\";\n\nexport default withStyles(styles, {name: 'MuiDropzoneSnackbar'})(SnackbarContentWrapper);\n","import Snackbar from '@mui/material/Snackbar';\nimport Typography from '@mui/material/Typography';\nimport withStyles from '@mui/styles/withStyles';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {Fragment} from 'react';\nimport Dropzone from 'react-dropzone';\nimport {convertBytesToMbsOrKbs, isImage, readFile} from '../helpers';\nimport PreviewList from './PreviewList';\nimport SnackbarContentWrapper from './SnackbarContentWrapper';\n\nconst styles = ({palette, shape, spacing}) => ({\n    '@keyframes progress': {\n        '0%': {\n            backgroundPosition: '0 0',\n        },\n        '100%': {\n            backgroundPosition: '-70px 0',\n        },\n    },\n    root: {\n        position: 'relative',\n        width: '100%',\n        minHeight: '250px',\n        backgroundColor: palette?.background?.paper,\n        border: 'dashed',\n        borderColor: palette?.divider,\n        borderRadius: shape?.borderRadius,\n        boxSizing: 'border-box',\n        cursor: 'pointer',\n        overflow: 'hidden',\n    },\n    active: {\n        animation: '$progress 2s linear infinite !important',\n        // eslint-disable-next-line max-len\n        backgroundImage: `repeating-linear-gradient(-45deg, ${palette?.background?.paper}, ${palette?.background?.paper} 25px, ${palette?.divider} 25px, ${palette?.divider} 50px)`,\n        backgroundSize: '150% 100%',\n        border: 'solid',\n        borderColor: palette?.primary?.light,\n    },\n    invalid: {\n        // eslint-disable-next-line max-len\n        backgroundImage: `repeating-linear-gradient(-45deg, ${palette?.error?.light}, ${palette?.error?.light} 25px, ${palette?.error?.dark} 25px, ${palette?.error?.dark} 50px)`,\n        borderColor: palette?.error?.main,\n    },\n    textContainer: {\n        textAlign: 'center',\n    },\n    text: {\n        marginBottom: spacing?.(3),\n        marginTop: spacing?.(3),\n    },\n    icon: {\n        width: 51,\n        height: 51,\n        color: palette?.text?.primary,\n    },\n});\n\nconst defaultSnackbarAnchorOrigin = {\n    horizontal: 'left',\n    vertical: 'bottom',\n};\n\nconst defaultGetPreviewIcon = (fileObject, classes) => {\n    if (isImage(fileObject.file)) {\n        return (<img\n            className={classes.image}\n            role=\"presentation\"\n            src={fileObject.data}\n        />);\n    }\n\n    return <AttachFileIcon className={classes.image} />;\n};\n\n/**\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\n */\nclass DropzoneAreaBase extends React.PureComponent {\n    state = {\n        openSnackBar: false,\n        snackbarMessage: '',\n        snackbarVariant: 'success',\n    };\n\n    notifyAlert() {\n        const {onAlert} = this.props;\n        const {openSnackBar, snackbarMessage, snackbarVariant} = this.state;\n        if (openSnackBar && onAlert) {\n            onAlert(snackbarMessage, snackbarVariant);\n        }\n    }\n\n    handleDropAccepted = async(acceptedFiles, evt) => {\n        const {fileObjects, filesLimit, getFileAddedMessage, getFileLimitExceedMessage, onAdd, onDrop} = this.props;\n\n        if (filesLimit > 1 && fileObjects.length + acceptedFiles.length > filesLimit) {\n            this.setState({\n                openSnackBar: true,\n                snackbarMessage: getFileLimitExceedMessage(filesLimit),\n                snackbarVariant: 'error',\n            }, this.notifyAlert);\n            return;\n        }\n\n        // Notify Drop event\n        if (onDrop) {\n            onDrop(acceptedFiles, evt);\n        }\n\n        // Retrieve fileObjects data\n        const fileObjs = await Promise.all(\n            acceptedFiles.map(async(file) => {\n                const data = await readFile(file);\n                return {\n                    file,\n                    data,\n                };\n            })\n        );\n\n        // Notify added files\n        if (onAdd) {\n            onAdd(fileObjs);\n        }\n\n        // Display message\n        const message = fileObjs.reduce((msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name), '');\n        this.setState({\n            openSnackBar: true,\n            snackbarMessage: message,\n            snackbarVariant: 'success',\n        }, this.notifyAlert);\n    }\n\n    handleDropRejected = (rejectedFiles, evt) => {\n        const {\n            acceptedFiles,\n            filesLimit,\n            fileObjects,\n            getDropRejectMessage,\n            getFileLimitExceedMessage,\n            maxFileSize,\n            onDropRejected,\n        } = this.props;\n\n        let message = '';\n        if (fileObjects.length + rejectedFiles.length > filesLimit) {\n            message = getFileLimitExceedMessage(filesLimit);\n        } else {\n            rejectedFiles.forEach((rejectedFile) => {\n                message = getDropRejectMessage(rejectedFile, acceptedFiles, maxFileSize);\n            });\n        }\n\n        if (onDropRejected) {\n            onDropRejected(rejectedFiles, evt);\n        }\n\n        this.setState({\n            openSnackBar: true,\n            snackbarMessage: message,\n            snackbarVariant: 'error',\n        }, this.notifyAlert);\n    }\n\n    handleRemove = (fileIndex) => (event) => {\n        event.stopPropagation();\n\n        const {fileObjects, getFileRemovedMessage, onDelete} = this.props;\n\n        // Find removed fileObject\n        const removedFileObj = fileObjects[fileIndex];\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj, fileIndex);\n        }\n\n        this.setState({\n            openSnackBar: true,\n            snackbarMessage: getFileRemovedMessage(removedFileObj.file.name),\n            snackbarVariant: 'info',\n        }, this.notifyAlert);\n    };\n\n    handleCloseSnackbar = () => {\n        this.setState({\n            openSnackBar: false,\n        });\n    };\n\n    render() {\n        const {\n            acceptedFiles,\n            alertSnackbarProps,\n            classes,\n            disableRejectionFeedback,\n            dropzoneClass,\n            dropzoneParagraphClass,\n            dropzoneProps,\n            dropzoneText,\n            fileObjects,\n            filesLimit,\n            getPreviewIcon,\n            Icon,\n            inputProps,\n            maxFileSize,\n            previewChipProps,\n            previewGridClasses,\n            previewGridProps,\n            previewText,\n            showAlerts,\n            showFileNames,\n            showFileNamesInPreview,\n            showPreviews,\n            showPreviewsInDropzone,\n            useChipsForPreview,\n        } = this.props;\n        const {openSnackBar, snackbarMessage, snackbarVariant} = this.state;\n\n        const acceptFiles = acceptedFiles?.join(',');\n        const isMultiple = filesLimit > 1;\n        const previewsVisible = showPreviews && fileObjects.length > 0;\n        const previewsInDropzoneVisible = showPreviewsInDropzone && fileObjects.length > 0;\n\n        return (\n            <Fragment>\n                <Dropzone\n                    {...dropzoneProps}\n                    accept={acceptFiles}\n                    onDropAccepted={this.handleDropAccepted}\n                    onDropRejected={this.handleDropRejected}\n                    maxSize={maxFileSize}\n                    multiple={isMultiple}\n                >\n                    {({getRootProps, getInputProps, isDragActive, isDragReject}) => (\n                        <div\n                            {...getRootProps({\n                                className: clsx(\n                                    classes.root,\n                                    dropzoneClass,\n                                    isDragActive && classes.active,\n                                    (!disableRejectionFeedback && isDragReject) && classes.invalid,\n                                ),\n                            })}\n                        >\n                            <input {...getInputProps(inputProps)} />\n\n                            <div className={classes.textContainer}>\n                                <Typography\n                                    variant=\"h5\"\n                                    component=\"p\"\n                                    className={clsx(classes.text, dropzoneParagraphClass)}\n                                >\n                                    {dropzoneText}\n                                </Typography>\n                                {Icon ? (\n                                    <Icon className={classes.icon} />\n                                ) : (\n                                    <CloudUploadIcon className={classes.icon} />\n                                )}\n                            </div>\n\n                            {previewsInDropzoneVisible &&\n                                <PreviewList\n                                    fileObjects={fileObjects}\n                                    handleRemove={this.handleRemove}\n                                    getPreviewIcon={getPreviewIcon}\n                                    showFileNames={showFileNames}\n                                    useChipsForPreview={useChipsForPreview}\n                                    previewChipProps={previewChipProps}\n                                    previewGridClasses={previewGridClasses}\n                                    previewGridProps={previewGridProps}\n                                />\n                            }\n                        </div>\n                    )}\n                </Dropzone>\n\n                {previewsVisible &&\n                    <Fragment>\n                        <Typography variant=\"subtitle1\" component=\"span\">\n                            {previewText}\n                        </Typography>\n\n                        <PreviewList\n                            fileObjects={fileObjects}\n                            handleRemove={this.handleRemove}\n                            getPreviewIcon={getPreviewIcon}\n                            showFileNames={showFileNamesInPreview}\n                            useChipsForPreview={useChipsForPreview}\n                            previewChipProps={previewChipProps}\n                            previewGridClasses={previewGridClasses}\n                            previewGridProps={previewGridProps}\n                        />\n                    </Fragment>\n                }\n\n                {((typeof showAlerts === 'boolean' && showAlerts) ||\n                    (Array.isArray(showAlerts) && showAlerts.includes(snackbarVariant))) &&\n                    <Snackbar\n                        anchorOrigin={defaultSnackbarAnchorOrigin}\n                        autoHideDuration={6000}\n                        {...alertSnackbarProps}\n                        open={openSnackBar}\n                        onClose={this.handleCloseSnackbar}\n                    >\n                        <SnackbarContentWrapper\n                            onClose={this.handleCloseSnackbar}\n                            variant={snackbarVariant}\n                            message={snackbarMessage}\n                        />\n                    </Snackbar>\n                }\n            </Fragment>\n        );\n    }\n}\n\nDropzoneAreaBase.defaultProps = {\n    acceptedFiles: [],\n    filesLimit: 3,\n    fileObjects: [],\n    maxFileSize: 3000000,\n    dropzoneText: 'Drag and drop a file here or click',\n    previewText: 'Preview:',\n    disableRejectionFeedback: false,\n    showPreviews: false, // By default previews show up under in the dialog and inside in the standalone\n    showPreviewsInDropzone: true,\n    showFileNames: false,\n    showFileNamesInPreview: false,\n    useChipsForPreview: false,\n    previewChipProps: {},\n    previewGridClasses: {},\n    previewGridProps: {},\n    showAlerts: true,\n    alertSnackbarProps: {\n        anchorOrigin: {\n            horizontal: 'left',\n            vertical: 'bottom',\n        },\n        autoHideDuration: 6000,\n    },\n    getFileLimitExceedMessage: (filesLimit) => (`Maximum allowed number of files exceeded. Only ${filesLimit} allowed`),\n    getFileAddedMessage: (fileName) => (`File ${fileName} successfully added.`),\n    getPreviewIcon: defaultGetPreviewIcon,\n    getFileRemovedMessage: (fileName) => (`File ${fileName} removed.`),\n    getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\n        let message = `File ${rejectedFile.name} was rejected. `;\n        if (!acceptedFiles.includes(rejectedFile.type)) {\n            message += 'File type not supported. ';\n        }\n        if (rejectedFile.size > maxFileSize) {\n            message += 'File is too big. Size limit is ' + convertBytesToMbsOrKbs(maxFileSize) + '. ';\n        }\n        return message;\n    },\n};\n\nexport const FileObjectShape = PropTypes.shape({\n    file: PropTypes.object,\n    data: PropTypes.any,\n});\n\nDropzoneAreaBase.propTypes = {\n    /** @ignore */\n    classes: PropTypes.object.isRequired,\n    /** A list of file types to accept.\n     * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\n     */\n    acceptedFiles: PropTypes.arrayOf(PropTypes.string),\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /** Icon to be displayed inside the dropzone area. */\n    Icon: PropTypes.elementType,\n    /** Currently loaded files. */\n    fileObjects: PropTypes.arrayOf(FileObjectShape),\n    /** Maximum file size (in bytes) that the dropzone will accept. */\n    maxFileSize: PropTypes.number,\n    /** Text inside the dropzone. */\n    dropzoneText: PropTypes.string,\n    /** Custom CSS class name for dropzone container. */\n    dropzoneClass: PropTypes.string,\n    /** Custom CSS class name for text inside the container. */\n    dropzoneParagraphClass: PropTypes.string,\n    /** Disable feedback effect when dropping rejected files. */\n    disableRejectionFeedback: PropTypes.bool,\n    /** Shows previews **BELOW** the dropzone. */\n    showPreviews: PropTypes.bool,\n    /** Shows preview **INSIDE** the dropzone area. */\n    showPreviewsInDropzone: PropTypes.bool,\n    /** Shows file name under the dropzone image. */\n    showFileNames: PropTypes.bool,\n    /** Shows file name under the image. */\n    showFileNamesInPreview: PropTypes.bool,\n    /** Uses deletable Material-UI Chip components to display file names. */\n    useChipsForPreview: PropTypes.bool,\n    /**\n     * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\n     *\n     * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\n     */\n    previewChipProps: PropTypes.object,\n    /**\n     * Custom CSS classNames for preview Grid components.<br/>\n     * Should be in the form {container: string, item: string, image: string}.\n     */\n    previewGridClasses: PropTypes.object,\n    /**\n     * Props to pass to the Material-UI Grid components.<br/>\n     * Should be in the form {container: GridProps, item: GridProps}.\n     *\n     * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\n     */\n    previewGridProps: PropTypes.object,\n    /** The label for the file preview section. */\n    previewText: PropTypes.string,\n    /**\n     * Shows styled Material-UI Snackbar when files are dropped, deleted or rejected.\n     *\n     * - can be a boolean (\"global\" `true` or `false` for all alerts).\n     * - can be an array, with values 'error', 'info', 'success' to select to view only certain alerts:\n     *  - showAlerts={['error']} for only errors.\n     *  - showAlerts={['error', 'info']} for both errors and info.\n     *  - showAlerts={['error', 'success', 'info']} is same as showAlerts={true}.\n     *  - showAlerts={[]} is same as showAlerts={false}.\n     */\n    showAlerts: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.arrayOf(PropTypes.oneOf(['error', 'success', 'info'])),\n    ]),\n    /**\n     * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\n     *\n     * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\n     */\n    alertSnackbarProps: PropTypes.object,\n    /**\n     * Props to pass to the Dropzone component.\n     *\n     * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\n     */\n    dropzoneProps: PropTypes.object,\n    /**\n     * Attributes applied to the input element.\n     *\n     * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\n     */\n    inputProps: PropTypes.object,\n    /**\n     * Get alert message to display when files limit is exceed.\n     *\n     * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\n     *\n     * @param {number} filesLimit The `filesLimit` currently set for the component.\n     */\n    getFileLimitExceedMessage: PropTypes.func,\n    /**\n     * Get alert message to display when a new file is added.\n     *\n     * *Default*: \"File ${fileName} successfully added.\"\n     *\n     * @param {string} fileName The newly added file name.\n     */\n    getFileAddedMessage: PropTypes.func,\n    /**\n     * Get alert message to display when a file is removed.\n     *\n     * *Default*: \"File ${fileName} removed.\"\n     *\n     * @param {string} fileName The name of the removed file.\n     */\n    getFileRemovedMessage: PropTypes.func,\n    /**\n     * Get alert message to display when a file is rejected onDrop.\n     *\n     * *Default*: \"File ${rejectedFile.name} was rejected.\"\n     *\n     * @param {Object} rejectedFile The file that got rejected\n     * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\n     * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\n     */\n    getDropRejectMessage: PropTypes.func,\n    /**\n     * A function which determines which icon to display for a file preview.\n     *\n     * *Default*: If its an image then displays a preview the image, otherwise it will display an attachment icon\n     *\n     * @param {FileObject} objectFile The file which the preview will belong to\n     * @param {Object} classes The classes for the file preview icon, in the default case we use the 'image' className.\n     */\n    getPreviewIcon: PropTypes.func,\n    /**\n     * Fired when new files are added to dropzone.\n     *\n     * @param {FileObject[]} newFiles The new files added to the dropzone.\n     */\n    onAdd: PropTypes.func,\n    /**\n     * Fired when a file is deleted from the previews panel.\n     *\n     * @param {FileObject} deletedFileObject The file that was removed.\n     * @param {number} index The index of the removed file object.\n     */\n    onDelete: PropTypes.func,\n    /**\n     * Fired when the user drops files into the dropzone.\n     *\n     * @param {File[]} droppedFiles All the files dropped into the dropzone.\n     * @param {Event} event The react-dropzone drop event.\n     */\n    onDrop: PropTypes.func,\n    /**\n     * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\n     *\n     * @param {File[]} rejectedFiles All the rejected files.\n     * @param {Event} event The react-dropzone drop event.\n     */\n    onDropRejected: PropTypes.func,\n    /**\n     * Fired when an alert is triggered.\n     *\n     * @param {string} message Alert message.\n     * @param {string} variant One of \"error\", \"info\", \"success\".\n     */\n    onAlert: PropTypes.func,\n};\n\nexport default withStyles(styles, {name: 'MuiDropzoneArea'})(DropzoneAreaBase);\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {createFileFromUrl, readFile} from '../helpers';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\nconst splitDropzoneAreaProps = (props) => {\n    const {clearOnUnmount, initialFiles, onChange, onDelete, ...dropzoneAreaProps} = props;\n    return [{clearOnUnmount, initialFiles, onChange, onDelete}, dropzoneAreaProps];\n};\n\n/**\n * This components creates an uncontrolled Material-UI Dropzone, with previews and snackbar notifications.\n *\n * It supports all props of `DropzoneAreaBase` but keeps the files state internally.\n *\n * **Note** To listen to file changes use `onChange` event handler and notice that `onDelete` returns a `File` instance instead of `FileObject`.\n */\nclass DropzoneArea extends React.PureComponent {\n    state = {\n        fileObjects: [],\n    }\n\n    componentDidMount() {\n        this.loadInitialFiles();\n    }\n\n    componentWillUnmount() {\n        const {clearOnUnmount} = this.props;\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    notifyFileChange = () => {\n        const {onChange} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file));\n        }\n    }\n\n    loadInitialFiles = async() => {\n        const {initialFiles} = this.props;\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            this.setState((state) => ({\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    fileObjs\n                ),\n            }), this.notifyFileChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    addFiles = async(newFileObjects) => {\n        const {filesLimit} = this.props;\n        // Update component state\n        this.setState((state) => {\n            // Handle a single file\n            if (filesLimit <= 1) {\n                return {\n                    fileObjects: [].concat(newFileObjects[0]),\n                };\n            }\n\n            // Handle multiple files\n            return {\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    newFileObjects\n                ),\n            };\n        }, this.notifyFileChange);\n    }\n\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        const {onDelete} = this.props;\n        const {fileObjects} = this.state;\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file);\n        }\n\n        // Update local state\n        this.setState({\n            fileObjects: remainingFileObjs,\n        }, this.notifyFileChange);\n    }\n\n    render() {\n        const [, dropzoneAreaProps] = splitDropzoneAreaProps(this.props);\n        const {fileObjects} = this.state;\n\n        return (\n            <DropzoneAreaBase\n                {...dropzoneAreaProps}\n                fileObjects={fileObjects}\n                onAdd={this.addFiles}\n                onDelete={this.deleteFile}\n            />\n        );\n    }\n}\n\nDropzoneArea.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneArea.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /**\n     * Fired when the files inside dropzone change.\n     *\n     * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Fired when a file is deleted from the previews panel.\n     *\n     * @param {File} deletedFile The file that was removed.\n     */\n    onDelete: PropTypes.func,\n};\n\nexport default DropzoneArea;\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport DropzoneAreaBase from './DropzoneAreaBase';\n\n// Split props related to DropzoneDialog from DropzoneArea ones\nfunction splitDropzoneDialogProps(allProps) {\n    const {\n        cancelButtonText,\n        dialogProps,\n        dialogTitle,\n        fullWidth,\n        maxWidth,\n        onClose,\n        onSave,\n        open,\n        submitButtonText,\n        ...dropzoneAreaProps\n    } = allProps;\n\n    return [\n        {\n            cancelButtonText,\n            dialogProps,\n            dialogTitle,\n            fullWidth,\n            maxWidth,\n            onClose,\n            onSave,\n            open,\n            submitButtonText,\n        },\n        dropzoneAreaProps,\n    ];\n}\n\n/**\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\n *\n * It supports all the Props and Methods from `DropzoneAreaBase`.\n */\nclass DropzoneDialogBase extends React.PureComponent {\n    render() {\n        const [dropzoneDialogProps, dropzoneAreaProps] = splitDropzoneDialogProps(this.props);\n        const {\n            cancelButtonText,\n            dialogProps,\n            dialogTitle,\n            fullWidth,\n            maxWidth,\n            onClose,\n            onSave,\n            open,\n            submitButtonText,\n        } = dropzoneDialogProps;\n\n        // Submit button state\n        const submitDisabled = dropzoneAreaProps.fileObjects.length === 0;\n\n        return (\n            <Dialog\n                {...dialogProps}\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                onClose={onClose}\n                open={open}\n            >\n                <DialogTitle>{dialogTitle}</DialogTitle>\n\n                <DialogContent>\n                    <DropzoneAreaBase\n                        {...dropzoneAreaProps}\n                    />\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        color=\"primary\"\n                        onClick={onClose}\n                    >\n                        {cancelButtonText}\n                    </Button>\n\n                    <Button\n                        color=\"primary\"\n                        disabled={submitDisabled}\n                        onClick={onSave}\n                    >\n                        {submitButtonText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDropzoneDialogBase.defaultProps = {\n    open: false,\n    dialogTitle: 'Upload file',\n    dialogProps: {},\n    fullWidth: true,\n    maxWidth: 'sm',\n    cancelButtonText: 'Cancel',\n    submitButtonText: 'Submit',\n    showPreviews: true,\n    showPreviewsInDropzone: false,\n    showFileNamesInPreview: true,\n};\n\nDropzoneDialogBase.propTypes = {\n    ...DropzoneAreaBase.propTypes,\n    /** Sets whether the dialog is open or closed. */\n    open: PropTypes.bool,\n    /** The Dialog title. */\n    dialogTitle: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n    ]),\n    /**\n     * Props to pass to the Material-UI Dialog components.\n     * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\n     */\n    dialogProps: PropTypes.object,\n    /**\n     * If `true`, the dialog stretches to `maxWidth`.<br/>\n     * Notice that the dialog width grow is limited by the default margin.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\n     * Set to `false` to disable `maxWidth`.\n     */\n    maxWidth: PropTypes.string,\n    /** Cancel button text in dialog. */\n    cancelButtonText: PropTypes.string,\n    /** Submit button text in dialog. */\n    submitButtonText: PropTypes.string,\n    /**\n     * Fired when the modal is closed.\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onClose: PropTypes.func,\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onSave: PropTypes.func,\n    /**\n     * Shows previews **BELOW** the dropzone.<br/>\n     * **Note:** By default previews show up under in the Dialog and inside in the standalone.\n     */\n    showPreviews: PropTypes.bool,\n    /** Shows preview **INSIDE** the dropzone area. */\n    showPreviewsInDropzone: PropTypes.bool,\n    /** Shows file name under the image. */\n    showFileNamesInPreview: PropTypes.bool,\n};\n\nexport default DropzoneDialogBase;\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {createFileFromUrl, readFile} from '../helpers';\n\nimport DropzoneDialogBase from './DropzoneDialogBase';\n\n\n/**\n * This component provides an uncontrolled version of the DropzoneDialogBase component.\n *\n * It supports all the Props and Methods from `DropzoneDialogBase` but keeps the files state internally.\n *\n * **Note** The `onSave` handler also returns `File[]` with all the accepted files.\n */\nclass DropzoneDialog extends React.PureComponent {\n    state = {\n        fileObjects: [],\n    }\n\n    componentDidMount() {\n        this.loadInitialFiles();\n    }\n\n    componentWillUnmount() {\n        const {clearOnUnmount} = this.props;\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    notifyFileChange = () => {\n        const {onChange} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file));\n        }\n    }\n\n    loadInitialFiles = async() => {\n        const {initialFiles} = this.props;\n        try {\n            const fileObjs = await Promise.all(\n                initialFiles.map(async(initialFile) => {\n                    let file;\n                    if (typeof initialFile === 'string' ) {\n                        file = await createFileFromUrl(initialFile);\n                    } else {\n                        file = initialFile;\n                    }\n                    const data = await readFile(file);\n\n                    return {\n                        file,\n                        data,\n                    };\n                })\n            );\n\n            this.setState((state) => ({\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    fileObjs\n                ),\n            }), this.notifyFileChange);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    addFiles = async(newFileObjects) => {\n        const {filesLimit} = this.props;\n        // Update component state\n        this.setState((state) => {\n            // Handle a single file\n            if (filesLimit <= 1) {\n                return {\n                    fileObjects: [].concat(newFileObjects[0]),\n                };\n            }\n\n            // Handle multiple files\n            return {\n                fileObjects: [].concat(\n                    state.fileObjects,\n                    newFileObjects\n                ),\n            };\n        }, this.notifyFileChange);\n    }\n\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\n        event.stopPropagation();\n\n        const {onDelete} = this.props;\n        const {fileObjects} = this.state;\n\n        // Calculate remaining fileObjects array\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n            return i !== removedFileObjIdx;\n        });\n\n        // Notify removed file\n        if (onDelete) {\n            onDelete(removedFileObj.file);\n        }\n\n        // Update local state\n        this.setState({\n            fileObjects: remainingFileObjs,\n        }, this.notifyFileChange);\n    }\n\n    handleClose = (evt) => {\n        const {clearOnUnmount, onClose} = this.props;\n\n        if (onClose) {\n            onClose(evt);\n        }\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    handleSave = (evt) => {\n        const {clearOnUnmount, onSave} = this.props;\n        const {fileObjects} = this.state;\n\n        if (onSave) {\n            onSave(fileObjects.map((fileObject) => fileObject.file), evt);\n        }\n\n        if (clearOnUnmount) {\n            this.setState({\n                fileObjects: [],\n            }, this.notifyFileChange);\n        }\n    }\n\n    render() {\n        const {fileObjects} = this.state;\n\n        return (\n            <DropzoneDialogBase\n                {...this.props}\n                fileObjects={fileObjects}\n                onAdd={this.addFiles}\n                onDelete={this.deleteFile}\n                onClose={this.handleClose}\n                onSave={this.handleSave}\n            />\n        );\n    }\n}\n\nDropzoneDialog.defaultProps = {\n    clearOnUnmount: true,\n    filesLimit: 3,\n    initialFiles: [],\n};\n\nDropzoneDialog.propTypes = {\n    ...DropzoneDialogBase.propTypes,\n    /** Clear uploaded files when component is unmounted. */\n    clearOnUnmount: PropTypes.bool,\n    /** Maximum number of files that can be loaded into the dropzone. */\n    filesLimit: PropTypes.number,\n    /** List containing File objects or URL strings.<br/>\n     * **Note:** Please take care of CORS.\n    */\n    initialFiles: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.any,\n        ])\n    ),\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {File[]} files All the files currently inside the Dropzone.\n     * @param {SyntheticEvent} event The react `SyntheticEvent`.\n     */\n    onSave: PropTypes.func,\n};\n\nexport default DropzoneDialog;\n"]},"metadata":{},"sourceType":"module"}