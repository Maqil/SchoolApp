{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/components/AcErrorDialog/AcErrorDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { error } from \"../../constants/bindings\";\nimport { useAuth } from \"../../providers/Auth\";\nimport { useApiError } from \"../../providers/ApiErrorProvider\";\nimport AcDialog from \"../AcDialog/AcDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AcErrorDialog(_ref) {\n  _s();\n\n  let {\n    errorCode\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const user = useAuth();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = () => setOpen(false);\n\n  const {\n    setErrorCode\n  } = useApiError();\n  useEffect(() => {\n    if (errorCode !== 0) {\n      console.log(\"if: \", errorCode);\n      setOpen(true);\n    } else {\n      console.log(\"else: \", errorCode);\n      setOpen(false);\n    }\n  }, [errorCode]);\n\n  const handleLogout = () => {\n    user.signOut();\n    setOpen(false);\n  };\n\n  const handleRefresh = () => {\n    window.location.reload();\n  };\n\n  const handleLogin = () => {\n    localStorage.clear(); //user.signIn();\n  };\n\n  const handleCloseContactFrom = () => {\n    setErrorCode(0);\n    setOpen(false);\n  };\n\n  const defaultErrorData = {\n    icon: \"icon-sad-emoji\",\n    title: t(\"errorDefault.title\"),\n    description: t(\"errorDefault.description\"),\n    actionLabel: t(\"errorDefault.buttonText\"),\n    handleAction: handleLogout,\n    secondaryActionLabel: t(\"errorDefault.secondaryButtonText\"),\n    handleSecondaryAction: handleRefresh\n  };\n  const authErrorData = {\n    title: t(\"errorAuth.title\"),\n    description: t(\"errorAuth.description\"),\n    actionLabel: t(\"errorAuth.buttonText\"),\n    handleAction: handleLogin\n  };\n  const timeoutErrorData = {\n    icon: \"icon-sad-emoji\",\n    title: t(\"errorTimeout.title\"),\n    description: t(\"errorTimeout.description\"),\n    support: t(\"errorTimeout.support\"),\n    actionLabel: t(\"errorTimeout.buttonText\"),\n    handleAction: handleRefresh\n  };\n  const contactFormErrorData = {\n    icon: \"icon-sad-emoji\",\n    title: t(\"errorContactForm.title\"),\n    description: t(\"errorContactForm.description\"),\n    actionLabel: t(\"errorContactForm.buttonText\"),\n    handleAction: handleCloseContactFrom\n  };\n\n  const getData = () => {\n    if (errorCode === error.AUTH || errorCode === error.FORBIDDEN) {\n      return authErrorData;\n    } else if (errorCode === error.TIME_OUT) {\n      return timeoutErrorData;\n    } else if (errorCode === error.CREATE_CASE) {\n      return contactFormErrorData;\n    } else {\n      return defaultErrorData;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AcDialog, {\n      open: open,\n      onClose: handleClose,\n      data: getData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(AcErrorDialog, \"uioAgn1ETi9jG+zb4GhxUmqCdIM=\", false, function () {\n  return [useTranslation, useAuth, useApiError];\n});\n\n_c = AcErrorDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"AcErrorDialog\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/components/AcErrorDialog/AcErrorDialog.tsx"],"names":["React","useEffect","useState","useTranslation","error","useAuth","useApiError","AcDialog","AcErrorDialog","errorCode","t","user","open","setOpen","handleClose","setErrorCode","console","log","handleLogout","signOut","handleRefresh","window","location","reload","handleLogin","localStorage","clear","handleCloseContactFrom","defaultErrorData","icon","title","description","actionLabel","handleAction","secondaryActionLabel","handleSecondaryAction","authErrorData","timeoutErrorData","support","contactFormErrorData","getData","AUTH","FORBIDDEN","TIME_OUT","CREATE_CASE"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { error } from \"../../constants/bindings\";\nimport AcDialogInterface from \"../../interfaces/AcDialogInterface\";\nimport { useAuth } from \"../../providers/Auth\";\nimport { useApiError } from \"../../providers/ApiErrorProvider\";\nimport AcDialog from \"../AcDialog/AcDialog\";\nimport { createTrue } from \"typescript\";\n\nexport default function AcErrorDialog({ errorCode }) {\n  const { t } = useTranslation();\n  const user = useAuth();\n\n  const [open, setOpen] = useState(true);\n  const handleClose = () => setOpen(false);\n  const {setErrorCode} = useApiError();\n\n  useEffect(() => {\n    if (errorCode !== 0) {\n      console.log(\"if: \", errorCode)\n      setOpen(true)\n    } else {\n      console.log(\"else: \", errorCode)\n      setOpen(false)\n    }\n  }, [errorCode]);\n\n  const handleLogout = () => {\n    user.signOut();\n    setOpen(false);\n  };\n\n  const handleRefresh = () => {\n    window.location.reload();\n  };\n\n  const handleLogin = () => {\n    localStorage.clear();\n    //user.signIn();\n  };\n\n  const handleCloseContactFrom = () => {\n    setErrorCode(0)\n    setOpen(false);\n  }\n\n  const defaultErrorData: AcDialogInterface = {\n    icon: \"icon-sad-emoji\",\n    title: t(\"errorDefault.title\"),\n    description: t(\"errorDefault.description\"),\n    actionLabel: t(\"errorDefault.buttonText\"),\n    handleAction: handleLogout,\n    secondaryActionLabel: t(\"errorDefault.secondaryButtonText\"),\n    handleSecondaryAction: handleRefresh\n  };\n\n  const authErrorData: AcDialogInterface = {\n    title: t(\"errorAuth.title\"),\n    description: t(\"errorAuth.description\"),\n    actionLabel: t(\"errorAuth.buttonText\"),\n    handleAction: handleLogin\n  };\n\n  const timeoutErrorData: AcDialogInterface = {\n    icon: \"icon-sad-emoji\",\n    title: t(\"errorTimeout.title\"),\n    description: t(\"errorTimeout.description\"),\n    support: t(\"errorTimeout.support\"),\n    actionLabel: t(\"errorTimeout.buttonText\"),\n    handleAction: handleRefresh\n  };\n\n  const contactFormErrorData: AcDialogInterface = {\n    icon: \"icon-sad-emoji\",\n    title: t(\"errorContactForm.title\"),\n    description: t(\"errorContactForm.description\"),\n    actionLabel: t(\"errorContactForm.buttonText\"),\n    handleAction: handleCloseContactFrom\n  };\n\n  const getData = () => {\n    if (errorCode === error.AUTH || errorCode === error.FORBIDDEN) {\n      return authErrorData;\n    } else if (errorCode === error.TIME_OUT) {\n      return timeoutErrorData;\n    } else if (errorCode === error.CREATE_CASE) {\n      return contactFormErrorData;\n    } else {\n      return defaultErrorData;\n    }\n  };\n\n  return (\n    <>\n      <AcDialog open={open} onClose={handleClose} data={getData()} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}