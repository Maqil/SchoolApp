{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/providers/ApiErrorProvider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\";\nimport { error as constError } from \"../constants/bindings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiErrorContext = /*#__PURE__*/createContext({\n  error: 0,\n  setErrorCode: statusCode => {}\n});\nexport const ApiErrorProvider = props => {\n  _s();\n\n  const [error, setError] = useState(0);\n\n  const setErrorCode = statusCode => {\n    if (error && error !== constError.CREATE_CASE) {\n      alert(\"return;\");\n      return;\n    }\n\n    setError(statusCode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ApiErrorContext.Provider, {\n    value: {\n      error,\n      setErrorCode\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApiErrorProvider, \"lo0WYOVongSNlv4/A5992WoFhas=\");\n\n_c = ApiErrorProvider;\nexport const useApiError = () => {\n  _s2();\n\n  const context = React.useContext(ApiErrorContext);\n  return context;\n};\n\n_s2(useApiError, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiErrorProvider\");","map":{"version":3,"sources":["/Users/mohamedmaqil/Desktop/RIVO/rivo-portal-ui/src/providers/ApiErrorProvider.tsx"],"names":["React","useState","createContext","error","constError","ApiErrorContext","setErrorCode","statusCode","ApiErrorProvider","props","setError","CREATE_CASE","alert","children","useApiError","context","useContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,SAASC,KAAK,IAAIC,UAAlB,QAAoC,uBAApC;;AAEA,MAAMC,eAAe,gBAAGH,aAAa,CAAC;AACpCC,EAAAA,KAAK,EAAE,CAD6B;AAEpCG,EAAAA,YAAY,EAAEC,UAAU,IAAI,CAAE;AAFM,CAAD,CAArC;AAKA,OAAO,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAAA;;AACvC,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMK,YAAY,GAAGC,UAAU,IAAI;AACjC,QAAIJ,KAAK,IAAIA,KAAK,KAAKC,UAAU,CAACO,WAAlC,EAA+C;AAC7CC,MAAAA,KAAK,CAAC,SAAD,CAAL;AACA;AACD;;AACDF,IAAAA,QAAQ,CAACH,UAAD,CAAR;AACD,GAND;;AAQA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAF;AAASG,MAAAA;AAAT,KAAjC;AAAA,cACGG,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhBM;;GAAML,gB;;KAAAA,gB;AAkBb,OAAO,MAAMM,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAMC,OAAO,GAAGf,KAAK,CAACgB,UAAN,CAAiBX,eAAjB,CAAhB;AACA,SAAOU,OAAP;AACD,CAHM;;IAAMD,W","sourcesContent":["import React, { useState, createContext } from \"react\";\nimport { error as constError } from \"../constants/bindings\";\n\nconst ApiErrorContext = createContext({\n  error: 0,\n  setErrorCode: statusCode => {}\n});\n\nexport const ApiErrorProvider = props => {\n  const [error, setError] = useState(0);\n\n  const setErrorCode = statusCode => {\n    if (error && error !== constError.CREATE_CASE) {\n      alert(\"return;\")\n      return;\n    }\n    setError(statusCode);\n  };\n\n  return (\n    <ApiErrorContext.Provider value={{ error, setErrorCode }}>\n      {props.children}\n    </ApiErrorContext.Provider>\n  );\n};\n\nexport const useApiError = () => {\n  const context = React.useContext(ApiErrorContext);\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}